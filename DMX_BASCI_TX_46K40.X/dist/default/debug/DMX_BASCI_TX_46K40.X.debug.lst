

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Nov 10 11:09:01 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           	psect	idataCOMRAM
    80  001D70                     __pidataCOMRAM:
    81                           	opt stack 0
    82                           
    83                           ;initializer for _rub_CDM_FCT_Index
    84  001D70  01                 	db	1
    85                           
    86                           ;initializer for _rub_HDDelay
    87  001D71  05                 	db	5
    88                           
    89                           ;initializer for _rub_HDInitState
    90  001D72  03                 	db	3
    91                           
    92                           	psect	idataBANK0
    93  001B74                     __pidataBANK0:
    94                           	opt stack 0
    95                           
    96                           ;initializer for _raub_DataBufferLine1
    97  001B74  46                 	db	70
    98  001B75  4F                 	db	79
    99  001B76  42                 	db	66
   100  001B77  20                 	db	32
   101  001B78  54                 	db	84
   102  001B79  65                 	db	101
   103  001B7A  73                 	db	115
   104  001B7B  74                 	db	116
   105  001B7C  65                 	db	101
   106  001B7D  72                 	db	114
   107  001B7E  20                 	db	32
   108  001B7F  20                 	db	32
   109  001B80  20                 	db	32
   110  001B81  20                 	db	32
   111  001B82  20                 	db	32
   112  001B83  20                 	db	32
   113                           
   114                           ;initializer for _raub_DataBufferLine2
   115  001B84  4F                 	db	79
   116  001B85  6D                 	db	109
   117  001B86  61                 	db	97
   118  001B87  72                 	db	114
   119  001B88  20                 	db	32
   120  001B89  53                 	db	83
   121  001B8A  65                 	db	101
   122  001B8B  76                 	db	118
   123  001B8C  69                 	db	105
   124  001B8D  6C                 	db	108
   125  001B8E  6C                 	db	108
   126  001B8F  61                 	db	97
   127  001B90  20                 	db	32
   128  001B91  20                 	db	32
   129  001B92  20                 	db	32
   130  001B93  20                 	db	32
   131                           
   132                           ;initializer for _euw_MaxCount
   133  001B94  000A               	dw	10
   134                           
   135                           ;initializer for _euw_OnCFG
   136  001B96  000A               	dw	10
   137                           
   138                           ;initializer for _rptr_Cmd_Functions
   139  001B98  62                 	db	low _app_CDM_DMX_Value_CHK_CON
   140  001B99  16                 	db	high _app_CDM_DMX_Value_CHK_CON
   141                           
   142                           ;initializer for _rptr_value_storage
   143  001B9A  A2                 	db	low _ruw_channel
   144  001B9B  00                 	db	high _ruw_channel
   145                           
   146                           	psect	smallconst
   147  000F00                     __psmallconst:
   148                           	opt stack 0
   149  000F00  00                 	db	0
   150  000F01                     _tasks_list:
   151                           	opt stack 0
   152  000F01  46                 	db	low _periodic_task_tk
   153  000F02  1D                 	db	high _periodic_task_tk
   154  000F03  1E                 	db	low _periodic_task_2tk
   155  000F04  1D                 	db	high _periodic_task_2tk
   156  000F05  7C                 	db	low _periodic_task_4tk
   157  000F06  1D                 	db	high _periodic_task_4tk
   158  000F07  7A                 	db	low _periodic_task_8tk
   159  000F08  1D                 	db	high _periodic_task_8tk
   160  000F09  78                 	db	low _TASK_DUMMY
   161  000F0A  1D                 	db	high _TASK_DUMMY
   162  000F0B  76                 	db	low _periodic_task_32tk
   163  000F0C  1D                 	db	high _periodic_task_32tk
   164  000F0D  78                 	db	low _TASK_DUMMY
   165  000F0E  1D                 	db	high _TASK_DUMMY
   166  000F0F  78                 	db	low _TASK_DUMMY
   167  000F10  1D                 	db	high _TASK_DUMMY
   168  000F11  78                 	db	low _TASK_DUMMY
   169  000F12  1D                 	db	high _TASK_DUMMY
   170  000F13  78                 	db	low _TASK_DUMMY
   171  000F14  1D                 	db	high _TASK_DUMMY
   172  000F15  74                 	db	low _periodic_task_1024tk
   173  000F16  1D                 	db	high _periodic_task_1024tk
   174  000F17  78                 	db	low _TASK_DUMMY
   175  000F18  1D                 	db	high _TASK_DUMMY
   176  000F19  78                 	db	low _TASK_DUMMY
   177  000F1A  1D                 	db	high _TASK_DUMMY
   178  000F1B  78                 	db	low _TASK_DUMMY
   179  000F1C  1D                 	db	high _TASK_DUMMY
   180  000F1D  78                 	db	low _TASK_DUMMY
   181  000F1E  1D                 	db	high _TASK_DUMMY
   182  000F1F  78                 	db	low _TASK_DUMMY
   183  000F20  1D                 	db	high _TASK_DUMMY
   184  000F21                     __end_of_tasks_list:
   185                           	opt stack 0
   186  000F21                     _rub_7segSymbols:
   187                           	opt stack 0
   188  000F21  C0                 	db	192
   189  000F22  F9                 	db	249
   190  000F23  A4                 	db	164
   191  000F24  B0                 	db	176
   192  000F25  99                 	db	153
   193  000F26  92                 	db	146
   194  000F27  82                 	db	130
   195  000F28  F8                 	db	248
   196  000F29  80                 	db	128
   197  000F2A  98                 	db	152
   198  000F2B  88                 	db	136
   199  000F2C  83                 	db	131
   200  000F2D  C6                 	db	198
   201  000F2E  A1                 	db	161
   202  000F2F  86                 	db	134
   203  000F30  8E                 	db	142
   204  000F31                     __end_of_rub_7segSymbols:
   205                           	opt stack 0
   206  000F31  00                 	db	0	; dummy byte at the end
   207  0000                     
   208                           	psect	nvCOMRAM
   209  00004E                     __pnvCOMRAM:
   210                           	opt stack 0
   211  00004E                     _timer1ReloadVal:
   212                           	opt stack 0
   213  00004E                     	ds	2
   214                           
   215                           	psect	nvBANK0
   216  0000DD                     __pnvBANK0:
   217                           	opt stack 0
   218  0000DD                     _TMR1_InterruptHandler:
   219                           	opt stack 0
   220  0000DD                     	ds	2
   221  0000DF                     _TMR2_InterruptHandler:
   222                           	opt stack 0
   223  0000DF                     	ds	2
   224  0000E1                     _eusart1TxBufferRemaining:
   225                           	opt stack 0
   226  0000E1                     	ds	1
   227  0000E2                     _eusart2TxBufferRemaining:
   228                           	opt stack 0
   229  0000E2                     	ds	1
   230  0000                     _BAUD2CON	set	3743
   231  0000                     _IPR3bits	set	3773
   232  0000                     _IPR4bits	set	3774
   233  0000                     _OSCCON1	set	3800
   234  0000                     _OSCCON3	set	3802
   235  0000                     _OSCEN	set	3804
   236  0000                     _OSCFRQ	set	3806
   237  0000                     _OSCTUNE	set	3805
   238  0000                     _PIE3bits	set	3781
   239  0000                     _PIE4bits	set	3782
   240  0000                     _PIR3bits	set	3789
   241  0000                     _PIR4bits	set	3790
   242  0000                     _PIR7bits	set	3793
   243  0000                     _PPSLOCK	set	3744
   244  0000                     _PPSLOCKbits	set	3744
   245  0000                     _RA0PPS	set	3815
   246  0000                     _RB0PPS	set	3823
   247  0000                     _RC2REG	set	3737
   248  0000                     _RC2STA	set	3741
   249  0000                     _RC2STAbits	set	3741
   250  0000                     _RX2PPSbits	set	3725
   251  0000                     _SP2BRGH	set	3740
   252  0000                     _SP2BRGL	set	3739
   253  0000                     _T2INPPSbits	set	3755
   254  0000                     _TX2REG	set	3738
   255  0000                     _TX2STA	set	3742
   256  0000                     _TMR2IE	set	30257
   257  0000                     _TX1IE	set	30252
   258  0000                     _ANSELA	set	3857
   259  0000                     _ANSELB	set	3865
   260  0000                     _ANSELC	set	3873
   261  0000                     _ANSELD	set	3878
   262  0000                     _ANSELE	set	3886
   263  0000                     _ODCONA	set	3855
   264  0000                     _ODCONB	set	3863
   265  0000                     _ODCONC	set	3871
   266  0000                     _ODCOND	set	3876
   267  0000                     _ODCONE	set	3884
   268  0000                     _WPUA	set	3856
   269  0000                     _WPUB	set	3864
   270  0000                     _WPUC	set	3872
   271  0000                     _WPUD	set	3877
   272  0000                     _WPUE	set	3885
   273  0000                     _BAUD1CON	set	3999
   274  0000                     _CCPTMRSbits	set	4014
   275  0000                     _INTCONbits	set	4082
   276  0000                     _LATA	set	3971
   277  0000                     _LATB	set	3972
   278  0000                     _LATC	set	3973
   279  0000                     _LATD	set	3974
   280  0000                     _LATE	set	3975
   281  0000                     _NVMADRH	set	3967
   282  0000                     _NVMADRL	set	3966
   283  0000                     _NVMCON1bits	set	3969
   284  0000                     _NVMCON2	set	3970
   285  0000                     _NVMDAT	set	3968
   286  0000                     _PORTAbits	set	3981
   287  0000                     _PORTBbits	set	3982
   288  0000                     _PORTCbits	set	3983
   289  0000                     _PR2	set	4028
   290  0000                     _PR4	set	4022
   291  0000                     _PWM3CON	set	4005
   292  0000                     _PWM3DCH	set	4004
   293  0000                     _PWM3DCL	set	4003
   294  0000                     _RC1REG	set	3993
   295  0000                     _RC1STA	set	3997
   296  0000                     _RC1STAbits	set	3997
   297  0000                     _SP1BRGH	set	3996
   298  0000                     _SP1BRGL	set	3995
   299  0000                     _T1CLK	set	4050
   300  0000                     _T1CON	set	4047
   301  0000                     _T1CONbits	set	4047
   302  0000                     _T1GATE	set	4049
   303  0000                     _T1GCON	set	4048
   304  0000                     _T1GCONbits	set	4048
   305  0000                     _T2CLKCON	set	4031
   306  0000                     _T2CON	set	4029
   307  0000                     _T2CONbits	set	4029
   308  0000                     _T2HLT	set	4030
   309  0000                     _T2HLTbits	set	4030
   310  0000                     _T2PR	set	4028
   311  0000                     _T2RST	set	4032
   312  0000                     _T2RSTbits	set	4032
   313  0000                     _T2TMR	set	4027
   314  0000                     _T4CLKCON	set	4025
   315  0000                     _T4CON	set	4023
   316  0000                     _T4CONbits	set	4023
   317  0000                     _T4HLT	set	4024
   318  0000                     _T4HLTbits	set	4024
   319  0000                     _T4PR	set	4022
   320  0000                     _T4RST	set	4026
   321  0000                     _T4RSTbits	set	4026
   322  0000                     _T4TMR	set	4021
   323  0000                     _TABLAT	set	4085
   324  0000                     _TBLPTRH	set	4087
   325  0000                     _TBLPTRL	set	4086
   326  0000                     _TBLPTRU	set	4088
   327  0000                     _TMR1H	set	4046
   328  0000                     _TMR1L	set	4045
   329  0000                     _TMR2	set	4027
   330  0000                     _TMR4	set	4021
   331  0000                     _TRISA	set	3976
   332  0000                     _TRISB	set	3977
   333  0000                     _TRISC	set	3978
   334  0000                     _TRISD	set	3979
   335  0000                     _TRISE	set	3980
   336  0000                     _TX1REG	set	3994
   337  0000                     _TX1STA	set	3998
   338  0000                     _GIE	set	32663
   339  0000                     _LATB0	set	31776
   340  0000                     _LATD1	set	31793
   341  0000                     _LATD2	set	31794
   342  0000                     _LATD3	set	31795
   343  0000                     _LATD4	set	31796
   344  0000                     _LATD5	set	31797
   345  0000                     _LATD6	set	31798
   346  0000                     _LATD7	set	31799
   347                           
   348                           ; #config settings
   349  0000                     
   350                           	psect	cinit
   351  0016E6                     __pcinit:
   352                           	opt stack 0
   353  0016E6                     start_initialization:
   354                           	opt stack 0
   355  0016E6                     __initialization:
   356                           	opt stack 0
   357                           
   358                           ; Initialize objects allocated to BANK0 (40 bytes)
   359                           ; load TBLPTR registers with __pidataBANK0
   360  0016E6  0E74               	movlw	low __pidataBANK0
   361  0016E8  6EF6               	movwf	tblptrl,c
   362  0016EA  0E1B               	movlw	high __pidataBANK0
   363  0016EC  6EF7               	movwf	tblptrh,c
   364  0016EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   365  0016F0  6EF8               	movwf	tblptru,c
   366  0016F2  EE00  F0A6         	lfsr	0,__pdataBANK0
   367  0016F6  EE10 F028          	lfsr	1,40
   368  0016FA                     copy_data0:
   369  0016FA  0009               	tblrd		*+
   370  0016FC  CFF5 FFEE          	movff	tablat,postinc0
   371  001700  50E5               	movf	postdec1,w,c
   372  001702  50E1               	movf	fsr1l,w,c
   373  001704  E1FA               	bnz	copy_data0
   374                           
   375                           ; Initialize objects allocated to COMRAM (3 bytes)
   376                           ; load TBLPTR registers with __pidataCOMRAM
   377  001706  0E70               	movlw	low __pidataCOMRAM
   378  001708  6EF6               	movwf	tblptrl,c
   379  00170A  0E1D               	movlw	high __pidataCOMRAM
   380  00170C  6EF7               	movwf	tblptrh,c
   381  00170E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   382  001710  6EF8               	movwf	tblptru,c
   383  001712  0009               	tblrd		*+	;fetch initializer
   384  001714  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   385  001718  0009               	tblrd		*+	;fetch initializer
   386  00171A  CFF5 F04C          	movff	tablat,__pdataCOMRAM+1
   387  00171E  0009               	tblrd		*+	;fetch initializer
   388  001720  CFF5 F04D          	movff	tablat,__pdataCOMRAM+2
   389                           
   390                           ; Clear objects allocated to BIGRAM (512 bytes)
   391  001724  EE00  F0E3         	lfsr	0,__pbssBIGRAM
   392  001728  EE12 F000          	lfsr	1,512
   393  00172C                     clear_0:
   394  00172C  6AEE               	clrf	postinc0,c
   395  00172E  50E5               	movf	postdec1,w,c
   396  001730  50E1               	movf	fsr1l,w,c
   397  001732  E1FC               	bnz	clear_0
   398  001734  50E2               	movf	fsr1h,w,c
   399  001736  E1FA               	bnz	clear_0
   400                           
   401                           ; Clear objects allocated to BANK0 (70 bytes)
   402  001738  EE00  F060         	lfsr	0,__pbssBANK0
   403  00173C  0E46               	movlw	70
   404  00173E                     clear_1:
   405  00173E  6AEE               	clrf	postinc0,c
   406  001740  06E8               	decf	wreg,f,c
   407  001742  E1FD               	bnz	clear_1
   408                           
   409                           ; Clear objects allocated to COMRAM (51 bytes)
   410  001744  EE00  F001         	lfsr	0,__pbssCOMRAM
   411  001748  0E33               	movlw	51
   412  00174A                     clear_2:
   413  00174A  6AEE               	clrf	postinc0,c
   414  00174C  06E8               	decf	wreg,f,c
   415  00174E  E1FD               	bnz	clear_2
   416  001750                     end_of_initialization:
   417                           	opt stack 0
   418  001750                     __end_of__initialization:
   419                           	opt stack 0
   420  001750  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   421  001752  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   422  001754  0100               	movlb	0
   423  001756  EF75  F00E         	goto	_main	;jump to C main() function
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           postdec1	equ	0xFE5
   431                           fsr1h	equ	0xFE2
   432                           fsr1l	equ	0xFE1
   433                           
   434                           	psect	bssCOMRAM
   435  000001                     __pbssCOMRAM:
   436                           	opt stack 0
   437  000001                     _rub_ButtonDebounceCounter:
   438                           	opt stack 0
   439  000001                     	ds	3
   440  000004                     _rub_ButtonStatus:
   441                           	opt stack 0
   442  000004                     	ds	3
   443  000007                     _rub_BCDCen:
   444                           	opt stack 0
   445  000007                     	ds	2
   446  000009                     _rub_BCDDec:
   447                           	opt stack 0
   448  000009                     	ds	2
   449  00000B                     _ruw_DMXBuilderDataCounter:
   450                           	opt stack 0
   451  00000B                     	ds	2
   452  00000D                     _ruw_HDBuffer:
   453                           	opt stack 0
   454  00000D                     	ds	2
   455  00000F                     _ruw_MaxCount:
   456                           	opt stack 0
   457  00000F                     	ds	2
   458  000011                     _ruw_OnCFG:
   459                           	opt stack 0
   460  000011                     	ds	2
   461  000013                     _Execute_task:
   462                           	opt stack 0
   463  000013                     	ds	1
   464  000014                     _eusart1RxCount:
   465                           	opt stack 0
   466  000014                     	ds	1
   467  000015                     _eusart1RxHead:
   468                           	opt stack 0
   469  000015                     	ds	1
   470  000016                     _eusart1RxTail:
   471                           	opt stack 0
   472  000016                     	ds	1
   473  000017                     _eusart1TxHead:
   474                           	opt stack 0
   475  000017                     	ds	1
   476  000018                     _eusart1TxTail:
   477                           	opt stack 0
   478  000018                     	ds	1
   479  000019                     _eusart2RxCount:
   480                           	opt stack 0
   481  000019                     	ds	1
   482  00001A                     _eusart2RxHead:
   483                           	opt stack 0
   484  00001A                     	ds	1
   485  00001B                     _eusart2RxTail:
   486                           	opt stack 0
   487  00001B                     	ds	1
   488  00001C                     _eusart2TxHead:
   489                           	opt stack 0
   490  00001C                     	ds	1
   491  00001D                     _eusart2TxTail:
   492                           	opt stack 0
   493  00001D                     	ds	1
   494  00001E                     _lf_DigitMux:
   495                           	opt stack 0
   496  00001E                     	ds	1
   497  00001F                     _lub_VirtualUartRxCount:
   498                           	opt stack 0
   499  00001F                     	ds	1
   500  000020                     _lub_VirtualUartRxHead:
   501                           	opt stack 0
   502  000020                     	ds	1
   503  000021                     _lub_VirtualUartRxTail:
   504                           	opt stack 0
   505  000021                     	ds	1
   506  000022                     _lub_VirtualUartTempBuffer:
   507                           	opt stack 0
   508  000022                     	ds	1
   509  000023                     _lub_VurtualUartBitCounter:
   510                           	opt stack 0
   511  000023                     	ds	1
   512  000024                     _rsub_EmulationFlags:
   513                           	opt stack 0
   514  000024                     	ds	1
   515  000025                     _rub_BreakState:
   516                           	opt stack 0
   517  000025                     	ds	1
   518  000026                     _rub_CHMeasureCounter:
   519                           	opt stack 0
   520  000026                     	ds	1
   521  000027                     _rub_CountDebounceCounter:
   522                           	opt stack 0
   523  000027                     	ds	1
   524  000028                     _rub_CounterMode:
   525                           	opt stack 0
   526  000028                     	ds	1
   527  000029                     _rub_DataBuffer:
   528                           	opt stack 0
   529  000029                     	ds	1
   530  00002A                     _rub_DigCount:
   531                           	opt stack 0
   532  00002A                     	ds	1
   533  00002B                     _rub_HD_NextState:
   534                           	opt stack 0
   535  00002B                     	ds	1
   536  00002C                     _rub_Line:
   537                           	opt stack 0
   538  00002C                     	ds	1
   539  00002D                     _rub_SEQFLAG:
   540                           	opt stack 0
   541  00002D                     	ds	1
   542  00002E                     _rub_SlotCounter:
   543                           	opt stack 0
   544  00002E                     	ds	1
   545  00002F                     _rub_TextTimer:
   546                           	opt stack 0
   547  00002F                     	ds	1
   548  000030                     _rub_TriggerFlag:
   549                           	opt stack 0
   550  000030                     	ds	1
   551  000031                     _rub_TxState:
   552                           	opt stack 0
   553  000031                     	ds	1
   554  000032                     _rub_set_Value_cnt:
   555                           	opt stack 0
   556  000032                     	ds	1
   557  000033                     _sch_alarm:
   558                           	opt stack 0
   559  000033                     	ds	1
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           postinc0	equ	0xFEE
   565                           wreg	equ	0xFE8
   566                           postdec1	equ	0xFE5
   567                           fsr1h	equ	0xFE2
   568                           fsr1l	equ	0xFE1
   569                           
   570                           	psect	dataCOMRAM
   571  00004B                     __pdataCOMRAM:
   572                           	opt stack 0
   573  00004B                     _rub_CDM_FCT_Index:
   574                           	opt stack 0
   575  00004B                     	ds	1
   576  00004C                     _rub_HDDelay:
   577                           	opt stack 0
   578  00004C                     	ds	1
   579  00004D                     _rub_HDInitState:
   580                           	opt stack 0
   581  00004D                     	ds	1
   582                           tblptru	equ	0xFF8
   583                           tblptrh	equ	0xFF7
   584                           tblptrl	equ	0xFF6
   585                           tablat	equ	0xFF5
   586                           postinc0	equ	0xFEE
   587                           wreg	equ	0xFE8
   588                           postdec1	equ	0xFE5
   589                           fsr1h	equ	0xFE2
   590                           fsr1l	equ	0xFE1
   591                           
   592                           	psect	bssBANK0
   593  000060                     __pbssBANK0:
   594                           	opt stack 0
   595  000060                     _eusart1RxBuffer:
   596                           	opt stack 0
   597  000060                     	ds	8
   598  000068                     _eusart1TxBuffer:
   599                           	opt stack 0
   600  000068                     	ds	8
   601  000070                     _eusart2RxBuffer:
   602                           	opt stack 0
   603  000070                     	ds	8
   604  000078                     _eusart2TxBuffer:
   605                           	opt stack 0
   606  000078                     	ds	8
   607  000080                     _lub_VirtualUartRxBuffer:
   608                           	opt stack 0
   609  000080                     	ds	8
   610  000088                     _ruw_DataMeasured:
   611                           	opt stack 0
   612  000088                     	ds	6
   613  00008E                     _TMR4_InterruptHandler:
   614                           	opt stack 0
   615  00008E                     	ds	2
   616  000090                     _rub_BCDCmil:
   617                           	opt stack 0
   618  000090                     	ds	2
   619  000092                     _rub_BCDDmil:
   620                           	opt stack 0
   621  000092                     	ds	2
   622  000094                     _rub_BCDUmil:
   623                           	opt stack 0
   624  000094                     	ds	2
   625  000096                     _rub_BCDUni:
   626                           	opt stack 0
   627  000096                     	ds	2
   628  000098                     _ruw_Count:
   629                           	opt stack 0
   630  000098                     	ds	2
   631  00009A                     _ruw_DMXColorCounter:
   632                           	opt stack 0
   633  00009A                     	ds	2
   634  00009C                     _ruw_TriggerTimer:
   635                           	opt stack 0
   636  00009C                     	ds	2
   637  00009E                     _ruw_TxDMXDataCounter:
   638                           	opt stack 0
   639  00009E                     	ds	2
   640  0000A0                     _scheduler_counter:
   641                           	opt stack 0
   642  0000A0                     	ds	2
   643  0000A2                     _ruw_channel:
   644                           	opt stack 0
   645  0000A2                     	ds	2
   646  0000A4                     _ruw_value:
   647                           	opt stack 0
   648  0000A4                     	ds	2
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           postdec1	equ	0xFE5
   656                           fsr1h	equ	0xFE2
   657                           fsr1l	equ	0xFE1
   658                           
   659                           	psect	dataBANK0
   660  0000A6                     __pdataBANK0:
   661                           	opt stack 0
   662  0000A6                     _raub_DataBufferLine1:
   663                           	opt stack 0
   664  0000A6                     	ds	16
   665  0000B6                     _raub_DataBufferLine2:
   666                           	opt stack 0
   667  0000B6                     	ds	16
   668  0000C6                     _euw_MaxCount:
   669                           	opt stack 0
   670  0000C6                     	ds	2
   671  0000C8                     _euw_OnCFG:
   672                           	opt stack 0
   673  0000C8                     	ds	2
   674  0000CA                     _rptr_Cmd_Functions:
   675                           	opt stack 0
   676  0000CA                     	ds	2
   677  0000CC                     _rptr_value_storage:
   678                           	opt stack 0
   679  0000CC                     	ds	2
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           postinc0	equ	0xFEE
   685                           wreg	equ	0xFE8
   686                           postdec1	equ	0xFE5
   687                           fsr1h	equ	0xFE2
   688                           fsr1l	equ	0xFE1
   689                           
   690                           	psect	bssBIGRAM
   691  0000E3                     __pbssBIGRAM:
   692                           	opt stack 0
   693  0000E3                     _rub_DMX_DATA:
   694                           	opt stack 0
   695  0000E3                     	ds	512
   696                           tblptru	equ	0xFF8
   697                           tblptrh	equ	0xFF7
   698                           tblptrl	equ	0xFF6
   699                           tablat	equ	0xFF5
   700                           postinc0	equ	0xFEE
   701                           wreg	equ	0xFE8
   702                           postdec1	equ	0xFE5
   703                           fsr1h	equ	0xFE2
   704                           fsr1l	equ	0xFE1
   705                           
   706                           	psect	cstackBANK0
   707  0000CE                     __pcstackBANK0:
   708                           	opt stack 0
   709  0000CE                     ___aldiv@counter:
   710                           	opt stack 0
   711  0000CE                     app_conver_ascii2int@lptr_data:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x0
   715  0000CE                     	ds	1
   716  0000CF                     ___aldiv@sign:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x1
   720  0000CF                     	ds	1
   721  0000D0                     app_conver_ascii2int@lptr_destiny_data:
   722                           	opt stack 0
   723  0000D0                     ___aldiv@quotient:
   724                           	opt stack 0
   725                           
   726                           ; 4 bytes @ 0x2
   727  0000D0                     	ds	2
   728  0000D2                     app_conver_ascii2int@lub_char_counter:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0x4
   732  0000D2                     	ds	1
   733  0000D3                     ??_app_conver_ascii2int:
   734                           
   735                           ; 1 bytes @ 0x5
   736  0000D3                     	ds	1
   737  0000D4                     bin2bcd@luw_Bin_Data:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x6
   741  0000D4                     	ds	2
   742  0000D6                     bin2bcd@luw_aux:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x8
   746  0000D6                     	ds	1
   747  0000D7                     ??_app_main_dxm_command_fct:
   748                           
   749                           ; 1 bytes @ 0x9
   750  0000D7                     	ds	1
   751  0000D8                     ??_app_HD44780_DisplayUpdate:
   752                           
   753                           ; 1 bytes @ 0xA
   754  0000D8                     	ds	1
   755  0000D9                     app_main_dxm_command_fct@lub_read_character:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0xB
   759  0000D9                     	ds	1
   760  0000DA                     ??_scheduler_loop:
   761                           
   762                           ; 1 bytes @ 0xC
   763  0000DA                     	ds	3
   764                           tblptru	equ	0xFF8
   765                           tblptrh	equ	0xFF7
   766                           tblptrl	equ	0xFF6
   767                           tablat	equ	0xFF5
   768                           postinc0	equ	0xFEE
   769                           wreg	equ	0xFE8
   770                           postdec1	equ	0xFE5
   771                           fsr1h	equ	0xFE2
   772                           fsr1l	equ	0xFE1
   773                           
   774                           	psect	cstackCOMRAM
   775  000034                     __pcstackCOMRAM:
   776                           	opt stack 0
   777  000034                     app_DMX_TX_DisableTXPort@state:
   778                           	opt stack 0
   779  000034                     app_DMX_TX_EnableTXPort@state:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x0
   783  000034                     	ds	1
   784  000035                     ??_INTERRUPT_InterruptManagerHigh:
   785                           
   786                           ; 1 bytes @ 0x1
   787  000035                     	ds	14
   788  000043                     ??_app_Evaluate_Command:
   789  000043                     ?___wmul:
   790                           	opt stack 0
   791  000043                     ?___awmod:
   792                           	opt stack 0
   793  000043                     ?___lwdiv:
   794                           	opt stack 0
   795  000043                     ?___aldiv:
   796                           	opt stack 0
   797  000043                     app_HD44780_SenCmd@lub_return:
   798                           	opt stack 0
   799  000043                     app_HD44780_PrepareCMD@lub_cmd:
   800                           	opt stack 0
   801  000043                     app_HD44780_CallInitDelay@lub_next_state:
   802                           	opt stack 0
   803  000043                     PIN_MANAGER_Initialize@state:
   804                           	opt stack 0
   805  000043                     EUSART2_Read@readValue:
   806                           	opt stack 0
   807  000043                     TMR1_SetInterruptHandler@InterruptHandler:
   808                           	opt stack 0
   809  000043                     TMR2_SetInterruptHandler@InterruptHandler:
   810                           	opt stack 0
   811  000043                     sched_util_task_finder@sch_counter:
   812                           	opt stack 0
   813  000043                     ___wmul@multiplier:
   814                           	opt stack 0
   815  000043                     ___awmod@dividend:
   816                           	opt stack 0
   817  000043                     ___lwdiv@dividend:
   818                           	opt stack 0
   819  000043                     ___aldiv@dividend:
   820                           	opt stack 0
   821                           
   822                           ; 4 bytes @ 0xF
   823  000043                     	ds	1
   824  000044                     app_HD44780_PrepareCMD@lub_type:
   825                           	opt stack 0
   826  000044                     app_HD44780_CallInitDelay@lub_delay:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x10
   830  000044                     	ds	1
   831  000045                     ??_TMR1_Initialize:
   832  000045                     ??_sched_util_task_finder:
   833  000045                     app_Evaluate_Command@lptr_Command:
   834                           	opt stack 0
   835  000045                     ___wmul@multiplicand:
   836                           	opt stack 0
   837  000045                     ___awmod@divisor:
   838                           	opt stack 0
   839  000045                     ___lwdiv@divisor:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x11
   843  000045                     	ds	2
   844  000047                     ___awmod@counter:
   845                           	opt stack 0
   846  000047                     ___lwdiv@counter:
   847                           	opt stack 0
   848  000047                     ___wmul@product:
   849                           	opt stack 0
   850  000047                     ___aldiv@divisor:
   851                           	opt stack 0
   852                           
   853                           ; 4 bytes @ 0x13
   854  000047                     	ds	1
   855  000048                     sched_util_task_finder@lub_ExitFlag:
   856                           	opt stack 0
   857  000048                     ___awmod@sign:
   858                           	opt stack 0
   859  000048                     ___lwdiv@quotient:
   860                           	opt stack 0
   861                           
   862                           ; 2 bytes @ 0x14
   863  000048                     	ds	1
   864  000049                     sched_util_task_finder@lub_TaskIndex:
   865                           	opt stack 0
   866  000049                     app_conver_ascii2int@lub_temp:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x15
   870  000049                     	ds	1
   871  00004A                     app_CDM_DMX_Value_CHK_CON@lub_cmd_character:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x16
   875  00004A                     	ds	1
   876  00004B                     tblptru	equ	0xFF8
   877                           tblptrh	equ	0xFF7
   878                           tblptrl	equ	0xFF6
   879                           tablat	equ	0xFF5
   880                           postinc0	equ	0xFEE
   881                           wreg	equ	0xFE8
   882                           postdec1	equ	0xFE5
   883                           fsr1h	equ	0xFE2
   884                           fsr1l	equ	0xFE1
   885                           
   886                           ; 1 bytes @ 0x17
   887 ;;
   888 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   889 ;;
   890 ;; *************** function _main *****************
   891 ;; Defined at:
   892 ;;		line 53 in file "main.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels required when called:   12
   912 ;; This function calls:
   913 ;;		_InitApp
   914 ;;		_SYSTEM_Initialize
   915 ;;		_scheduler_loop
   916 ;; This function is called by:
   917 ;;		Startup code after reset
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	text0
   922  001CEA                     __ptext0:
   923                           	opt stack 0
   924  001CEA                     _main:
   925                           	opt stack 19
   926                           
   927                           ;main.c: 56: SYSTEM_Initialize();
   928                           
   929                           ;incstack = 0
   930  001CEA  ECE1  F00D         	call	_SYSTEM_Initialize	;wreg free
   931  001CEE                     l4387:
   932                           
   933                           ;main.c: 86: {
   934                           ;main.c: 87: InitApp();
   935  001CEE  ECA6  F00E         	call	_InitApp	;wreg free
   936                           
   937                           ;main.c: 89: (INTCONbits.GIEH = 1);
   938  001CF2  8EF2               	bsf	intcon,7,c	;volatile
   939                           
   940                           ;main.c: 90: (INTCONbits.GIEL = 1);
   941  001CF4  8CF2               	bsf	intcon,6,c	;volatile
   942                           
   943                           ;main.c: 92: scheduler_loop();
   944  001CF6  ECEF  F00A         	call	_scheduler_loop	;wreg free
   945  001CFA  D7F9               	goto	l4387
   946  001CFC                     __end_of_main:
   947                           	opt stack 0
   948                           tblptru	equ	0xFF8
   949                           tblptrh	equ	0xFF7
   950                           tblptrl	equ	0xFF6
   951                           tablat	equ	0xFF5
   952                           intcon	equ	0xFF2
   953                           postinc0	equ	0xFEE
   954                           wreg	equ	0xFE8
   955                           postdec1	equ	0xFE5
   956                           fsr1h	equ	0xFE2
   957                           fsr1l	equ	0xFE1
   958                           
   959 ;; *************** function _scheduler_loop *****************
   960 ;; Defined at:
   961 ;;		line 45 in file "OS_SEBELL/OS_SEBELL_schedu.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   977 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   978 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   979 ;;Total ram usage:        3 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:   11
   982 ;; This function calls:
   983 ;;		_TASK_DUMMY
   984 ;;		_periodic_task_1024tk
   985 ;;		_periodic_task_2tk
   986 ;;		_periodic_task_32tk
   987 ;;		_periodic_task_4tk
   988 ;;		_periodic_task_8tk
   989 ;;		_periodic_task_tk
   990 ;;		_sched_util_task_finder
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text1
   997  0015DE                     __ptext1:
   998                           	opt stack 0
   999  0015DE                     _scheduler_loop:
  1000                           	opt stack 19
  1001  0015DE                     l1101:
  1002  0015DE                     
  1003                           ;OS_SEBELL_schedu.c: 49: if( 0x01u == sch_alarm){
  1004  0015DE  0433               	decf	_sch_alarm,w,c
  1005  0015E0  A4D8               	btfss	status,2,c
  1006  0015E2  D014               	goto	l4333
  1007                           
  1008                           ;OS_SEBELL_schedu.c: 51: sch_alarm = 0x00u;
  1009  0015E4  0E00               	movlw	0
  1010  0015E6  6E33               	movwf	_sch_alarm,c
  1011                           
  1012                           ;OS_SEBELL_schedu.c: 52: scheduler_counter++;
  1013  0015E8  0100               	movlb	0	; () banked
  1014  0015EA  4BA0               	infsnz	_scheduler_counter& (0+255),f,b
  1015  0015EC  2BA1               	incf	(_scheduler_counter+1)& (0+255),f,b
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;OS_SEBELL_schedu.c: 53: Execute_task = 0x01u;
  1019  0015EE  0E01               	movlw	1
  1020  0015F0  6E13               	movwf	_Execute_task,c
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;OS_SEBELL_schedu.c: 57: if(0xFFFE < scheduler_counter){
  1024  0015F2  0100               	movlb	0	; () banked
  1025  0015F4  29A0               	incf	_scheduler_counter& (0+255),w,b
  1026  0015F6  E1F3               	bnz	l1101
  1027  0015F8  0100               	movlb	0	; () banked
  1028  0015FA  29A1               	incf	(_scheduler_counter+1)& (0+255),w,b
  1029  0015FC  A4D8               	btfss	status,2,c
  1030  0015FE  D7EF               	goto	l4321
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;OS_SEBELL_schedu.c: 58: scheduler_counter = 0x0001;
  1034  001600  0E00               	movlw	0
  1035  001602  0100               	movlb	0	; () banked
  1036  001604  6FA1               	movwf	(_scheduler_counter+1)& (0+255),b
  1037  001606  0E01               	movlw	1
  1038  001608  6FA0               	movwf	_scheduler_counter& (0+255),b
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;OS_SEBELL_schedu.c: 62: }
  1042                           ;OS_SEBELL_schedu.c: 63: }
  1043                           
  1044                           ;OS_SEBELL_schedu.c: 60: else{
  1045                           
  1046                           ; BSR set to: 0
  1047                           
  1048                           ;OS_SEBELL_schedu.c: 59: }
  1049  00160A  D7E9               	goto	l4321
  1050  00160C                     l4333:
  1051                           
  1052                           ;OS_SEBELL_schedu.c: 64: else{
  1053                           ;OS_SEBELL_schedu.c: 65: if(0x01u == Execute_task ){
  1054  00160C  0413               	decf	_Execute_task,w,c
  1055  00160E  A4D8               	btfss	status,2,c
  1056  001610  D7E6               	goto	l4321
  1057                           
  1058                           ;OS_SEBELL_schedu.c: 67: Execute_task = 0x00u;
  1059  001612  0E00               	movlw	0
  1060  001614  6E13               	movwf	_Execute_task,c
  1061                           
  1062                           ;OS_SEBELL_schedu.c: 68: tasks_list[sched_util_task_finder(scheduler_counter)]();
  1063  001616  C0A0  F043         	movff	_scheduler_counter,sched_util_task_finder@sch_counter
  1064  00161A  C0A1  F044         	movff	_scheduler_counter+1,sched_util_task_finder@sch_counter+1
  1065  00161E  ECD4  F00C         	call	_sched_util_task_finder	;wreg free
  1066  001622  0100               	movlb	0	; () banked
  1067  001624  6FDA               	movwf	??_scheduler_loop& (0+255),b
  1068  001626  0100               	movlb	0	; () banked
  1069  001628  51DA               	movf	??_scheduler_loop& (0+255),w,b
  1070  00162A  0D02               	mullw	2
  1071  00162C  0E01               	movlw	low _tasks_list
  1072  00162E  24F3               	addwf	prodl,w,c
  1073  001630  6EF6               	movwf	tblptrl,c
  1074  001632  0E0F               	movlw	high _tasks_list
  1075  001634  20F4               	addwfc	prodh,w,c
  1076  001636  6EF7               	movwf	tblptrh,c
  1077  001638                     	if	1	;There are 3 active tblptr bytes
  1078  001638  6AF8               	clrf	tblptru,c
  1079  00163A  0E00               	movlw	low (__mediumconst shr (0+16))
  1080  00163C  22F8               	addwfc	tblptru,f,c
  1081  00163E                     	endif
  1082  00163E  0009               	tblrd		*+
  1083  001640  CFF5 F0DB          	movff	tablat,??_scheduler_loop+1
  1084  001644  0009               	tblrd		*+
  1085  001646  CFF5 F0DC          	movff	tablat,??_scheduler_loop+2
  1086  00164A  D801               	call	u3428
  1087  00164C  D7C8               	goto	l4321
  1088  00164E                     u3428:
  1089  00164E  0005               	push	
  1090  001650  6EFA               	movwf	pclath,c
  1091  001652  0100               	movlb	0	; () banked
  1092  001654  51DB               	movf	(??_scheduler_loop+1)& (0+255),w,b
  1093  001656  6EFD               	movwf	tosl,c
  1094  001658  51DC               	movf	(??_scheduler_loop+2)& (0+255),w,b
  1095  00165A  6EFE               	movwf	tosh,c
  1096  00165C  6AFF               	clrf	tosu,c
  1097  00165E  50FA               	movf	pclath,w,c
  1098  001660  0012               	return		;indir
  1099  001662                     __end_of_scheduler_loop:
  1100                           	opt stack 0
  1101                           tosu	equ	0xFFF
  1102                           tosh	equ	0xFFE
  1103                           tosl	equ	0xFFD
  1104                           pclath	equ	0xFFA
  1105                           tblptru	equ	0xFF8
  1106                           tblptrh	equ	0xFF7
  1107                           tblptrl	equ	0xFF6
  1108                           tablat	equ	0xFF5
  1109                           prodh	equ	0xFF4
  1110                           prodl	equ	0xFF3
  1111                           intcon	equ	0xFF2
  1112                           postinc0	equ	0xFEE
  1113                           wreg	equ	0xFE8
  1114                           postdec1	equ	0xFE5
  1115                           fsr1h	equ	0xFE2
  1116                           fsr1l	equ	0xFE1
  1117                           status	equ	0xFD8
  1118                           
  1119 ;; *************** function _sched_util_task_finder *****************
  1120 ;; Defined at:
  1121 ;;		line 12 in file "OS_SEBELL/OS_SEBELL_sched_util.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  sch_counter     2   15[COMRAM] unsigned short 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  lub_TaskInde    1   21[COMRAM] unsigned char 
  1126 ;;  lub_ExitFlag    1   20[COMRAM] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      unsigned char 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, status,0
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1137 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1138 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1139 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1140 ;;Total ram usage:        7 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    6
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_scheduler_loop
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text2
  1151  0019A8                     __ptext2:
  1152                           	opt stack 0
  1153  0019A8                     _sched_util_task_finder:
  1154                           	opt stack 23
  1155                           
  1156                           ;OS_SEBELL_sched_util.c: 15: unsigned char lub_ExitFlag = 0x01;
  1157                           
  1158                           ;incstack = 0
  1159  0019A8  0E01               	movlw	1
  1160  0019AA  6E48               	movwf	sched_util_task_finder@lub_ExitFlag,c
  1161                           
  1162                           ;OS_SEBELL_sched_util.c: 17: unsigned char lub_TaskIndex = 0x00;
  1163  0019AC  0E00               	movlw	0
  1164  0019AE  6E49               	movwf	sched_util_task_finder@lub_TaskIndex,c
  1165                           
  1166                           ;OS_SEBELL_sched_util.c: 19: for(lub_TaskIndex = 0; (lub_TaskIndex < ((sizeof(T_SCH_CNT)
      +                          *8) - 1)) && (lub_ExitFlag == 0x01); lub_TaskIndex++)
  1167  0019B0  0E00               	movlw	0
  1168  0019B2  6E49               	movwf	sched_util_task_finder@lub_TaskIndex,c
  1169  0019B4  D012               	goto	l3613
  1170  0019B6                     l3607:
  1171                           
  1172                           ;OS_SEBELL_sched_util.c: 20: {
  1173                           ;OS_SEBELL_sched_util.c: 22: if(((sch_counter >> lub_TaskIndex) & 0x01) == 0x01)
  1174  0019B6  C049  F045         	movff	sched_util_task_finder@lub_TaskIndex,??_sched_util_task_finder
  1175  0019BA  C043  F046         	movff	sched_util_task_finder@sch_counter,??_sched_util_task_finder+1
  1176  0019BE  C044  F047         	movff	sched_util_task_finder@sch_counter+1,??_sched_util_task_finder+2
  1177  0019C2  2A45               	incf	??_sched_util_task_finder,f,c
  1178  0019C4  D003               	goto	u2474
  1179  0019C6                     u2475:
  1180  0019C6  90D8               	bcf	status,0,c
  1181  0019C8  3247               	rrcf	??_sched_util_task_finder+2,f,c
  1182  0019CA  3246               	rrcf	??_sched_util_task_finder+1,f,c
  1183  0019CC                     u2474:
  1184  0019CC  2E45               	decfsz	??_sched_util_task_finder,f,c
  1185  0019CE  D7FB               	goto	u2475
  1186  0019D0  A046               	btfss	??_sched_util_task_finder+1,0,c
  1187  0019D2  D002               	goto	l3611
  1188                           
  1189                           ;OS_SEBELL_sched_util.c: 23: {
  1190                           ;OS_SEBELL_sched_util.c: 25: lub_ExitFlag = 0x00;
  1191  0019D4  0E00               	movlw	0
  1192  0019D6  6E48               	movwf	sched_util_task_finder@lub_ExitFlag,c
  1193  0019D8                     l3611:
  1194  0019D8  2A49               	incf	sched_util_task_finder@lub_TaskIndex,f,c
  1195  0019DA                     l3613:
  1196  0019DA  0E0F               	movlw	15
  1197  0019DC  6049               	cpfslt	sched_util_task_finder@lub_TaskIndex,c
  1198  0019DE  D003               	goto	l3617
  1199  0019E0  0448               	decf	sched_util_task_finder@lub_ExitFlag,w,c
  1200  0019E2  B4D8               	btfsc	status,2,c
  1201  0019E4  D7E8               	goto	l3607
  1202  0019E6                     l3617:
  1203                           
  1204                           ;OS_SEBELL_sched_util.c: 26: }
  1205                           ;OS_SEBELL_sched_util.c: 27: }
  1206                           ;OS_SEBELL_sched_util.c: 29: return(lub_TaskIndex - 1);
  1207  0019E6  0449               	decf	sched_util_task_finder@lub_TaskIndex,w,c
  1208  0019E8  0012               	return	
  1209  0019EA                     __end_of_sched_util_task_finder:
  1210                           	opt stack 0
  1211                           tosu	equ	0xFFF
  1212                           tosh	equ	0xFFE
  1213                           tosl	equ	0xFFD
  1214                           pclath	equ	0xFFA
  1215                           tblptru	equ	0xFF8
  1216                           tblptrh	equ	0xFF7
  1217                           tblptrl	equ	0xFF6
  1218                           tablat	equ	0xFF5
  1219                           prodh	equ	0xFF4
  1220                           prodl	equ	0xFF3
  1221                           intcon	equ	0xFF2
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           postdec1	equ	0xFE5
  1225                           fsr1h	equ	0xFE2
  1226                           fsr1l	equ	0xFE1
  1227                           status	equ	0xFD8
  1228                           
  1229 ;; *************** function _periodic_task_1024tk *****************
  1230 ;; Defined at:
  1231 ;;		line 33 in file "periodic_task_exec.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		None
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    6
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_scheduler_loop
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text3
  1260  001D74                     __ptext3:
  1261                           	opt stack 0
  1262  001D74                     _periodic_task_1024tk:
  1263                           	opt stack 23
  1264                           
  1265                           ;periodic_task_exec.c: 35: return;
  1266                           
  1267                           ;incstack = 0
  1268  001D74  0012               	return		;funcret
  1269  001D76                     __end_of_periodic_task_1024tk:
  1270                           	opt stack 0
  1271                           tosu	equ	0xFFF
  1272                           tosh	equ	0xFFE
  1273                           tosl	equ	0xFFD
  1274                           pclath	equ	0xFFA
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           prodh	equ	0xFF4
  1280                           prodl	equ	0xFF3
  1281                           intcon	equ	0xFF2
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           postdec1	equ	0xFE5
  1285                           fsr1h	equ	0xFE2
  1286                           fsr1l	equ	0xFE1
  1287                           status	equ	0xFD8
  1288                           
  1289 ;; *************** function _periodic_task_32tk *****************
  1290 ;; Defined at:
  1291 ;;		line 28 in file "periodic_task_exec.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		None
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1309 ;;Total ram usage:        0 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    6
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_scheduler_loop
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text4
  1320  001D76                     __ptext4:
  1321                           	opt stack 0
  1322  001D76                     _periodic_task_32tk:
  1323                           	opt stack 23
  1324                           
  1325                           ;periodic_task_exec.c: 30: return;
  1326                           
  1327                           ;incstack = 0
  1328  001D76  0012               	return		;funcret
  1329  001D78                     __end_of_periodic_task_32tk:
  1330                           	opt stack 0
  1331                           tosu	equ	0xFFF
  1332                           tosh	equ	0xFFE
  1333                           tosl	equ	0xFFD
  1334                           pclath	equ	0xFFA
  1335                           tblptru	equ	0xFF8
  1336                           tblptrh	equ	0xFF7
  1337                           tblptrl	equ	0xFF6
  1338                           tablat	equ	0xFF5
  1339                           prodh	equ	0xFF4
  1340                           prodl	equ	0xFF3
  1341                           intcon	equ	0xFF2
  1342                           postinc0	equ	0xFEE
  1343                           wreg	equ	0xFE8
  1344                           postdec1	equ	0xFE5
  1345                           fsr1h	equ	0xFE2
  1346                           fsr1l	equ	0xFE1
  1347                           status	equ	0xFD8
  1348                           
  1349 ;; *************** function _TASK_DUMMY *****************
  1350 ;; Defined at:
  1351 ;;		line 38 in file "periodic_task_exec.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;		None
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      void 
  1358 ;; Registers used:
  1359 ;;		None
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;Total ram usage:        0 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    6
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_scheduler_loop
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text5
  1380  001D78                     __ptext5:
  1381                           	opt stack 0
  1382  001D78                     _TASK_DUMMY:
  1383                           	opt stack 23
  1384                           
  1385                           ;periodic_task_exec.c: 40: return;
  1386                           
  1387                           ;incstack = 0
  1388  001D78  0012               	return		;funcret
  1389  001D7A                     __end_of_TASK_DUMMY:
  1390                           	opt stack 0
  1391                           tosu	equ	0xFFF
  1392                           tosh	equ	0xFFE
  1393                           tosl	equ	0xFFD
  1394                           pclath	equ	0xFFA
  1395                           tblptru	equ	0xFF8
  1396                           tblptrh	equ	0xFF7
  1397                           tblptrl	equ	0xFF6
  1398                           tablat	equ	0xFF5
  1399                           prodh	equ	0xFF4
  1400                           prodl	equ	0xFF3
  1401                           intcon	equ	0xFF2
  1402                           postinc0	equ	0xFEE
  1403                           wreg	equ	0xFE8
  1404                           postdec1	equ	0xFE5
  1405                           fsr1h	equ	0xFE2
  1406                           fsr1l	equ	0xFE1
  1407                           status	equ	0xFD8
  1408                           
  1409 ;; *************** function _periodic_task_8tk *****************
  1410 ;; Defined at:
  1411 ;;		line 23 in file "periodic_task_exec.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		None
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1429 ;;Total ram usage:        0 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    6
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_scheduler_loop
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text6
  1440  001D7A                     __ptext6:
  1441                           	opt stack 0
  1442  001D7A                     _periodic_task_8tk:
  1443                           	opt stack 23
  1444                           
  1445                           ;periodic_task_exec.c: 25: return;
  1446                           
  1447                           ;incstack = 0
  1448  001D7A  0012               	return		;funcret
  1449  001D7C                     __end_of_periodic_task_8tk:
  1450                           	opt stack 0
  1451                           tosu	equ	0xFFF
  1452                           tosh	equ	0xFFE
  1453                           tosl	equ	0xFFD
  1454                           pclath	equ	0xFFA
  1455                           tblptru	equ	0xFF8
  1456                           tblptrh	equ	0xFF7
  1457                           tblptrl	equ	0xFF6
  1458                           tablat	equ	0xFF5
  1459                           prodh	equ	0xFF4
  1460                           prodl	equ	0xFF3
  1461                           intcon	equ	0xFF2
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           postdec1	equ	0xFE5
  1465                           fsr1h	equ	0xFE2
  1466                           fsr1l	equ	0xFE1
  1467                           status	equ	0xFD8
  1468                           
  1469 ;; *************** function _periodic_task_4tk *****************
  1470 ;; Defined at:
  1471 ;;		line 18 in file "periodic_task_exec.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		None
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1489 ;;Total ram usage:        0 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    6
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_scheduler_loop
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text7
  1500  001D7C                     __ptext7:
  1501                           	opt stack 0
  1502  001D7C                     _periodic_task_4tk:
  1503                           	opt stack 23
  1504                           
  1505                           ;periodic_task_exec.c: 20: return;
  1506                           
  1507                           ;incstack = 0
  1508  001D7C  0012               	return		;funcret
  1509  001D7E                     __end_of_periodic_task_4tk:
  1510                           	opt stack 0
  1511                           tosu	equ	0xFFF
  1512                           tosh	equ	0xFFE
  1513                           tosl	equ	0xFFD
  1514                           pclath	equ	0xFFA
  1515                           tblptru	equ	0xFF8
  1516                           tblptrh	equ	0xFF7
  1517                           tblptrl	equ	0xFF6
  1518                           tablat	equ	0xFF5
  1519                           prodh	equ	0xFF4
  1520                           prodl	equ	0xFF3
  1521                           intcon	equ	0xFF2
  1522                           postinc0	equ	0xFEE
  1523                           wreg	equ	0xFE8
  1524                           postdec1	equ	0xFE5
  1525                           fsr1h	equ	0xFE2
  1526                           fsr1l	equ	0xFE1
  1527                           status	equ	0xFD8
  1528                           
  1529 ;; *************** function _periodic_task_2tk *****************
  1530 ;; Defined at:
  1531 ;;		line 11 in file "periodic_task_exec.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1549 ;;Total ram usage:        0 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    9
  1552 ;; This function calls:
  1553 ;;		_app_HD44780_DisplayUpdate
  1554 ;;		_app_HD44780_Mngr
  1555 ;; This function is called by:
  1556 ;;		_scheduler_loop
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text8
  1561  001D1E                     __ptext8:
  1562                           	opt stack 0
  1563  001D1E                     _periodic_task_2tk:
  1564                           	opt stack 20
  1565                           
  1566                           ;periodic_task_exec.c: 13: app_HD44780_DisplayUpdate();
  1567                           
  1568                           ;incstack = 0
  1569  001D1E  ECF4  F00D         	call	_app_HD44780_DisplayUpdate	;wreg free
  1570                           
  1571                           ;periodic_task_exec.c: 14: app_HD44780_Mngr();
  1572  001D22  EC66  F008         	call	_app_HD44780_Mngr	;wreg free
  1573  001D26  0012               	return	
  1574  001D28                     __end_of_periodic_task_2tk:
  1575                           	opt stack 0
  1576                           tosu	equ	0xFFF
  1577                           tosh	equ	0xFFE
  1578                           tosl	equ	0xFFD
  1579                           pclath	equ	0xFFA
  1580                           tblptru	equ	0xFF8
  1581                           tblptrh	equ	0xFF7
  1582                           tblptrl	equ	0xFF6
  1583                           tablat	equ	0xFF5
  1584                           prodh	equ	0xFF4
  1585                           prodl	equ	0xFF3
  1586                           intcon	equ	0xFF2
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           postdec1	equ	0xFE5
  1590                           fsr1h	equ	0xFE2
  1591                           fsr1l	equ	0xFE1
  1592                           status	equ	0xFD8
  1593                           
  1594 ;; *************** function _periodic_task_tk *****************
  1595 ;; Defined at:
  1596 ;;		line 6 in file "periodic_task_exec.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:   10
  1617 ;; This function calls:
  1618 ;;		_app_main_dxm_command_fct
  1619 ;; This function is called by:
  1620 ;;		_scheduler_loop
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text9
  1625  001D46                     __ptext9:
  1626                           	opt stack 0
  1627  001D46                     _periodic_task_tk:
  1628                           	opt stack 19
  1629                           
  1630                           ;periodic_task_exec.c: 8: app_main_dxm_command_fct();
  1631                           
  1632                           ;incstack = 0
  1633  001D46  EC17  F00C         	call	_app_main_dxm_command_fct	;wreg free
  1634  001D4A  0012               	return		;funcret
  1635  001D4C                     __end_of_periodic_task_tk:
  1636                           	opt stack 0
  1637                           tosu	equ	0xFFF
  1638                           tosh	equ	0xFFE
  1639                           tosl	equ	0xFFD
  1640                           pclath	equ	0xFFA
  1641                           tblptru	equ	0xFF8
  1642                           tblptrh	equ	0xFF7
  1643                           tblptrl	equ	0xFF6
  1644                           tablat	equ	0xFF5
  1645                           prodh	equ	0xFF4
  1646                           prodl	equ	0xFF3
  1647                           intcon	equ	0xFF2
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           postdec1	equ	0xFE5
  1651                           fsr1h	equ	0xFE2
  1652                           fsr1l	equ	0xFE1
  1653                           status	equ	0xFD8
  1654                           
  1655 ;; *************** function _app_main_dxm_command_fct *****************
  1656 ;; Defined at:
  1657 ;;		line 64 in file "app/app_command_processor.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  lub_read_cha    1   11[BANK0 ] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1672 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1673 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1674 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;Total ram usage:        3 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    9
  1678 ;; This function calls:
  1679 ;;		_EUSART2_Read
  1680 ;;		_app_CDM_DMX_Value_CHK_CON
  1681 ;;		_app_Evaluate_Command
  1682 ;; This function is called by:
  1683 ;;		_periodic_task_tk
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text10
  1688  00182E                     __ptext10:
  1689                           	opt stack 0
  1690  00182E                     _app_main_dxm_command_fct:
  1691                           	opt stack 19
  1692                           
  1693                           ;app_command_processor.c: 65: T_UBYTE lub_read_character;
  1694                           ;app_command_processor.c: 66: if((eusart2RxCount)){
  1695                           
  1696                           ;incstack = 0
  1697  00182E  5019               	movf	_eusart2RxCount,w,c	;volatile
  1698  001830  B4D8               	btfsc	status,2,c
  1699  001832  0012               	return	
  1700                           
  1701                           ;app_command_processor.c: 67: lub_read_character = EUSART2_Read();
  1702  001834  EC50  F00D         	call	_EUSART2_Read	;wreg free
  1703  001838  0100               	movlb	0	; () banked
  1704  00183A  6FD9               	movwf	app_main_dxm_command_fct@lub_read_character& (0+255),b
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;app_command_processor.c: 68: if(rub_CDM_FCT_Index == NO_CDM){
  1708  00183C  044B               	decf	_rub_CDM_FCT_Index,w,c
  1709  00183E  A4D8               	btfss	status,2,c
  1710  001840  D005               	goto	l4311
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;app_command_processor.c: 70: app_Evaluate_Command(lub_read_character);
  1714  001842  0100               	movlb	0	; () banked
  1715  001844  51D9               	movf	app_main_dxm_command_fct@lub_read_character& (0+255),w,b
  1716  001846  ECE5  F00B         	call	_app_Evaluate_Command
  1717                           
  1718                           ;app_command_processor.c: 71: }else{
  1719  00184A  0012               	return	
  1720  00184C                     l4311:
  1721                           
  1722                           ;app_command_processor.c: 73: (*rptr_Cmd_Functions[rub_CDM_FCT_Index])(lub_read_characte
      +                          r);
  1723  00184C  504B               	movf	_rub_CDM_FCT_Index,w,c
  1724  00184E  0D02               	mullw	2
  1725  001850  0ECA               	movlw	low _rptr_Cmd_Functions
  1726  001852  24F3               	addwf	prodl,w,c
  1727  001854  6ED9               	movwf	fsr2l,c
  1728  001856  0E00               	movlw	high _rptr_Cmd_Functions
  1729  001858  20F4               	addwfc	prodh,w,c
  1730  00185A  6EDA               	movwf	fsr2h,c
  1731  00185C  CFDE F0D7          	movff	postinc2,??_app_main_dxm_command_fct
  1732  001860  CFDD F0D8          	movff	postdec2,??_app_main_dxm_command_fct+1
  1733  001864  D801               	call	u3388
  1734  001866  0012               	return	
  1735  001868                     u3388:
  1736  001868  0005               	push	
  1737  00186A  6EFA               	movwf	pclath,c
  1738  00186C  0100               	movlb	0	; () banked
  1739  00186E  51D7               	movf	??_app_main_dxm_command_fct& (0+255),w,b
  1740  001870  6EFD               	movwf	tosl,c
  1741  001872  51D8               	movf	(??_app_main_dxm_command_fct+1)& (0+255),w,b
  1742  001874  6EFE               	movwf	tosh,c
  1743  001876  6AFF               	clrf	tosu,c
  1744  001878  50FA               	movf	pclath,w,c
  1745  00187A  0100               	movlb	0	; () banked
  1746  00187C  51D9               	movf	app_main_dxm_command_fct@lub_read_character& (0+255),w,b
  1747  00187E  0012               	return		;indir
  1748  001880                     __end_of_app_main_dxm_command_fct:
  1749                           	opt stack 0
  1750                           tosu	equ	0xFFF
  1751                           tosh	equ	0xFFE
  1752                           tosl	equ	0xFFD
  1753                           pclath	equ	0xFFA
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           prodh	equ	0xFF4
  1759                           prodl	equ	0xFF3
  1760                           intcon	equ	0xFF2
  1761                           postinc0	equ	0xFEE
  1762                           wreg	equ	0xFE8
  1763                           postdec1	equ	0xFE5
  1764                           fsr1h	equ	0xFE2
  1765                           fsr1l	equ	0xFE1
  1766                           postinc2	equ	0xFDE
  1767                           postdec2	equ	0xFDD
  1768                           fsr2h	equ	0xFDA
  1769                           fsr2l	equ	0xFD9
  1770                           status	equ	0xFD8
  1771                           
  1772 ;; *************** function _app_Evaluate_Command *****************
  1773 ;; Defined at:
  1774 ;;		line 22 in file "app/app_command_processor.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  lptr_Command    1    wreg     unsigned char 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  lptr_Command    1   17[COMRAM] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1790 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1791 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1792 ;;Total ram usage:        3 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    6
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_app_main_dxm_command_fct
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text11
  1803  0017CA                     __ptext11:
  1804                           	opt stack 0
  1805  0017CA                     _app_Evaluate_Command:
  1806                           	opt stack 21
  1807                           
  1808                           ;incstack = 0
  1809                           ;app_Evaluate_Command@lptr_Command stored from wreg
  1810  0017CA  6E45               	movwf	app_Evaluate_Command@lptr_Command,c
  1811                           
  1812                           ;app_command_processor.c: 26: if(( ((lptr_Command>>0x4u) == 4u) || ((lptr_Command>>0x4u)
      +                           == 5u) )){
  1813  0017CC  3845               	swapf	app_Evaluate_Command@lptr_Command,w,c
  1814  0017CE  0B0F               	andlw	15
  1815  0017D0  0A04               	xorlw	4
  1816  0017D2  B4D8               	btfsc	status,2,c
  1817  0017D4  D009               	goto	l4261
  1818  0017D6  3845               	swapf	app_Evaluate_Command@lptr_Command,w,c
  1819  0017D8  0B0F               	andlw	15
  1820  0017DA  0A05               	xorlw	5
  1821  0017DC  A4D8               	btfss	status,2,c
  1822  0017DE  0012               	return	
  1823  0017E0  D003               	goto	l4261
  1824  0017E2                     l4257:
  1825                           
  1826                           ;app_command_processor.c: 33: rub_CDM_FCT_Index = DMX_SET_VALUE_CHK_CONN ;
  1827  0017E2  0E00               	movlw	0
  1828  0017E4  6E4B               	movwf	_rub_CDM_FCT_Index,c
  1829                           
  1830                           ;app_command_processor.c: 54: }
  1831                           
  1832                           ;app_command_processor.c: 53: break;
  1833                           
  1834                           ;app_command_processor.c: 51: default:
  1835                           
  1836                           ;app_command_processor.c: 50: break;
  1837                           
  1838                           ;app_command_processor.c: 49: case PROGRAM_RUN:
  1839                           
  1840                           ;app_command_processor.c: 48: break;
  1841                           
  1842                           ;app_command_processor.c: 47: case MERGE:
  1843                           
  1844                           ;app_command_processor.c: 46: break;
  1845                           
  1846                           ;app_command_processor.c: 45: case DMX_CHANNELS_EEPROM:
  1847                           
  1848                           ;app_command_processor.c: 44: break;
  1849                           
  1850                           ;app_command_processor.c: 43: case DMX_CHANNELS:
  1851                           
  1852                           ;app_command_processor.c: 42: break;
  1853                           
  1854                           ;app_command_processor.c: 41: case BLACKOUT:
  1855                           
  1856                           ;app_command_processor.c: 40: break;
  1857                           
  1858                           ;app_command_processor.c: 39: case VALUE_DMX_PORT:
  1859                           
  1860                           ;app_command_processor.c: 38: break;
  1861                           
  1862                           ;app_command_processor.c: 37: case GET_INFO:
  1863                           
  1864                           ;app_command_processor.c: 36: break;
  1865                           
  1866                           ;app_command_processor.c: 35: case DMX_STATUS:
  1867                           
  1868                           ;app_command_processor.c: 34: break;
  1869  0017E6  0012               	return	
  1870  0017E8                     l4261:
  1871  0017E8  5045               	movf	app_Evaluate_Command@lptr_Command,w,c
  1872  0017EA  0B1F               	andlw	31
  1873  0017EC  6E43               	movwf	??_app_Evaluate_Command& (0+255),c
  1874  0017EE  6A44               	clrf	(??_app_Evaluate_Command+1)& (0+255),c
  1875                           
  1876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1877                           ; Switch size 1, requested type "space"
  1878                           ; Number of cases is 1, Range of values is 0 to 0
  1879                           ; switch strategies available:
  1880                           ; Name         Instructions Cycles
  1881                           ; simple_byte            4     3 (average)
  1882                           ;	Chosen strategy is simple_byte
  1883  0017F0  5044               	movf	??_app_Evaluate_Command+1,w,c
  1884  0017F2  0A00               	xorlw	0	; case 0
  1885  0017F4  A4D8               	btfss	status,2,c
  1886  0017F6  0012               	return	
  1887                           
  1888                           ; Switch size 1, requested type "space"
  1889                           ; Number of cases is 9, Range of values is 2 to 22
  1890                           ; switch strategies available:
  1891                           ; Name         Instructions Cycles
  1892                           ; simple_byte           28    15 (average)
  1893                           ;	Chosen strategy is simple_byte
  1894  0017F8  5043               	movf	??_app_Evaluate_Command,w,c
  1895  0017FA  0A02               	xorlw	2	; case 2
  1896  0017FC  B4D8               	btfsc	status,2,c
  1897  0017FE  0012               	return	
  1898  001800  0A01               	xorlw	1	; case 3
  1899  001802  B4D8               	btfsc	status,2,c
  1900  001804  D7EE               	goto	l4257
  1901  001806  0A06               	xorlw	6	; case 5
  1902  001808  B4D8               	btfsc	status,2,c
  1903  00180A  0012               	return	
  1904  00180C  0A03               	xorlw	3	; case 6
  1905  00180E  B4D8               	btfsc	status,2,c
  1906  001810  0012               	return	
  1907  001812  0A0F               	xorlw	15	; case 9
  1908  001814  B4D8               	btfsc	status,2,c
  1909  001816  0012               	return	
  1910  001818  0A07               	xorlw	7	; case 14
  1911  00181A  B4D8               	btfsc	status,2,c
  1912  00181C  0012               	return	
  1913  00181E  0A1C               	xorlw	28	; case 18
  1914  001820  B4D8               	btfsc	status,2,c
  1915  001822  0012               	return	
  1916  001824  0A01               	xorlw	1	; case 19
  1917  001826  B4D8               	btfsc	status,2,c
  1918  001828  0012               	return	
  1919  00182A  0A05               	xorlw	5	; case 22
  1920                           
  1921                           ;app_command_processor.c: 56: }else{
  1922  00182C  0012               	return	
  1923  00182E                     __end_of_app_Evaluate_Command:
  1924                           	opt stack 0
  1925                           tosu	equ	0xFFF
  1926                           tosh	equ	0xFFE
  1927                           tosl	equ	0xFFD
  1928                           pclath	equ	0xFFA
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           prodh	equ	0xFF4
  1934                           prodl	equ	0xFF3
  1935                           intcon	equ	0xFF2
  1936                           postinc0	equ	0xFEE
  1937                           wreg	equ	0xFE8
  1938                           postdec1	equ	0xFE5
  1939                           fsr1h	equ	0xFE2
  1940                           fsr1l	equ	0xFE1
  1941                           postinc2	equ	0xFDE
  1942                           postdec2	equ	0xFDD
  1943                           fsr2h	equ	0xFDA
  1944                           fsr2l	equ	0xFD9
  1945                           status	equ	0xFD8
  1946                           
  1947 ;; *************** function _app_CDM_DMX_Value_CHK_CON *****************
  1948 ;; Defined at:
  1949 ;;		line 80 in file "app/app_command_processor.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  lub_cmd_char    1    wreg     unsigned char 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  lub_cmd_char    1   22[COMRAM] unsigned char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      void 
  1956 ;; Registers used:
  1957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1966 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1967 ;;Total ram usage:        1 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    8
  1970 ;; This function calls:
  1971 ;;		_app_conver_ascii2int
  1972 ;; This function is called by:
  1973 ;;		_app_main_dxm_command_fct
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text12
  1978  001662                     __ptext12:
  1979                           	opt stack 0
  1980  001662                     _app_CDM_DMX_Value_CHK_CON:
  1981                           	opt stack 19
  1982                           
  1983                           ;incstack = 0
  1984                           ;app_CDM_DMX_Value_CHK_CON@lub_cmd_character stored from wreg
  1985  001662  6E4A               	movwf	app_CDM_DMX_Value_CHK_CON@lub_cmd_character,c
  1986                           
  1987                           ;app_command_processor.c: 83: if(lub_cmd_character == 0x3Fu){
  1988  001664  0E3F               	movlw	63
  1989  001666  184A               	xorwf	app_CDM_DMX_Value_CHK_CON@lub_cmd_character,w,c
  1990  001668  B4D8               	btfsc	status,2,c
  1991  00166A  0012               	return	
  1992                           
  1993                           ;app_command_processor.c: 86: if(lub_cmd_character == 0x4Cu){
  1994                           
  1995                           ;app_command_processor.c: 85: }else{
  1996  00166C  0E4C               	movlw	76
  1997  00166E  184A               	xorwf	app_CDM_DMX_Value_CHK_CON@lub_cmd_character,w,c
  1998  001670  A4D8               	btfss	status,2,c
  1999  001672  D007               	goto	l4275
  2000                           
  2001                           ;app_command_processor.c: 87: rptr_value_storage = &ruw_value;
  2002  001674  0EA4               	movlw	low _ruw_value
  2003  001676  0100               	movlb	0	; () banked
  2004  001678  6FCC               	movwf	_rptr_value_storage& (0+255),b
  2005  00167A  0E00               	movlw	high _ruw_value
  2006  00167C  0100               	movlb	0	; () banked
  2007  00167E  6FCD               	movwf	(_rptr_value_storage+1)& (0+255),b
  2008                           
  2009                           ;app_command_processor.c: 88: }else{
  2010  001680  0012               	return	
  2011  001682                     l4275:
  2012                           
  2013                           ;app_command_processor.c: 89: app_conver_ascii2int(&lub_cmd_character,rptr_value_storage
      +                          ,rub_set_Value_cnt);
  2014  001682  0E4A               	movlw	low app_CDM_DMX_Value_CHK_CON@lub_cmd_character
  2015  001684  0100               	movlb	0	; () banked
  2016  001686  6FCE               	movwf	app_conver_ascii2int@lptr_data& (0+255),b
  2017  001688  0E00               	movlw	high app_CDM_DMX_Value_CHK_CON@lub_cmd_character
  2018  00168A  0100               	movlb	0	; () banked
  2019  00168C  6FCF               	movwf	(app_conver_ascii2int@lptr_data+1)& (0+255),b
  2020  00168E  C0CC  F0D0         	movff	_rptr_value_storage,app_conver_ascii2int@lptr_destiny_data
  2021  001692  C0CD  F0D1         	movff	_rptr_value_storage+1,app_conver_ascii2int@lptr_destiny_data+1
  2022  001696  C032  F0D2         	movff	_rub_set_Value_cnt,app_conver_ascii2int@lub_char_counter
  2023  00169A  EC72  F009         	call	_app_conver_ascii2int
  2024                           
  2025                           ;app_command_processor.c: 90: rub_set_Value_cnt++;
  2026  00169E  2A32               	incf	_rub_set_Value_cnt,f,c
  2027                           
  2028                           ;app_command_processor.c: 91: if(rub_set_Value_cnt == 6u){
  2029  0016A0  0E06               	movlw	6
  2030  0016A2  1832               	xorwf	_rub_set_Value_cnt,w,c
  2031  0016A4  A4D8               	btfss	status,2,c
  2032  0016A6  0012               	return	
  2033                           
  2034                           ;app_command_processor.c: 93: rub_DMX_DATA[ruw_channel] = ruw_value;
  2035  0016A8  0EE3               	movlw	low _rub_DMX_DATA
  2036  0016AA  0100               	movlb	0	; () banked
  2037  0016AC  25A2               	addwf	_ruw_channel& (0+255),w,b
  2038  0016AE  6ED9               	movwf	fsr2l,c
  2039  0016B0  0E00               	movlw	high _rub_DMX_DATA
  2040  0016B2  0100               	movlb	0	; () banked
  2041  0016B4  21A3               	addwfc	(_ruw_channel+1)& (0+255),w,b
  2042  0016B6  6EDA               	movwf	fsr2h,c
  2043  0016B8  C0A4  FFDF         	movff	_ruw_value,indf2
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;app_command_processor.c: 95: rub_set_Value_cnt = 0u;
  2047  0016BC  0E00               	movlw	0
  2048  0016BE  6E32               	movwf	_rub_set_Value_cnt,c
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;app_command_processor.c: 96: rub_CDM_FCT_Index =NO_CDM;
  2052  0016C0  0E01               	movlw	1
  2053  0016C2  6E4B               	movwf	_rub_CDM_FCT_Index,c
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;app_command_processor.c: 97: ruw_channel = 0u;
  2057  0016C4  0E00               	movlw	0
  2058  0016C6  0100               	movlb	0	; () banked
  2059  0016C8  6FA3               	movwf	(_ruw_channel+1)& (0+255),b
  2060  0016CA  0E00               	movlw	0
  2061  0016CC  6FA2               	movwf	_ruw_channel& (0+255),b
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;app_command_processor.c: 98: ruw_value = 0u;
  2065  0016CE  0E00               	movlw	0
  2066  0016D0  0100               	movlb	0	; () banked
  2067  0016D2  6FA5               	movwf	(_ruw_value+1)& (0+255),b
  2068  0016D4  0E00               	movlw	0
  2069  0016D6  6FA4               	movwf	_ruw_value& (0+255),b
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;app_command_processor.c: 99: rptr_value_storage = &ruw_channel;
  2073  0016D8  0EA2               	movlw	low _ruw_channel
  2074  0016DA  0100               	movlb	0	; () banked
  2075  0016DC  6FCC               	movwf	_rptr_value_storage& (0+255),b
  2076  0016DE  0E00               	movlw	high _ruw_channel
  2077  0016E0  0100               	movlb	0	; () banked
  2078  0016E2  6FCD               	movwf	(_rptr_value_storage+1)& (0+255),b
  2079                           
  2080                           ; BSR set to: 0
  2081                           
  2082                           ; BSR set to: 0
  2083  0016E4  0012               	return	
  2084  0016E6                     __end_of_app_CDM_DMX_Value_CHK_CON:
  2085                           	opt stack 0
  2086                           tosu	equ	0xFFF
  2087                           tosh	equ	0xFFE
  2088                           tosl	equ	0xFFD
  2089                           pclath	equ	0xFFA
  2090                           tblptru	equ	0xFF8
  2091                           tblptrh	equ	0xFF7
  2092                           tblptrl	equ	0xFF6
  2093                           tablat	equ	0xFF5
  2094                           prodh	equ	0xFF4
  2095                           prodl	equ	0xFF3
  2096                           intcon	equ	0xFF2
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           postdec1	equ	0xFE5
  2100                           fsr1h	equ	0xFE2
  2101                           fsr1l	equ	0xFE1
  2102                           indf2	equ	0xFDF
  2103                           postinc2	equ	0xFDE
  2104                           postdec2	equ	0xFDD
  2105                           fsr2h	equ	0xFDA
  2106                           fsr2l	equ	0xFD9
  2107                           status	equ	0xFD8
  2108                           
  2109 ;; *************** function _app_conver_ascii2int *****************
  2110 ;; Defined at:
  2111 ;;		line 107 in file "app/app_command_processor.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  lptr_data       2    0[BANK0 ] PTR unsigned char 
  2114 ;;		 -> app_CDM_DMX_Value_CHK_CON@lub_cmd_character(1), 
  2115 ;;  lptr_destiny    2    2[BANK0 ] PTR unsigned short 
  2116 ;;		 -> ruw_value(2), ruw_channel(2), 
  2117 ;;  lub_char_cou    1    4[BANK0 ] unsigned char 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  lub_temp        1   21[COMRAM] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2129 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2131 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2132 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2133 ;;Total ram usage:       10 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    7
  2136 ;; This function calls:
  2137 ;;		___awmod
  2138 ;; This function is called by:
  2139 ;;		_app_CDM_DMX_Value_CHK_CON
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text13
  2144  0012E4                     __ptext13:
  2145                           	opt stack 0
  2146  0012E4                     _app_conver_ascii2int:
  2147                           	opt stack 19
  2148                           
  2149                           ;app_command_processor.c: 108: T_UBYTE lub_temp;
  2150                           ;app_command_processor.c: 110: lub_temp = ( 0x0Fu & *lptr_data);
  2151                           
  2152                           ;incstack = 0
  2153  0012E4  C0CE  FFD9         	movff	app_conver_ascii2int@lptr_data,fsr2l
  2154  0012E8  C0CF  FFDA         	movff	app_conver_ascii2int@lptr_data+1,fsr2h
  2155  0012EC  50DF               	movf	indf2,w,c
  2156  0012EE  0B0F               	andlw	15
  2157  0012F0  6E49               	movwf	app_conver_ascii2int@lub_temp,c
  2158                           
  2159                           ;app_command_processor.c: 111: switch((lub_char_counter % 3)){
  2160  0012F2  D04F               	goto	l4135
  2161  0012F4                     l4127:
  2162                           
  2163                           ;app_command_processor.c: 113: *lptr_destiny_data = *lptr_destiny_data + (lub_temp*100);
  2164  0012F4  C0D0  FFD9         	movff	app_conver_ascii2int@lptr_destiny_data,fsr2l
  2165  0012F8  C0D1  FFDA         	movff	app_conver_ascii2int@lptr_destiny_data+1,fsr2h
  2166  0012FC  CFDE F0D3          	movff	postinc2,??_app_conver_ascii2int
  2167  001300  CFDD F0D4          	movff	postdec2,??_app_conver_ascii2int+1
  2168  001304  5049               	movf	app_conver_ascii2int@lub_temp,w,c
  2169  001306  0D64               	mullw	100
  2170  001308  0100               	movlb	0	; () banked
  2171  00130A  51D3               	movf	??_app_conver_ascii2int& (0+255),w,b
  2172  00130C  26F3               	addwf	prodl,f,c
  2173  00130E  0100               	movlb	0	; () banked
  2174  001310  51D4               	movf	(??_app_conver_ascii2int+1)& (0+255),w,b
  2175  001312  22F4               	addwfc	prodh,f,c
  2176  001314  C0D0  FFD9         	movff	app_conver_ascii2int@lptr_destiny_data,fsr2l
  2177  001318  C0D1  FFDA         	movff	app_conver_ascii2int@lptr_destiny_data+1,fsr2h
  2178  00131C  CFF3 FFDE          	movff	prodl,postinc2
  2179  001320  CFF4 FFDD          	movff	prodh,postdec2
  2180                           
  2181                           ;app_command_processor.c: 115: break;
  2182  001324  0012               	return	
  2183  001326                     l4129:
  2184                           
  2185                           ;app_command_processor.c: 117: *lptr_destiny_data= *lptr_destiny_data + (lub_temp*10);
  2186  001326  C0D0  FFD9         	movff	app_conver_ascii2int@lptr_destiny_data,fsr2l
  2187  00132A  C0D1  FFDA         	movff	app_conver_ascii2int@lptr_destiny_data+1,fsr2h
  2188  00132E  CFDE F0D3          	movff	postinc2,??_app_conver_ascii2int
  2189  001332  CFDD F0D4          	movff	postdec2,??_app_conver_ascii2int+1
  2190  001336  5049               	movf	app_conver_ascii2int@lub_temp,w,c
  2191  001338  0D0A               	mullw	10
  2192  00133A  0100               	movlb	0	; () banked
  2193  00133C  51D3               	movf	??_app_conver_ascii2int& (0+255),w,b
  2194  00133E  26F3               	addwf	prodl,f,c
  2195  001340  0100               	movlb	0	; () banked
  2196  001342  51D4               	movf	(??_app_conver_ascii2int+1)& (0+255),w,b
  2197  001344  22F4               	addwfc	prodh,f,c
  2198  001346  C0D0  FFD9         	movff	app_conver_ascii2int@lptr_destiny_data,fsr2l
  2199  00134A  C0D1  FFDA         	movff	app_conver_ascii2int@lptr_destiny_data+1,fsr2h
  2200  00134E  CFF3 FFDE          	movff	prodl,postinc2
  2201  001352  CFF4 FFDD          	movff	prodh,postdec2
  2202                           
  2203                           ;app_command_processor.c: 119: break;
  2204  001356  0012               	return	
  2205  001358                     l4131:
  2206                           
  2207                           ;app_command_processor.c: 121: *lptr_destiny_data= *lptr_destiny_data + lub_temp;
  2208  001358  C0D0  FFD9         	movff	app_conver_ascii2int@lptr_destiny_data,fsr2l
  2209  00135C  C0D1  FFDA         	movff	app_conver_ascii2int@lptr_destiny_data+1,fsr2h
  2210  001360  CFDE F0D3          	movff	postinc2,??_app_conver_ascii2int
  2211  001364  CFDD F0D4          	movff	postdec2,??_app_conver_ascii2int+1
  2212  001368  5049               	movf	app_conver_ascii2int@lub_temp,w,c
  2213  00136A  0100               	movlb	0	; () banked
  2214  00136C  6FD5               	movwf	(??_app_conver_ascii2int+2)& (0+255),b
  2215  00136E  6BD6               	clrf	(??_app_conver_ascii2int+3)& (0+255),b
  2216  001370  0100               	movlb	0	; () banked
  2217  001372  51D3               	movf	??_app_conver_ascii2int& (0+255),w,b
  2218  001374  0100               	movlb	0	; () banked
  2219  001376  27D5               	addwf	(??_app_conver_ascii2int+2)& (0+255),f,b
  2220  001378  0100               	movlb	0	; () banked
  2221  00137A  51D4               	movf	(??_app_conver_ascii2int+1)& (0+255),w,b
  2222  00137C  0100               	movlb	0	; () banked
  2223  00137E  23D6               	addwfc	(??_app_conver_ascii2int+3)& (0+255),f,b
  2224  001380  C0D0  FFD9         	movff	app_conver_ascii2int@lptr_destiny_data,fsr2l
  2225  001384  C0D1  FFDA         	movff	app_conver_ascii2int@lptr_destiny_data+1,fsr2h
  2226  001388  C0D5  FFDE         	movff	??_app_conver_ascii2int+2,postinc2
  2227  00138C  C0D6  FFDD         	movff	??_app_conver_ascii2int+3,postdec2
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;app_command_processor.c: 125: }
  2231                           
  2232                           ;app_command_processor.c: 123: break;
  2233  001390  0012               	return	
  2234  001392                     l4135:
  2235  001392  C0D2  F043         	movff	app_conver_ascii2int@lub_char_counter,___awmod@dividend
  2236  001396  6A44               	clrf	___awmod@dividend+1,c
  2237  001398  0E00               	movlw	0
  2238  00139A  6E46               	movwf	___awmod@divisor+1,c
  2239  00139C  0E03               	movlw	3
  2240  00139E  6E45               	movwf	___awmod@divisor,c
  2241  0013A0  ECAD  F00B         	call	___awmod	;wreg free
  2242                           
  2243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2244                           ; Switch size 1, requested type "space"
  2245                           ; Number of cases is 1, Range of values is 0 to 0
  2246                           ; switch strategies available:
  2247                           ; Name         Instructions Cycles
  2248                           ; simple_byte            4     3 (average)
  2249                           ;	Chosen strategy is simple_byte
  2250  0013A4  5044               	movf	?___awmod+1,w,c
  2251  0013A6  0A00               	xorlw	0	; case 0
  2252  0013A8  A4D8               	btfss	status,2,c
  2253  0013AA  0012               	return	
  2254                           
  2255                           ; Switch size 1, requested type "space"
  2256                           ; Number of cases is 3, Range of values is 0 to 2
  2257                           ; switch strategies available:
  2258                           ; Name         Instructions Cycles
  2259                           ; simple_byte           10     6 (average)
  2260                           ;	Chosen strategy is simple_byte
  2261  0013AC  5043               	movf	?___awmod,w,c
  2262  0013AE  0A00               	xorlw	0	; case 0
  2263  0013B0  B4D8               	btfsc	status,2,c
  2264  0013B2  D7A0               	goto	l4127
  2265  0013B4  0A01               	xorlw	1	; case 1
  2266  0013B6  B4D8               	btfsc	status,2,c
  2267  0013B8  D7B6               	goto	l4129
  2268  0013BA  0A03               	xorlw	3	; case 2
  2269  0013BC  A4D8               	btfss	status,2,c
  2270  0013BE  0012               	return	
  2271  0013C0  D7CB               	goto	l4131
  2272  0013C2                     __end_of_app_conver_ascii2int:
  2273                           	opt stack 0
  2274                           tosu	equ	0xFFF
  2275                           tosh	equ	0xFFE
  2276                           tosl	equ	0xFFD
  2277                           pclath	equ	0xFFA
  2278                           tblptru	equ	0xFF8
  2279                           tblptrh	equ	0xFF7
  2280                           tblptrl	equ	0xFF6
  2281                           tablat	equ	0xFF5
  2282                           prodh	equ	0xFF4
  2283                           prodl	equ	0xFF3
  2284                           intcon	equ	0xFF2
  2285                           postinc0	equ	0xFEE
  2286                           wreg	equ	0xFE8
  2287                           postdec1	equ	0xFE5
  2288                           fsr1h	equ	0xFE2
  2289                           fsr1l	equ	0xFE1
  2290                           indf2	equ	0xFDF
  2291                           postinc2	equ	0xFDE
  2292                           postdec2	equ	0xFDD
  2293                           fsr2h	equ	0xFDA
  2294                           fsr2l	equ	0xFD9
  2295                           status	equ	0xFD8
  2296                           
  2297 ;; *************** function ___awmod *****************
  2298 ;; Defined at:
  2299 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  dividend        2   15[COMRAM] int 
  2302 ;;  divisor         2   17[COMRAM] int 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  sign            1   20[COMRAM] unsigned char 
  2305 ;;  counter         1   19[COMRAM] unsigned char 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  2   15[COMRAM] int 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, status,0
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2318 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2319 ;;Total ram usage:        6 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    6
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_app_conver_ascii2int
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text14
  2330  00175A                     __ptext14:
  2331                           	opt stack 0
  2332  00175A                     ___awmod:
  2333                           	opt stack 19
  2334                           
  2335                           ;incstack = 0
  2336  00175A  0E00               	movlw	0
  2337  00175C  6E48               	movwf	___awmod@sign,c
  2338  00175E  AE44               	btfss	___awmod@dividend+1,7,c
  2339  001760  D006               	goto	l4097
  2340  001762  6C43               	negf	___awmod@dividend,c
  2341  001764  1E44               	comf	___awmod@dividend+1,f,c
  2342  001766  B0D8               	btfsc	status,0,c
  2343  001768  2A44               	incf	___awmod@dividend+1,f,c
  2344  00176A  0E01               	movlw	1
  2345  00176C  6E48               	movwf	___awmod@sign,c
  2346  00176E                     l4097:
  2347  00176E  AE46               	btfss	___awmod@divisor+1,7,c
  2348  001770  D004               	goto	l4101
  2349  001772  6C45               	negf	___awmod@divisor,c
  2350  001774  1E46               	comf	___awmod@divisor+1,f,c
  2351  001776  B0D8               	btfsc	status,0,c
  2352  001778  2A46               	incf	___awmod@divisor+1,f,c
  2353  00177A                     l4101:
  2354  00177A  5045               	movf	___awmod@divisor,w,c
  2355  00177C  1046               	iorwf	___awmod@divisor+1,w,c
  2356  00177E  B4D8               	btfsc	status,2,c
  2357  001780  D018               	goto	l4117
  2358  001782  0E01               	movlw	1
  2359  001784  6E47               	movwf	___awmod@counter,c
  2360  001786  D004               	goto	l4107
  2361  001788                     l4105:
  2362  001788  90D8               	bcf	status,0,c
  2363  00178A  3645               	rlcf	___awmod@divisor,f,c
  2364  00178C  3646               	rlcf	___awmod@divisor+1,f,c
  2365  00178E  2A47               	incf	___awmod@counter,f,c
  2366  001790                     l4107:
  2367  001790  AE46               	btfss	___awmod@divisor+1,7,c
  2368  001792  D7FA               	goto	l4105
  2369  001794                     l4109:
  2370  001794  5045               	movf	___awmod@divisor,w,c
  2371  001796  5C43               	subwf	___awmod@dividend,w,c
  2372  001798  5046               	movf	___awmod@divisor+1,w,c
  2373  00179A  5844               	subwfb	___awmod@dividend+1,w,c
  2374  00179C  A0D8               	btfss	status,0,c
  2375  00179E  D004               	goto	l4113
  2376  0017A0  5045               	movf	___awmod@divisor,w,c
  2377  0017A2  5E43               	subwf	___awmod@dividend,f,c
  2378  0017A4  5046               	movf	___awmod@divisor+1,w,c
  2379  0017A6  5A44               	subwfb	___awmod@dividend+1,f,c
  2380  0017A8                     l4113:
  2381  0017A8  90D8               	bcf	status,0,c
  2382  0017AA  3246               	rrcf	___awmod@divisor+1,f,c
  2383  0017AC  3245               	rrcf	___awmod@divisor,f,c
  2384  0017AE  2E47               	decfsz	___awmod@counter,f,c
  2385  0017B0  D7F1               	goto	l4109
  2386  0017B2                     l4117:
  2387  0017B2  5048               	movf	___awmod@sign,w,c
  2388  0017B4  B4D8               	btfsc	status,2,c
  2389  0017B6  D004               	goto	l4121
  2390  0017B8  6C43               	negf	___awmod@dividend,c
  2391  0017BA  1E44               	comf	___awmod@dividend+1,f,c
  2392  0017BC  B0D8               	btfsc	status,0,c
  2393  0017BE  2A44               	incf	___awmod@dividend+1,f,c
  2394  0017C0                     l4121:
  2395  0017C0  C043  F043         	movff	___awmod@dividend,?___awmod
  2396  0017C4  C044  F044         	movff	___awmod@dividend+1,?___awmod+1
  2397  0017C8  0012               	return	
  2398  0017CA                     __end_of___awmod:
  2399                           	opt stack 0
  2400                           tosu	equ	0xFFF
  2401                           tosh	equ	0xFFE
  2402                           tosl	equ	0xFFD
  2403                           pclath	equ	0xFFA
  2404                           tblptru	equ	0xFF8
  2405                           tblptrh	equ	0xFF7
  2406                           tblptrl	equ	0xFF6
  2407                           tablat	equ	0xFF5
  2408                           prodh	equ	0xFF4
  2409                           prodl	equ	0xFF3
  2410                           intcon	equ	0xFF2
  2411                           postinc0	equ	0xFEE
  2412                           wreg	equ	0xFE8
  2413                           postdec1	equ	0xFE5
  2414                           fsr1h	equ	0xFE2
  2415                           fsr1l	equ	0xFE1
  2416                           indf2	equ	0xFDF
  2417                           postinc2	equ	0xFDE
  2418                           postdec2	equ	0xFDD
  2419                           fsr2h	equ	0xFDA
  2420                           fsr2l	equ	0xFD9
  2421                           status	equ	0xFD8
  2422                           
  2423 ;; *************** function _EUSART2_Read *****************
  2424 ;; Defined at:
  2425 ;;		line 112 in file "mcc_generated_files/eusart2.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  readValue       1   15[COMRAM] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      unsigned char 
  2432 ;; Registers used:
  2433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2443 ;;Total ram usage:        1 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    6
  2446 ;; This function calls:
  2447 ;;		Nothing
  2448 ;; This function is called by:
  2449 ;;		_app_main_dxm_command_fct
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text15
  2454  001AA0                     __ptext15:
  2455                           	opt stack 0
  2456  001AA0                     _EUSART2_Read:
  2457                           	opt stack 21
  2458                           
  2459                           ;eusart2.c: 114: uint8_t readValue = 0;
  2460                           
  2461                           ;incstack = 0
  2462  001AA0  0E00               	movlw	0
  2463  001AA2  6E43               	movwf	EUSART2_Read@readValue,c
  2464  001AA4                     l4233:
  2465  001AA4  5019               	movf	_eusart2RxCount,w,c	;volatile
  2466  001AA6  B4D8               	btfsc	status,2,c
  2467  001AA8  D7FD               	goto	l4233
  2468                           
  2469                           ;eusart2.c: 118: }
  2470                           ;eusart2.c: 120: readValue = eusart2RxBuffer[eusart2RxTail++];
  2471  001AAA  501B               	movf	_eusart2RxTail,w,c
  2472  001AAC  0D01               	mullw	1
  2473  001AAE  0E70               	movlw	low _eusart2RxBuffer
  2474  001AB0  24F3               	addwf	prodl,w,c
  2475  001AB2  6ED9               	movwf	fsr2l,c
  2476  001AB4  0E00               	movlw	high _eusart2RxBuffer
  2477  001AB6  20F4               	addwfc	prodh,w,c
  2478  001AB8  6EDA               	movwf	fsr2h,c
  2479  001ABA  50DF               	movf	indf2,w,c
  2480  001ABC  6E43               	movwf	EUSART2_Read@readValue,c
  2481  001ABE  2A1B               	incf	_eusart2RxTail,f,c
  2482                           
  2483                           ;eusart2.c: 121: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  2484  001AC0  0E07               	movlw	7
  2485  001AC2  641B               	cpfsgt	_eusart2RxTail,c
  2486  001AC4  D002               	goto	l4243
  2487                           
  2488                           ;eusart2.c: 122: {
  2489                           ;eusart2.c: 123: eusart2RxTail = 0;
  2490  001AC6  0E00               	movlw	0
  2491  001AC8  6E1B               	movwf	_eusart2RxTail,c
  2492  001ACA                     l4243:
  2493                           
  2494                           ;eusart2.c: 124: }
  2495                           ;eusart2.c: 125: PIE3bits.RC2IE = 0;
  2496  001ACA  010E               	movlb	14	; () banked
  2497  001ACC  9FC5               	bcf	197,7,b	;volatile
  2498                           
  2499                           ; BSR set to: 14
  2500                           ;eusart2.c: 126: eusart2RxCount--;
  2501  001ACE  0619               	decf	_eusart2RxCount,f,c	;volatile
  2502                           
  2503                           ; BSR set to: 14
  2504                           ;eusart2.c: 127: PIE3bits.RC2IE = 1;
  2505  001AD0  010E               	movlb	14	; () banked
  2506  001AD2  8FC5               	bsf	197,7,b	;volatile
  2507                           
  2508                           ; BSR set to: 14
  2509                           ;eusart2.c: 129: return readValue;
  2510  001AD4  5043               	movf	EUSART2_Read@readValue,w,c
  2511  001AD6  0012               	return	
  2512  001AD8                     __end_of_EUSART2_Read:
  2513                           	opt stack 0
  2514                           tosu	equ	0xFFF
  2515                           tosh	equ	0xFFE
  2516                           tosl	equ	0xFFD
  2517                           pclath	equ	0xFFA
  2518                           tblptru	equ	0xFF8
  2519                           tblptrh	equ	0xFF7
  2520                           tblptrl	equ	0xFF6
  2521                           tablat	equ	0xFF5
  2522                           prodh	equ	0xFF4
  2523                           prodl	equ	0xFF3
  2524                           intcon	equ	0xFF2
  2525                           postinc0	equ	0xFEE
  2526                           wreg	equ	0xFE8
  2527                           postdec1	equ	0xFE5
  2528                           fsr1h	equ	0xFE2
  2529                           fsr1l	equ	0xFE1
  2530                           indf2	equ	0xFDF
  2531                           postinc2	equ	0xFDE
  2532                           postdec2	equ	0xFDD
  2533                           fsr2h	equ	0xFDA
  2534                           fsr2l	equ	0xFD9
  2535                           status	equ	0xFD8
  2536                           
  2537 ;; *************** function _app_HD44780_Mngr *****************
  2538 ;; Defined at:
  2539 ;;		line 134 in file "app/app_HD44780.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    7
  2560 ;; This function calls:
  2561 ;;		_app_HD44780_CallInitDelay
  2562 ;;		_app_HD44780_Init
  2563 ;;		_app_HD44780_PrepareCMD
  2564 ;;		_app_HD44780_SenCmd
  2565 ;; This function is called by:
  2566 ;;		_periodic_task_2tk
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text16
  2571  0010CC                     __ptext16:
  2572                           	opt stack 0
  2573  0010CC                     _app_HD44780_Mngr:
  2574                           	opt stack 21
  2575                           
  2576                           ;app_HD44780.c: 137: if(ruw_HDBuffer.HD_READY == ((T_BOOLEAN)0u))
  2577                           
  2578                           ; BSR set to: 14
  2579                           ;incstack = 0
  2580  0010CC  A60D               	btfss	_ruw_HDBuffer,3,c
  2581  0010CE  D037               	goto	l3473
  2582  0010D0  D044               	goto	l3475
  2583  0010D2                     l3453:
  2584                           
  2585                           ;app_HD44780.c: 142: {
  2586                           ;app_HD44780.c: 143: app_HD44780_PrepareCMD(0x00u,0x28);
  2587  0010D2  0E28               	movlw	40
  2588  0010D4  6E43               	movwf	app_HD44780_PrepareCMD@lub_cmd,c
  2589  0010D6  0E00               	movlw	0
  2590  0010D8  EC4A  F00E         	call	_app_HD44780_PrepareCMD
  2591                           
  2592                           ;app_HD44780.c: 144: if(app_HD44780_SenCmd() == ((T_BOOLEAN)1u))
  2593  0010DC  ECA6  F00A         	call	_app_HD44780_SenCmd	;wreg free
  2594  0010E0  06E8               	decf	wreg,f,c
  2595  0010E2  A4D8               	btfss	status,2,c
  2596  0010E4  0012               	return	
  2597                           
  2598                           ;app_HD44780.c: 145: {
  2599                           ;app_HD44780.c: 146: app_HD44780_CallInitDelay(1u,HD_DIS_CTRL);
  2600  0010E6  0E01               	movlw	1
  2601  0010E8  6E43               	movwf	app_HD44780_CallInitDelay@lub_next_state,c
  2602  0010EA  0E01               	movlw	1
  2603  0010EC  EC87  F00E         	call	_app_HD44780_CallInitDelay
  2604                           
  2605                           ;app_HD44780.c: 151: }
  2606                           ;app_HD44780.c: 152: }break;
  2607                           
  2608                           ;app_HD44780.c: 148: else
  2609                           ;app_HD44780.c: 149: {
  2610                           
  2611                           ;app_HD44780.c: 147: }
  2612  0010F0  0012               	return	
  2613  0010F2                     l3457:
  2614                           
  2615                           ;app_HD44780.c: 154: {
  2616                           ;app_HD44780.c: 155: app_HD44780_PrepareCMD(0x00u,0x0E);
  2617  0010F2  0E0E               	movlw	14
  2618  0010F4  6E43               	movwf	app_HD44780_PrepareCMD@lub_cmd,c
  2619  0010F6  0E00               	movlw	0
  2620  0010F8  EC4A  F00E         	call	_app_HD44780_PrepareCMD
  2621                           
  2622                           ;app_HD44780.c: 156: if(app_HD44780_SenCmd() == ((T_BOOLEAN)1u))
  2623  0010FC  ECA6  F00A         	call	_app_HD44780_SenCmd	;wreg free
  2624  001100  06E8               	decf	wreg,f,c
  2625  001102  A4D8               	btfss	status,2,c
  2626  001104  0012               	return	
  2627                           
  2628                           ;app_HD44780.c: 157: {
  2629                           ;app_HD44780.c: 158: app_HD44780_CallInitDelay(1u,HD_MODE_SET);
  2630  001106  0E02               	movlw	2
  2631  001108  6E43               	movwf	app_HD44780_CallInitDelay@lub_next_state,c
  2632  00110A  0E01               	movlw	1
  2633  00110C  EC87  F00E         	call	_app_HD44780_CallInitDelay
  2634                           
  2635                           ;app_HD44780.c: 163: }
  2636                           ;app_HD44780.c: 164: }break;
  2637                           
  2638                           ;app_HD44780.c: 160: else
  2639                           ;app_HD44780.c: 161: {
  2640                           
  2641                           ;app_HD44780.c: 159: }
  2642  001110  0012               	return	
  2643  001112                     l3461:
  2644                           
  2645                           ;app_HD44780.c: 166: {
  2646                           ;app_HD44780.c: 167: app_HD44780_PrepareCMD(0x00u,0x28);
  2647  001112  0E28               	movlw	40
  2648  001114  6E43               	movwf	app_HD44780_PrepareCMD@lub_cmd,c
  2649  001116  0E00               	movlw	0
  2650  001118  EC4A  F00E         	call	_app_HD44780_PrepareCMD
  2651                           
  2652                           ;app_HD44780.c: 168: if(app_HD44780_SenCmd() == ((T_BOOLEAN)1u))
  2653  00111C  ECA6  F00A         	call	_app_HD44780_SenCmd	;wreg free
  2654  001120  06E8               	decf	wreg,f,c
  2655  001122  A4D8               	btfss	status,2,c
  2656  001124  0012               	return	
  2657                           
  2658                           ;app_HD44780.c: 169: {
  2659                           ;app_HD44780.c: 170: rub_HDInitState = HD_SET_STATE;
  2660  001126  0E00               	movlw	0
  2661  001128  6E4D               	movwf	_rub_HDInitState,c
  2662                           
  2663                           ;app_HD44780.c: 171: ruw_HDBuffer.HD_READY = ((T_BOOLEAN)1u);
  2664  00112A  860D               	bsf	_ruw_HDBuffer,3,c
  2665                           
  2666                           ;app_HD44780.c: 176: }
  2667                           ;app_HD44780.c: 177: }break;
  2668                           
  2669                           ;app_HD44780.c: 173: else
  2670                           ;app_HD44780.c: 174: {
  2671                           
  2672                           ;app_HD44780.c: 172: }
  2673  00112C  0012               	return	
  2674  00112E                     l3467:
  2675                           
  2676                           ;app_HD44780.c: 179: {
  2677                           ;app_HD44780.c: 180: if(rub_HDDelay > 0u)
  2678  00112E  504C               	movf	_rub_HDDelay,w,c
  2679  001130  B4D8               	btfsc	status,2,c
  2680  001132  D002               	goto	l388
  2681                           
  2682                           ;app_HD44780.c: 181: {
  2683                           ;app_HD44780.c: 182: rub_HDDelay--;
  2684  001134  064C               	decf	_rub_HDDelay,f,c
  2685                           
  2686                           ;app_HD44780.c: 183: }
  2687  001136  0012               	return	
  2688  001138                     l388:
  2689                           
  2690                           ;app_HD44780.c: 184: else
  2691                           ;app_HD44780.c: 185: {
  2692                           ;app_HD44780.c: 186: rub_HDInitState = rub_HD_NextState;
  2693  001138  C02B  F04D         	movff	_rub_HD_NextState,_rub_HDInitState
  2694                           
  2695                           ;app_HD44780.c: 193: }
  2696                           
  2697                           ;app_HD44780.c: 190: {
  2698                           ;app_HD44780.c: 192: }break;
  2699                           
  2700                           ;app_HD44780.c: 189: default:
  2701                           
  2702                           ;app_HD44780.c: 187: }
  2703                           ;app_HD44780.c: 188: }break;
  2704  00113C  0012               	return	
  2705  00113E                     l3473:
  2706  00113E  504D               	movf	_rub_HDInitState,w,c
  2707                           
  2708                           ; Switch size 1, requested type "space"
  2709                           ; Number of cases is 4, Range of values is 0 to 3
  2710                           ; switch strategies available:
  2711                           ; Name         Instructions Cycles
  2712                           ; simple_byte           13     7 (average)
  2713                           ;	Chosen strategy is simple_byte
  2714  001140  0A00               	xorlw	0	; case 0
  2715  001142  B4D8               	btfsc	status,2,c
  2716  001144  D7C6               	goto	l3453
  2717  001146  0A01               	xorlw	1	; case 1
  2718  001148  B4D8               	btfsc	status,2,c
  2719  00114A  D7D3               	goto	l3457
  2720  00114C  0A03               	xorlw	3	; case 2
  2721  00114E  B4D8               	btfsc	status,2,c
  2722  001150  D7E0               	goto	l3461
  2723  001152  0A01               	xorlw	1	; case 3
  2724  001154  A4D8               	btfss	status,2,c
  2725                           
  2726                           ;app_HD44780.c: 194: }
  2727  001156  0012               	return	
  2728  001158  D7EA               	goto	l3467
  2729  00115A                     l3475:
  2730                           
  2731                           ;app_HD44780.c: 195: else
  2732                           ;app_HD44780.c: 196: {
  2733                           ;app_HD44780.c: 197: if(rub_Line == 0u)
  2734  00115A  502C               	movf	_rub_Line,w,c
  2735  00115C  A4D8               	btfss	status,2,c
  2736  00115E  D026               	goto	l3489
  2737                           
  2738                           ;app_HD44780.c: 198: {
  2739                           ;app_HD44780.c: 199: if(rub_SlotCounter < 16u)
  2740  001160  0E10               	movlw	16
  2741  001162  602E               	cpfslt	_rub_SlotCounter,c
  2742  001164  D014               	goto	l3485
  2743                           
  2744                           ;app_HD44780.c: 200: {
  2745                           ;app_HD44780.c: 201: app_HD44780_PrepareCMD(0x01u,raub_DataBufferLine1[rub_SlotCounter])
      +                          ;
  2746  001166  502E               	movf	_rub_SlotCounter,w,c
  2747  001168  0D01               	mullw	1
  2748  00116A  0EA6               	movlw	low _raub_DataBufferLine1
  2749  00116C  24F3               	addwf	prodl,w,c
  2750  00116E  6ED9               	movwf	fsr2l,c
  2751  001170  0E00               	movlw	high _raub_DataBufferLine1
  2752  001172  20F4               	addwfc	prodh,w,c
  2753  001174  6EDA               	movwf	fsr2h,c
  2754  001176  50DF               	movf	indf2,w,c
  2755  001178  6E43               	movwf	app_HD44780_PrepareCMD@lub_cmd,c
  2756  00117A  0E01               	movlw	1
  2757  00117C  EC4A  F00E         	call	_app_HD44780_PrepareCMD
  2758                           
  2759                           ;app_HD44780.c: 202: if(app_HD44780_SenCmd() == ((T_BOOLEAN)1u))
  2760  001180  ECA6  F00A         	call	_app_HD44780_SenCmd	;wreg free
  2761  001184  06E8               	decf	wreg,f,c
  2762  001186  A4D8               	btfss	status,2,c
  2763  001188  0012               	return	
  2764                           
  2765                           ;app_HD44780.c: 203: {
  2766                           ;app_HD44780.c: 204: rub_SlotCounter++;
  2767  00118A  2A2E               	incf	_rub_SlotCounter,f,c
  2768                           
  2769                           ;app_HD44780.c: 209: }
  2770                           ;app_HD44780.c: 210: }
  2771                           
  2772                           ;app_HD44780.c: 206: else
  2773                           ;app_HD44780.c: 207: {
  2774                           
  2775                           ;app_HD44780.c: 205: }
  2776  00118C  0012               	return	
  2777  00118E                     l3485:
  2778                           
  2779                           ;app_HD44780.c: 211: else
  2780                           ;app_HD44780.c: 212: {
  2781                           ;app_HD44780.c: 213: app_HD44780_PrepareCMD(0x00u,0xC0u);
  2782  00118E  0EC0               	movlw	192
  2783  001190  6E43               	movwf	app_HD44780_PrepareCMD@lub_cmd,c
  2784  001192  0E00               	movlw	0
  2785  001194  EC4A  F00E         	call	_app_HD44780_PrepareCMD
  2786                           
  2787                           ;app_HD44780.c: 214: if(app_HD44780_SenCmd() == ((T_BOOLEAN)1u))
  2788  001198  ECA6  F00A         	call	_app_HD44780_SenCmd	;wreg free
  2789  00119C  06E8               	decf	wreg,f,c
  2790  00119E  A4D8               	btfss	status,2,c
  2791  0011A0  0012               	return	
  2792                           
  2793                           ;app_HD44780.c: 215: {
  2794                           ;app_HD44780.c: 216: rub_SlotCounter = 0u;
  2795  0011A2  0E00               	movlw	0
  2796  0011A4  6E2E               	movwf	_rub_SlotCounter,c
  2797                           
  2798                           ;app_HD44780.c: 217: rub_Line = 0x01;
  2799  0011A6  0E01               	movlw	1
  2800  0011A8  6E2C               	movwf	_rub_Line,c
  2801                           
  2802                           ;app_HD44780.c: 222: }
  2803                           ;app_HD44780.c: 223: }
  2804                           ;app_HD44780.c: 224: }
  2805                           
  2806                           ;app_HD44780.c: 219: else
  2807                           ;app_HD44780.c: 220: {
  2808                           
  2809                           ;app_HD44780.c: 218: }
  2810  0011AA  0012               	return	
  2811  0011AC                     l3489:
  2812                           
  2813                           ;app_HD44780.c: 225: else
  2814                           ;app_HD44780.c: 226: {
  2815                           ;app_HD44780.c: 227: if(rub_SlotCounter < 16u)
  2816  0011AC  0E10               	movlw	16
  2817  0011AE  602E               	cpfslt	_rub_SlotCounter,c
  2818  0011B0  D014               	goto	l3497
  2819                           
  2820                           ;app_HD44780.c: 228: {
  2821                           ;app_HD44780.c: 229: app_HD44780_PrepareCMD(0x01u,raub_DataBufferLine2[rub_SlotCounter])
      +                          ;
  2822  0011B2  502E               	movf	_rub_SlotCounter,w,c
  2823  0011B4  0D01               	mullw	1
  2824  0011B6  0EB6               	movlw	low _raub_DataBufferLine2
  2825  0011B8  24F3               	addwf	prodl,w,c
  2826  0011BA  6ED9               	movwf	fsr2l,c
  2827  0011BC  0E00               	movlw	high _raub_DataBufferLine2
  2828  0011BE  20F4               	addwfc	prodh,w,c
  2829  0011C0  6EDA               	movwf	fsr2h,c
  2830  0011C2  50DF               	movf	indf2,w,c
  2831  0011C4  6E43               	movwf	app_HD44780_PrepareCMD@lub_cmd,c
  2832  0011C6  0E01               	movlw	1
  2833  0011C8  EC4A  F00E         	call	_app_HD44780_PrepareCMD
  2834                           
  2835                           ;app_HD44780.c: 230: if(app_HD44780_SenCmd() == ((T_BOOLEAN)1u))
  2836  0011CC  ECA6  F00A         	call	_app_HD44780_SenCmd	;wreg free
  2837  0011D0  06E8               	decf	wreg,f,c
  2838  0011D2  A4D8               	btfss	status,2,c
  2839  0011D4  0012               	return	
  2840                           
  2841                           ;app_HD44780.c: 231: {
  2842                           ;app_HD44780.c: 232: rub_SlotCounter++;
  2843  0011D6  2A2E               	incf	_rub_SlotCounter,f,c
  2844                           
  2845                           ;app_HD44780.c: 237: }
  2846                           ;app_HD44780.c: 238: }
  2847                           
  2848                           ;app_HD44780.c: 234: else
  2849                           ;app_HD44780.c: 235: {
  2850                           
  2851                           ;app_HD44780.c: 233: }
  2852  0011D8  0012               	return	
  2853  0011DA                     l3497:
  2854                           
  2855                           ;app_HD44780.c: 239: else
  2856                           ;app_HD44780.c: 240: {
  2857                           ;app_HD44780.c: 241: app_HD44780_PrepareCMD(0x00u,0x80u);
  2858  0011DA  0E80               	movlw	128
  2859  0011DC  6E43               	movwf	app_HD44780_PrepareCMD@lub_cmd,c
  2860  0011DE  0E00               	movlw	0
  2861  0011E0  EC4A  F00E         	call	_app_HD44780_PrepareCMD
  2862                           
  2863                           ;app_HD44780.c: 242: if(app_HD44780_SenCmd() == ((T_BOOLEAN)1u))
  2864  0011E4  ECA6  F00A         	call	_app_HD44780_SenCmd	;wreg free
  2865  0011E8  06E8               	decf	wreg,f,c
  2866  0011EA  A4D8               	btfss	status,2,c
  2867  0011EC  0012               	return	
  2868                           
  2869                           ;app_HD44780.c: 243: {
  2870                           ;app_HD44780.c: 244: rub_SlotCounter = 0u;
  2871  0011EE  0E00               	movlw	0
  2872  0011F0  6E2E               	movwf	_rub_SlotCounter,c
  2873                           
  2874                           ;app_HD44780.c: 245: rub_Line = 0x00;
  2875  0011F2  0E00               	movlw	0
  2876  0011F4  6E2C               	movwf	_rub_Line,c
  2877                           
  2878                           ;app_HD44780.c: 246: GIE = ((T_BOOLEAN)0u);
  2879  0011F6  9EF2               	bcf	intcon,7,c	;volatile
  2880                           
  2881                           ;app_HD44780.c: 247: app_HD44780_Init();
  2882  0011F8  EC60  F00E         	call	_app_HD44780_Init	;wreg free
  2883                           
  2884                           ;app_HD44780.c: 248: GIE = ((T_BOOLEAN)1u);
  2885  0011FC  8EF2               	bsf	intcon,7,c	;volatile
  2886                           
  2887                           ;app_HD44780.c: 250: else
  2888                           ;app_HD44780.c: 251: {
  2889                           
  2890                           ;app_HD44780.c: 249: }
  2891  0011FE  0012               	return	
  2892  001200                     __end_of_app_HD44780_Mngr:
  2893                           	opt stack 0
  2894                           tosu	equ	0xFFF
  2895                           tosh	equ	0xFFE
  2896                           tosl	equ	0xFFD
  2897                           pclath	equ	0xFFA
  2898                           tblptru	equ	0xFF8
  2899                           tblptrh	equ	0xFF7
  2900                           tblptrl	equ	0xFF6
  2901                           tablat	equ	0xFF5
  2902                           prodh	equ	0xFF4
  2903                           prodl	equ	0xFF3
  2904                           intcon	equ	0xFF2
  2905                           postinc0	equ	0xFEE
  2906                           wreg	equ	0xFE8
  2907                           postdec1	equ	0xFE5
  2908                           fsr1h	equ	0xFE2
  2909                           fsr1l	equ	0xFE1
  2910                           indf2	equ	0xFDF
  2911                           postinc2	equ	0xFDE
  2912                           postdec2	equ	0xFDD
  2913                           fsr2h	equ	0xFDA
  2914                           fsr2l	equ	0xFD9
  2915                           status	equ	0xFD8
  2916                           
  2917 ;; *************** function _app_HD44780_SenCmd *****************
  2918 ;; Defined at:
  2919 ;;		line 62 in file "app/app_HD44780.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  lub_return      1   15[COMRAM] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      unsigned char 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2937 ;;Total ram usage:        1 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    6
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_app_HD44780_Mngr
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text17
  2948  00154C                     __ptext17:
  2949                           	opt stack 0
  2950  00154C                     _app_HD44780_SenCmd:
  2951                           	opt stack 21
  2952                           
  2953                           ;app_HD44780.c: 64: T_UBYTE lub_return = ((T_BOOLEAN)0u);
  2954                           
  2955                           ;incstack = 0
  2956  00154C  0E00               	movlw	0
  2957  00154E  6E43               	movwf	app_HD44780_SenCmd@lub_return,c
  2958                           
  2959                           ;app_HD44780.c: 67: LATD2 = ruw_HDBuffer.RS;
  2960  001550  A00D               	btfss	_ruw_HDBuffer,0,c
  2961  001552  D002               	goto	u1950
  2962  001554  8486               	bsf	3974,2,c	;volatile
  2963  001556  D001               	goto	l3351
  2964  001558                     u1950:
  2965  001558  9486               	bcf	3974,2,c	;volatile
  2966  00155A                     l3351:
  2967                           
  2968                           ;app_HD44780.c: 68: LATD3 = ruw_HDBuffer.RW;
  2969  00155A  A20D               	btfss	_ruw_HDBuffer,1,c
  2970  00155C  D002               	goto	u1970
  2971  00155E  8686               	bsf	3974,3,c	;volatile
  2972  001560  D001               	goto	u1985
  2973  001562                     u1970:
  2974  001562  9686               	bcf	3974,3,c	;volatile
  2975  001564                     u1985:
  2976                           
  2977                           ;app_HD44780.c: 69: if(rub_SEQFLAG == ((T_BOOLEAN)0u))
  2978  001564  502D               	movf	_rub_SEQFLAG,w,c
  2979  001566  A4D8               	btfss	status,2,c
  2980  001568  D01A               	goto	l360
  2981                           
  2982                           ;app_HD44780.c: 70: {
  2983                           ;app_HD44780.c: 71: LATD4 = ruw_HDBuffer.DATA.Bits.DB4;
  2984  00156A  A80E               	btfss	_ruw_HDBuffer+1,4,c
  2985  00156C  D002               	goto	u2000
  2986  00156E  8886               	bsf	3974,4,c	;volatile
  2987  001570  D001               	goto	u2015
  2988  001572                     u2000:
  2989  001572  9886               	bcf	3974,4,c	;volatile
  2990  001574                     u2015:
  2991                           
  2992                           ;app_HD44780.c: 72: LATD5 = ruw_HDBuffer.DATA.Bits.DB5;
  2993  001574  AA0E               	btfss	_ruw_HDBuffer+1,5,c
  2994  001576  D002               	goto	u2020
  2995  001578  8A86               	bsf	3974,5,c	;volatile
  2996  00157A  D001               	goto	u2035
  2997  00157C                     u2020:
  2998  00157C  9A86               	bcf	3974,5,c	;volatile
  2999  00157E                     u2035:
  3000                           
  3001                           ;app_HD44780.c: 73: LATD6 = ruw_HDBuffer.DATA.Bits.DB6;
  3002  00157E  AC0E               	btfss	_ruw_HDBuffer+1,6,c
  3003  001580  D002               	goto	u2040
  3004  001582  8C86               	bsf	3974,6,c	;volatile
  3005  001584  D001               	goto	u2055
  3006  001586                     u2040:
  3007  001586  9C86               	bcf	3974,6,c	;volatile
  3008  001588                     u2055:
  3009                           
  3010                           ;app_HD44780.c: 74: LATD7 = ruw_HDBuffer.DATA.Bits.DB7;
  3011  001588  AE0E               	btfss	_ruw_HDBuffer+1,7,c
  3012  00158A  D002               	goto	u2060
  3013  00158C  8E86               	bsf	3974,7,c	;volatile
  3014  00158E  D001               	goto	u2075
  3015  001590                     u2060:
  3016  001590  9E86               	bcf	3974,7,c	;volatile
  3017  001592                     u2075:
  3018                           
  3019                           ;app_HD44780.c: 76: if(LATD1 == ((T_BOOLEAN)0u))
  3020  001592  A286               	btfss	3974,1,c	;volatile
  3021  001594  D01A               	goto	l3361
  3022                           
  3023                           ;app_HD44780.c: 80: else
  3024                           ;app_HD44780.c: 81: {
  3025                           ;app_HD44780.c: 82: rub_SEQFLAG = ((T_BOOLEAN)1u);
  3026                           
  3027                           ;app_HD44780.c: 79: }
  3028                           
  3029                           ;app_HD44780.c: 77: {
  3030                           ;app_HD44780.c: 78: LATD1 = ((T_BOOLEAN)1u);
  3031  001596  0E01               	movlw	1
  3032  001598  6E2D               	movwf	_rub_SEQFLAG,c
  3033                           
  3034                           ;app_HD44780.c: 83: LATD1 = ((T_BOOLEAN)0u);
  3035  00159A  9286               	bcf	3974,1,c	;volatile
  3036  00159C  D017               	goto	l3363
  3037  00159E                     l360:
  3038                           
  3039                           ;app_HD44780.c: 89: else
  3040                           ;app_HD44780.c: 90: {
  3041                           ;app_HD44780.c: 91: LATD4 = ruw_HDBuffer.DATA.Bits.DB0;
  3042  00159E  A00E               	btfss	_ruw_HDBuffer+1,0,c
  3043  0015A0  D002               	goto	u2090
  3044  0015A2  8886               	bsf	3974,4,c	;volatile
  3045  0015A4  D001               	goto	u2105
  3046  0015A6                     u2090:
  3047  0015A6  9886               	bcf	3974,4,c	;volatile
  3048  0015A8                     u2105:
  3049                           
  3050                           ;app_HD44780.c: 92: LATD5 = ruw_HDBuffer.DATA.Bits.DB1;
  3051  0015A8  A20E               	btfss	_ruw_HDBuffer+1,1,c
  3052  0015AA  D002               	goto	u2110
  3053  0015AC  8A86               	bsf	3974,5,c	;volatile
  3054  0015AE  D001               	goto	u2125
  3055  0015B0                     u2110:
  3056  0015B0  9A86               	bcf	3974,5,c	;volatile
  3057  0015B2                     u2125:
  3058                           
  3059                           ;app_HD44780.c: 93: LATD6 = ruw_HDBuffer.DATA.Bits.DB2;
  3060  0015B2  A40E               	btfss	_ruw_HDBuffer+1,2,c
  3061  0015B4  D002               	goto	u2130
  3062  0015B6  8C86               	bsf	3974,6,c	;volatile
  3063  0015B8  D001               	goto	u2145
  3064  0015BA                     u2130:
  3065  0015BA  9C86               	bcf	3974,6,c	;volatile
  3066  0015BC                     u2145:
  3067                           
  3068                           ;app_HD44780.c: 94: LATD7 = ruw_HDBuffer.DATA.Bits.DB3;
  3069  0015BC  A60E               	btfss	_ruw_HDBuffer+1,3,c
  3070  0015BE  D002               	goto	u2150
  3071  0015C0  8E86               	bsf	3974,7,c	;volatile
  3072  0015C2  D001               	goto	u2165
  3073  0015C4                     u2150:
  3074  0015C4  9E86               	bcf	3974,7,c	;volatile
  3075  0015C6                     u2165:
  3076                           
  3077                           ;app_HD44780.c: 96: if(LATD1 == ((T_BOOLEAN)0u))
  3078  0015C6  B286               	btfsc	3974,1,c	;volatile
  3079  0015C8  D003               	goto	l3365
  3080  0015CA                     l3361:
  3081                           
  3082                           ;app_HD44780.c: 97: {
  3083                           ;app_HD44780.c: 98: LATD1 = ((T_BOOLEAN)1u);
  3084  0015CA  8286               	bsf	3974,1,c	;volatile
  3085  0015CC                     l3363:
  3086                           
  3087                           ;app_HD44780.c: 99: lub_return = ((T_BOOLEAN)0u);
  3088  0015CC  0E00               	movlw	0
  3089  0015CE  D004               	goto	L1
  3090  0015D0                     l3365:
  3091                           
  3092                           ;app_HD44780.c: 101: else
  3093                           ;app_HD44780.c: 102: {
  3094                           ;app_HD44780.c: 103: rub_SEQFLAG = ((T_BOOLEAN)0u);
  3095  0015D0  0E00               	movlw	0
  3096  0015D2  6E2D               	movwf	_rub_SEQFLAG,c
  3097                           
  3098                           ;app_HD44780.c: 104: LATD1 = ((T_BOOLEAN)0u);
  3099  0015D4  9286               	bcf	3974,1,c	;volatile
  3100                           
  3101                           ;app_HD44780.c: 105: lub_return = ((T_BOOLEAN)1u);
  3102  0015D6  0E01               	movlw	1
  3103  0015D8                     L1:
  3104  0015D8  6E43               	movwf	app_HD44780_SenCmd@lub_return,c
  3105                           
  3106                           ;app_HD44780.c: 106: }
  3107                           ;app_HD44780.c: 107: }
  3108                           ;app_HD44780.c: 108: return(lub_return);
  3109  0015DA  5043               	movf	app_HD44780_SenCmd@lub_return,w,c
  3110  0015DC  0012               	return	
  3111  0015DE                     __end_of_app_HD44780_SenCmd:
  3112                           	opt stack 0
  3113                           tosu	equ	0xFFF
  3114                           tosh	equ	0xFFE
  3115                           tosl	equ	0xFFD
  3116                           pclath	equ	0xFFA
  3117                           tblptru	equ	0xFF8
  3118                           tblptrh	equ	0xFF7
  3119                           tblptrl	equ	0xFF6
  3120                           tablat	equ	0xFF5
  3121                           prodh	equ	0xFF4
  3122                           prodl	equ	0xFF3
  3123                           intcon	equ	0xFF2
  3124                           postinc0	equ	0xFEE
  3125                           wreg	equ	0xFE8
  3126                           postdec1	equ	0xFE5
  3127                           fsr1h	equ	0xFE2
  3128                           fsr1l	equ	0xFE1
  3129                           indf2	equ	0xFDF
  3130                           postinc2	equ	0xFDE
  3131                           postdec2	equ	0xFDD
  3132                           fsr2h	equ	0xFDA
  3133                           fsr2l	equ	0xFD9
  3134                           status	equ	0xFD8
  3135                           
  3136 ;; *************** function _app_HD44780_PrepareCMD *****************
  3137 ;; Defined at:
  3138 ;;		line 111 in file "app/app_HD44780.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  lub_type        1    wreg     unsigned char 
  3141 ;;  lub_cmd         1   15[COMRAM] unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  lub_type        1   16[COMRAM] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3153 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3157 ;;Total ram usage:        2 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    6
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_app_HD44780_Mngr
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text18
  3168  001C94                     __ptext18:
  3169                           	opt stack 0
  3170  001C94                     _app_HD44780_PrepareCMD:
  3171                           	opt stack 21
  3172                           
  3173                           ;incstack = 0
  3174                           ;app_HD44780_PrepareCMD@lub_type stored from wreg
  3175  001C94  6E44               	movwf	app_HD44780_PrepareCMD@lub_type,c
  3176                           
  3177                           ;app_HD44780.c: 113: ruw_HDBuffer.RS = lub_type;
  3178  001C96  B044               	btfsc	app_HD44780_PrepareCMD@lub_type,0,c
  3179  001C98  D002               	bra	u2185
  3180  001C9A  900D               	bcf	_ruw_HDBuffer,0,c
  3181  001C9C  D001               	bra	u2186
  3182  001C9E                     u2185:
  3183  001C9E  800D               	bsf	_ruw_HDBuffer,0,c
  3184  001CA0                     u2186:
  3185                           
  3186                           ;app_HD44780.c: 114: ruw_HDBuffer.RW = 0u;
  3187  001CA0  920D               	bcf	_ruw_HDBuffer,1,c
  3188                           
  3189                           ;app_HD44780.c: 115: ruw_HDBuffer.DATA.Byte = lub_cmd;
  3190  001CA2  C043  F00E         	movff	app_HD44780_PrepareCMD@lub_cmd,_ruw_HDBuffer+1
  3191                           
  3192                           ;app_HD44780.c: 116: ruw_HDBuffer.DATA_READY = ((T_BOOLEAN)1u);
  3193  001CA6  840D               	bsf	_ruw_HDBuffer,2,c
  3194  001CA8  0012               	return		;funcret
  3195  001CAA                     __end_of_app_HD44780_PrepareCMD:
  3196                           	opt stack 0
  3197                           tosu	equ	0xFFF
  3198                           tosh	equ	0xFFE
  3199                           tosl	equ	0xFFD
  3200                           pclath	equ	0xFFA
  3201                           tblptru	equ	0xFF8
  3202                           tblptrh	equ	0xFF7
  3203                           tblptrl	equ	0xFF6
  3204                           tablat	equ	0xFF5
  3205                           prodh	equ	0xFF4
  3206                           prodl	equ	0xFF3
  3207                           intcon	equ	0xFF2
  3208                           postinc0	equ	0xFEE
  3209                           wreg	equ	0xFE8
  3210                           postdec1	equ	0xFE5
  3211                           fsr1h	equ	0xFE2
  3212                           fsr1l	equ	0xFE1
  3213                           indf2	equ	0xFDF
  3214                           postinc2	equ	0xFDE
  3215                           postdec2	equ	0xFDD
  3216                           fsr2h	equ	0xFDA
  3217                           fsr2l	equ	0xFD9
  3218                           status	equ	0xFD8
  3219                           
  3220 ;; *************** function _app_HD44780_CallInitDelay *****************
  3221 ;; Defined at:
  3222 ;;		line 259 in file "app/app_HD44780.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  lub_delay       1    wreg     unsigned char 
  3225 ;;  lub_next_sta    1   15[COMRAM] unsigned char 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  lub_delay       1   16[COMRAM] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3237 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3241 ;;Total ram usage:        2 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    6
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_app_HD44780_Mngr
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text19
  3252  001D0E                     __ptext19:
  3253                           	opt stack 0
  3254  001D0E                     _app_HD44780_CallInitDelay:
  3255                           	opt stack 21
  3256                           
  3257                           ;incstack = 0
  3258                           ;app_HD44780_CallInitDelay@lub_delay stored from wreg
  3259  001D0E  6E44               	movwf	app_HD44780_CallInitDelay@lub_delay,c
  3260                           
  3261                           ;app_HD44780.c: 261: rub_HDDelay = lub_delay;
  3262  001D10  C044  F04C         	movff	app_HD44780_CallInitDelay@lub_delay,_rub_HDDelay
  3263                           
  3264                           ;app_HD44780.c: 262: rub_HD_NextState = lub_next_state;
  3265  001D14  C043  F02B         	movff	app_HD44780_CallInitDelay@lub_next_state,_rub_HD_NextState
  3266                           
  3267                           ;app_HD44780.c: 263: rub_HDInitState = HD_INIT_DELAY;
  3268  001D18  0E03               	movlw	3
  3269  001D1A  6E4D               	movwf	_rub_HDInitState,c
  3270  001D1C  0012               	return		;funcret
  3271  001D1E                     __end_of_app_HD44780_CallInitDelay:
  3272                           	opt stack 0
  3273                           tosu	equ	0xFFF
  3274                           tosh	equ	0xFFE
  3275                           tosl	equ	0xFFD
  3276                           pclath	equ	0xFFA
  3277                           tblptru	equ	0xFF8
  3278                           tblptrh	equ	0xFF7
  3279                           tblptrl	equ	0xFF6
  3280                           tablat	equ	0xFF5
  3281                           prodh	equ	0xFF4
  3282                           prodl	equ	0xFF3
  3283                           intcon	equ	0xFF2
  3284                           postinc0	equ	0xFEE
  3285                           wreg	equ	0xFE8
  3286                           postdec1	equ	0xFE5
  3287                           fsr1h	equ	0xFE2
  3288                           fsr1l	equ	0xFE1
  3289                           indf2	equ	0xFDF
  3290                           postinc2	equ	0xFDE
  3291                           postdec2	equ	0xFDD
  3292                           fsr2h	equ	0xFDA
  3293                           fsr2l	equ	0xFD9
  3294                           status	equ	0xFD8
  3295                           
  3296 ;; *************** function _app_HD44780_DisplayUpdate *****************
  3297 ;; Defined at:
  3298 ;;		line 266 in file "app/app_HD44780.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3314 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3315 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3316 ;;Total ram usage:        1 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; Hardware stack levels required when called:    8
  3319 ;; This function calls:
  3320 ;;		_bcd2ascii
  3321 ;;		_bin2bcd
  3322 ;; This function is called by:
  3323 ;;		_periodic_task_2tk
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text20
  3328  001BE8                     __ptext20:
  3329                           	opt stack 0
  3330  001BE8                     _app_HD44780_DisplayUpdate:
  3331                           	opt stack 20
  3332                           
  3333                           ;app_HD44780.c: 268: bin2bcd(rub_DMX_DATA[0]);
  3334                           
  3335                           ;incstack = 0
  3336  001BE8  C0E3  F0D8         	movff	_rub_DMX_DATA,??_app_HD44780_DisplayUpdate
  3337  001BEC  0100               	movlb	0	; () banked
  3338  001BEE  51D8               	movf	??_app_HD44780_DisplayUpdate& (0+255),w,b
  3339  001BF0  0100               	movlb	0	; () banked
  3340  001BF2  6FD4               	movwf	bin2bcd@luw_Bin_Data& (0+255),b
  3341  001BF4  6BD5               	clrf	(bin2bcd@luw_Bin_Data+1)& (0+255),b
  3342  001BF6  EC99  F007         	call	_bin2bcd	;wreg free
  3343                           
  3344                           ;app_HD44780.c: 270: bcd2ascii();
  3345  001BFA  EC33  F00D         	call	_bcd2ascii	;wreg free
  3346                           
  3347                           ;app_HD44780.c: 272: raub_DataBufferLine1[0] = rub_BCDCen;
  3348  001BFE  C007  F0A6         	movff	_rub_BCDCen,_raub_DataBufferLine1
  3349                           
  3350                           ;app_HD44780.c: 273: raub_DataBufferLine1[1] = rub_BCDDec;
  3351  001C02  C009  F0A7         	movff	_rub_BCDDec,_raub_DataBufferLine1+1
  3352                           
  3353                           ;app_HD44780.c: 274: raub_DataBufferLine1[2] = rub_BCDUni;
  3354  001C06  C096  F0A8         	movff	_rub_BCDUni,_raub_DataBufferLine1+2
  3355  001C0A  0012               	return		;funcret
  3356  001C0C                     __end_of_app_HD44780_DisplayUpdate:
  3357                           	opt stack 0
  3358                           tosu	equ	0xFFF
  3359                           tosh	equ	0xFFE
  3360                           tosl	equ	0xFFD
  3361                           pclath	equ	0xFFA
  3362                           tblptru	equ	0xFF8
  3363                           tblptrh	equ	0xFF7
  3364                           tblptrl	equ	0xFF6
  3365                           tablat	equ	0xFF5
  3366                           prodh	equ	0xFF4
  3367                           prodl	equ	0xFF3
  3368                           intcon	equ	0xFF2
  3369                           postinc0	equ	0xFEE
  3370                           wreg	equ	0xFE8
  3371                           postdec1	equ	0xFE5
  3372                           fsr1h	equ	0xFE2
  3373                           fsr1l	equ	0xFE1
  3374                           indf2	equ	0xFDF
  3375                           postinc2	equ	0xFDE
  3376                           postdec2	equ	0xFDD
  3377                           fsr2h	equ	0xFDA
  3378                           fsr2l	equ	0xFD9
  3379                           status	equ	0xFD8
  3380                           
  3381 ;; *************** function _bin2bcd *****************
  3382 ;; Defined at:
  3383 ;;		line 35 in file "app/app_convert.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  luw_Bin_Data    2    6[BANK0 ] unsigned short 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  luw_aux         2    8[BANK0 ] unsigned short 
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3397 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3398 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3400 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3401 ;;Total ram usage:        4 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    7
  3404 ;; This function calls:
  3405 ;;		___aldiv
  3406 ;;		___lwdiv
  3407 ;;		___wmul
  3408 ;; This function is called by:
  3409 ;;		_app_HD44780_DisplayUpdate
  3410 ;;		_app_UpdateCounterDisplay
  3411 ;;		_app_UpdateADCDisplay
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text21
  3416  000F32                     __ptext21:
  3417                           	opt stack 0
  3418  000F32                     _bin2bcd:
  3419                           	opt stack 20
  3420                           
  3421                           ;app_convert.c: 36: T_UWORD luw_aux;
  3422                           ;app_convert.c: 37: luw_aux = luw_Bin_Data;
  3423                           
  3424                           ;incstack = 0
  3425  000F32  C0D4  F0D6         	movff	bin2bcd@luw_Bin_Data,bin2bcd@luw_aux
  3426  000F36  C0D5  F0D7         	movff	bin2bcd@luw_Bin_Data+1,bin2bcd@luw_aux+1
  3427                           
  3428                           ;app_convert.c: 38: rub_BCDCmil = (luw_aux / 100000);
  3429  000F3A  C0D6  F043         	movff	bin2bcd@luw_aux,___aldiv@dividend
  3430  000F3E  C0D7  F044         	movff	bin2bcd@luw_aux+1,___aldiv@dividend+1
  3431  000F42  6A45               	clrf	___aldiv@dividend+2,c
  3432  000F44  6A46               	clrf	___aldiv@dividend+3,c
  3433  000F46  0EA0               	movlw	160
  3434  000F48  6E47               	movwf	___aldiv@divisor,c
  3435  000F4A  0E86               	movlw	134
  3436  000F4C  6E48               	movwf	___aldiv@divisor+1,c
  3437  000F4E  0E01               	movlw	1
  3438  000F50  6E49               	movwf	___aldiv@divisor+2,c
  3439  000F52  0E00               	movlw	0
  3440  000F54  6E4A               	movwf	___aldiv@divisor+3,c
  3441  000F56  EC00  F009         	call	___aldiv	;wreg free
  3442  000F5A  C043  F090         	movff	?___aldiv,_rub_BCDCmil
  3443  000F5E  C044  F091         	movff	?___aldiv+1,_rub_BCDCmil+1
  3444                           
  3445                           ;app_convert.c: 39: luw_aux = (luw_aux - (rub_BCDCmil*100000));
  3446  000F62  C090  F043         	movff	_rub_BCDCmil,___wmul@multiplier
  3447  000F66  C091  F044         	movff	_rub_BCDCmil+1,___wmul@multiplier+1
  3448  000F6A  0E86               	movlw	134
  3449  000F6C  6E46               	movwf	___wmul@multiplicand+1,c
  3450  000F6E  0EA0               	movlw	160
  3451  000F70  6E45               	movwf	___wmul@multiplicand,c
  3452  000F72  ECCE  F00D         	call	___wmul	;wreg free
  3453  000F76  1E43               	comf	?___wmul,f,c
  3454  000F78  1E44               	comf	?___wmul+1,f,c
  3455  000F7A  4A43               	infsnz	?___wmul,f,c
  3456  000F7C  2A44               	incf	?___wmul+1,f,c
  3457  000F7E  0100               	movlb	0	; () banked
  3458  000F80  51D6               	movf	bin2bcd@luw_aux& (0+255),w,b
  3459  000F82  2443               	addwf	?___wmul,w,c
  3460  000F84  0100               	movlb	0	; () banked
  3461  000F86  6FD6               	movwf	bin2bcd@luw_aux& (0+255),b
  3462  000F88  0100               	movlb	0	; () banked
  3463  000F8A  51D7               	movf	(bin2bcd@luw_aux+1)& (0+255),w,b
  3464  000F8C  2044               	addwfc	?___wmul+1,w,c
  3465  000F8E  0100               	movlb	0	; () banked
  3466  000F90  6FD7               	movwf	(bin2bcd@luw_aux+1)& (0+255),b
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;app_convert.c: 40: rub_BCDDmil = (luw_aux / 10000);
  3470  000F92  C0D6  F043         	movff	bin2bcd@luw_aux,___lwdiv@dividend
  3471  000F96  C0D7  F044         	movff	bin2bcd@luw_aux+1,___lwdiv@dividend+1
  3472  000F9A  0E27               	movlw	39
  3473  000F9C  6E46               	movwf	___lwdiv@divisor+1,c
  3474  000F9E  0E10               	movlw	16
  3475  000FA0  6E45               	movwf	___lwdiv@divisor,c
  3476  000FA2  EC40  F00C         	call	___lwdiv	;wreg free
  3477  000FA6  C043  F092         	movff	?___lwdiv,_rub_BCDDmil
  3478  000FAA  C044  F093         	movff	?___lwdiv+1,_rub_BCDDmil+1
  3479                           
  3480                           ;app_convert.c: 41: luw_aux = (luw_aux - (rub_BCDDmil*10000));
  3481  000FAE  C092  F043         	movff	_rub_BCDDmil,___wmul@multiplier
  3482  000FB2  C093  F044         	movff	_rub_BCDDmil+1,___wmul@multiplier+1
  3483  000FB6  0E27               	movlw	39
  3484  000FB8  6E46               	movwf	___wmul@multiplicand+1,c
  3485  000FBA  0E10               	movlw	16
  3486  000FBC  6E45               	movwf	___wmul@multiplicand,c
  3487  000FBE  ECCE  F00D         	call	___wmul	;wreg free
  3488  000FC2  1E43               	comf	?___wmul,f,c
  3489  000FC4  1E44               	comf	?___wmul+1,f,c
  3490  000FC6  4A43               	infsnz	?___wmul,f,c
  3491  000FC8  2A44               	incf	?___wmul+1,f,c
  3492  000FCA  0100               	movlb	0	; () banked
  3493  000FCC  51D6               	movf	bin2bcd@luw_aux& (0+255),w,b
  3494  000FCE  2443               	addwf	?___wmul,w,c
  3495  000FD0  0100               	movlb	0	; () banked
  3496  000FD2  6FD6               	movwf	bin2bcd@luw_aux& (0+255),b
  3497  000FD4  0100               	movlb	0	; () banked
  3498  000FD6  51D7               	movf	(bin2bcd@luw_aux+1)& (0+255),w,b
  3499  000FD8  2044               	addwfc	?___wmul+1,w,c
  3500  000FDA  0100               	movlb	0	; () banked
  3501  000FDC  6FD7               	movwf	(bin2bcd@luw_aux+1)& (0+255),b
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;app_convert.c: 42: rub_BCDUmil = (luw_aux / 1000);
  3505  000FDE  C0D6  F043         	movff	bin2bcd@luw_aux,___lwdiv@dividend
  3506  000FE2  C0D7  F044         	movff	bin2bcd@luw_aux+1,___lwdiv@dividend+1
  3507  000FE6  0E03               	movlw	3
  3508  000FE8  6E46               	movwf	___lwdiv@divisor+1,c
  3509  000FEA  0EE8               	movlw	232
  3510  000FEC  6E45               	movwf	___lwdiv@divisor,c
  3511  000FEE  EC40  F00C         	call	___lwdiv	;wreg free
  3512  000FF2  C043  F094         	movff	?___lwdiv,_rub_BCDUmil
  3513  000FF6  C044  F095         	movff	?___lwdiv+1,_rub_BCDUmil+1
  3514                           
  3515                           ;app_convert.c: 43: luw_aux = (luw_aux - (rub_BCDUmil*1000));
  3516  000FFA  C094  F043         	movff	_rub_BCDUmil,___wmul@multiplier
  3517  000FFE  C095  F044         	movff	_rub_BCDUmil+1,___wmul@multiplier+1
  3518  001002  0E03               	movlw	3
  3519  001004  6E46               	movwf	___wmul@multiplicand+1,c
  3520  001006  0EE8               	movlw	232
  3521  001008  6E45               	movwf	___wmul@multiplicand,c
  3522  00100A  ECCE  F00D         	call	___wmul	;wreg free
  3523  00100E  1E43               	comf	?___wmul,f,c
  3524  001010  1E44               	comf	?___wmul+1,f,c
  3525  001012  4A43               	infsnz	?___wmul,f,c
  3526  001014  2A44               	incf	?___wmul+1,f,c
  3527  001016  0100               	movlb	0	; () banked
  3528  001018  51D6               	movf	bin2bcd@luw_aux& (0+255),w,b
  3529  00101A  2443               	addwf	?___wmul,w,c
  3530  00101C  0100               	movlb	0	; () banked
  3531  00101E  6FD6               	movwf	bin2bcd@luw_aux& (0+255),b
  3532  001020  0100               	movlb	0	; () banked
  3533  001022  51D7               	movf	(bin2bcd@luw_aux+1)& (0+255),w,b
  3534  001024  2044               	addwfc	?___wmul+1,w,c
  3535  001026  0100               	movlb	0	; () banked
  3536  001028  6FD7               	movwf	(bin2bcd@luw_aux+1)& (0+255),b
  3537                           
  3538                           ;app_convert.c: 44: rub_BCDCen = (luw_aux / 100);
  3539  00102A  C0D6  F043         	movff	bin2bcd@luw_aux,___lwdiv@dividend
  3540  00102E  C0D7  F044         	movff	bin2bcd@luw_aux+1,___lwdiv@dividend+1
  3541  001032  0E00               	movlw	0
  3542  001034  6E46               	movwf	___lwdiv@divisor+1,c
  3543  001036  0E64               	movlw	100
  3544  001038  6E45               	movwf	___lwdiv@divisor,c
  3545  00103A  EC40  F00C         	call	___lwdiv	;wreg free
  3546  00103E  C043  F007         	movff	?___lwdiv,_rub_BCDCen
  3547  001042  C044  F008         	movff	?___lwdiv+1,_rub_BCDCen+1
  3548                           
  3549                           ;app_convert.c: 45: luw_aux = (luw_aux - (rub_BCDCen*100));
  3550  001046  C007  F043         	movff	_rub_BCDCen,___wmul@multiplier
  3551  00104A  C008  F044         	movff	_rub_BCDCen+1,___wmul@multiplier+1
  3552  00104E  0E00               	movlw	0
  3553  001050  6E46               	movwf	___wmul@multiplicand+1,c
  3554  001052  0E64               	movlw	100
  3555  001054  6E45               	movwf	___wmul@multiplicand,c
  3556  001056  ECCE  F00D         	call	___wmul	;wreg free
  3557  00105A  1E43               	comf	?___wmul,f,c
  3558  00105C  1E44               	comf	?___wmul+1,f,c
  3559  00105E  4A43               	infsnz	?___wmul,f,c
  3560  001060  2A44               	incf	?___wmul+1,f,c
  3561  001062  0100               	movlb	0	; () banked
  3562  001064  51D6               	movf	bin2bcd@luw_aux& (0+255),w,b
  3563  001066  2443               	addwf	?___wmul,w,c
  3564  001068  0100               	movlb	0	; () banked
  3565  00106A  6FD6               	movwf	bin2bcd@luw_aux& (0+255),b
  3566  00106C  0100               	movlb	0	; () banked
  3567  00106E  51D7               	movf	(bin2bcd@luw_aux+1)& (0+255),w,b
  3568  001070  2044               	addwfc	?___wmul+1,w,c
  3569  001072  0100               	movlb	0	; () banked
  3570  001074  6FD7               	movwf	(bin2bcd@luw_aux+1)& (0+255),b
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;app_convert.c: 46: rub_BCDDec = (luw_aux / 10);
  3574  001076  C0D6  F043         	movff	bin2bcd@luw_aux,___lwdiv@dividend
  3575  00107A  C0D7  F044         	movff	bin2bcd@luw_aux+1,___lwdiv@dividend+1
  3576  00107E  0E00               	movlw	0
  3577  001080  6E46               	movwf	___lwdiv@divisor+1,c
  3578  001082  0E0A               	movlw	10
  3579  001084  6E45               	movwf	___lwdiv@divisor,c
  3580  001086  EC40  F00C         	call	___lwdiv	;wreg free
  3581  00108A  C043  F009         	movff	?___lwdiv,_rub_BCDDec
  3582  00108E  C044  F00A         	movff	?___lwdiv+1,_rub_BCDDec+1
  3583                           
  3584                           ;app_convert.c: 47: luw_aux = (luw_aux - (rub_BCDDec*10));
  3585  001092  C009  F043         	movff	_rub_BCDDec,___wmul@multiplier
  3586  001096  C00A  F044         	movff	_rub_BCDDec+1,___wmul@multiplier+1
  3587  00109A  0E00               	movlw	0
  3588  00109C  6E46               	movwf	___wmul@multiplicand+1,c
  3589  00109E  0E0A               	movlw	10
  3590  0010A0  6E45               	movwf	___wmul@multiplicand,c
  3591  0010A2  ECCE  F00D         	call	___wmul	;wreg free
  3592  0010A6  1E43               	comf	?___wmul,f,c
  3593  0010A8  1E44               	comf	?___wmul+1,f,c
  3594  0010AA  4A43               	infsnz	?___wmul,f,c
  3595  0010AC  2A44               	incf	?___wmul+1,f,c
  3596  0010AE  0100               	movlb	0	; () banked
  3597  0010B0  51D6               	movf	bin2bcd@luw_aux& (0+255),w,b
  3598  0010B2  2443               	addwf	?___wmul,w,c
  3599  0010B4  0100               	movlb	0	; () banked
  3600  0010B6  6FD6               	movwf	bin2bcd@luw_aux& (0+255),b
  3601  0010B8  0100               	movlb	0	; () banked
  3602  0010BA  51D7               	movf	(bin2bcd@luw_aux+1)& (0+255),w,b
  3603  0010BC  2044               	addwfc	?___wmul+1,w,c
  3604  0010BE  0100               	movlb	0	; () banked
  3605  0010C0  6FD7               	movwf	(bin2bcd@luw_aux+1)& (0+255),b
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;app_convert.c: 48: rub_BCDUni = (luw_aux);
  3609  0010C2  C0D6  F096         	movff	bin2bcd@luw_aux,_rub_BCDUni
  3610  0010C6  C0D7  F097         	movff	bin2bcd@luw_aux+1,_rub_BCDUni+1
  3611                           
  3612                           ; BSR set to: 0
  3613  0010CA  0012               	return		;funcret
  3614  0010CC                     __end_of_bin2bcd:
  3615                           	opt stack 0
  3616                           tosu	equ	0xFFF
  3617                           tosh	equ	0xFFE
  3618                           tosl	equ	0xFFD
  3619                           pclath	equ	0xFFA
  3620                           tblptru	equ	0xFF8
  3621                           tblptrh	equ	0xFF7
  3622                           tblptrl	equ	0xFF6
  3623                           tablat	equ	0xFF5
  3624                           prodh	equ	0xFF4
  3625                           prodl	equ	0xFF3
  3626                           intcon	equ	0xFF2
  3627                           postinc0	equ	0xFEE
  3628                           wreg	equ	0xFE8
  3629                           postdec1	equ	0xFE5
  3630                           fsr1h	equ	0xFE2
  3631                           fsr1l	equ	0xFE1
  3632                           indf2	equ	0xFDF
  3633                           postinc2	equ	0xFDE
  3634                           postdec2	equ	0xFDD
  3635                           fsr2h	equ	0xFDA
  3636                           fsr2l	equ	0xFD9
  3637                           status	equ	0xFD8
  3638                           
  3639 ;; *************** function ___wmul *****************
  3640 ;; Defined at:
  3641 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  multiplier      2   15[COMRAM] unsigned int 
  3644 ;;  multiplicand    2   17[COMRAM] unsigned int 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  product         2   19[COMRAM] unsigned int 
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  2   15[COMRAM] unsigned int 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0, prodl, prodh
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3656 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3659 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3660 ;;Total ram usage:        6 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    6
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_bin2bcd
  3667 ;;		_app_TriggerMngr
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text22
  3672  001B9C                     __ptext22:
  3673                           	opt stack 0
  3674  001B9C                     ___wmul:
  3675                           	opt stack 20
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;incstack = 0
  3679  001B9C  5043               	movf	___wmul@multiplier,w,c
  3680  001B9E  0245               	mulwf	___wmul@multiplicand,c
  3681  001BA0  CFF3 F047          	movff	prodl,___wmul@product
  3682  001BA4  CFF4 F048          	movff	prodh,___wmul@product+1
  3683  001BA8  5043               	movf	___wmul@multiplier,w,c
  3684  001BAA  0246               	mulwf	___wmul@multiplicand+1,c
  3685  001BAC  50F3               	movf	prodl,w,c
  3686  001BAE  2648               	addwf	___wmul@product+1,f,c
  3687  001BB0  5044               	movf	___wmul@multiplier+1,w,c
  3688  001BB2  0245               	mulwf	___wmul@multiplicand,c
  3689  001BB4  50F3               	movf	prodl,w,c
  3690  001BB6  2648               	addwf	___wmul@product+1,f,c
  3691  001BB8  C047  F043         	movff	___wmul@product,?___wmul
  3692  001BBC  C048  F044         	movff	___wmul@product+1,?___wmul+1
  3693  001BC0  0012               	return	
  3694  001BC2                     __end_of___wmul:
  3695                           	opt stack 0
  3696                           tosu	equ	0xFFF
  3697                           tosh	equ	0xFFE
  3698                           tosl	equ	0xFFD
  3699                           pclath	equ	0xFFA
  3700                           tblptru	equ	0xFF8
  3701                           tblptrh	equ	0xFF7
  3702                           tblptrl	equ	0xFF6
  3703                           tablat	equ	0xFF5
  3704                           prodh	equ	0xFF4
  3705                           prodl	equ	0xFF3
  3706                           intcon	equ	0xFF2
  3707                           postinc0	equ	0xFEE
  3708                           wreg	equ	0xFE8
  3709                           postdec1	equ	0xFE5
  3710                           fsr1h	equ	0xFE2
  3711                           fsr1l	equ	0xFE1
  3712                           indf2	equ	0xFDF
  3713                           postinc2	equ	0xFDE
  3714                           postdec2	equ	0xFDD
  3715                           fsr2h	equ	0xFDA
  3716                           fsr2l	equ	0xFD9
  3717                           status	equ	0xFD8
  3718                           
  3719 ;; *************** function ___lwdiv *****************
  3720 ;; Defined at:
  3721 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  dividend        2   15[COMRAM] unsigned int 
  3724 ;;  divisor         2   17[COMRAM] unsigned int 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  quotient        2   20[COMRAM] unsigned int 
  3727 ;;  counter         1   19[COMRAM] unsigned char 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  2   15[COMRAM] unsigned int 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3738 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3740 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3741 ;;Total ram usage:        7 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    6
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_bin2bcd
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text23
  3752  001880                     __ptext23:
  3753                           	opt stack 0
  3754  001880                     ___lwdiv:
  3755                           	opt stack 20
  3756                           
  3757                           ;incstack = 0
  3758  001880  0E00               	movlw	0
  3759  001882  6E49               	movwf	___lwdiv@quotient+1,c
  3760  001884  0E00               	movlw	0
  3761  001886  6E48               	movwf	___lwdiv@quotient,c
  3762  001888  5045               	movf	___lwdiv@divisor,w,c
  3763  00188A  1046               	iorwf	___lwdiv@divisor+1,w,c
  3764  00188C  B4D8               	btfsc	status,2,c
  3765  00188E  D01C               	goto	l1624
  3766  001890  0E01               	movlw	1
  3767  001892  6E47               	movwf	___lwdiv@counter,c
  3768  001894  D004               	goto	l4199
  3769  001896                     l4197:
  3770  001896  90D8               	bcf	status,0,c
  3771  001898  3645               	rlcf	___lwdiv@divisor,f,c
  3772  00189A  3646               	rlcf	___lwdiv@divisor+1,f,c
  3773  00189C  2A47               	incf	___lwdiv@counter,f,c
  3774  00189E                     l4199:
  3775  00189E  AE46               	btfss	___lwdiv@divisor+1,7,c
  3776  0018A0  D7FA               	goto	l4197
  3777  0018A2                     l4201:
  3778  0018A2  90D8               	bcf	status,0,c
  3779  0018A4  3648               	rlcf	___lwdiv@quotient,f,c
  3780  0018A6  3649               	rlcf	___lwdiv@quotient+1,f,c
  3781  0018A8  5045               	movf	___lwdiv@divisor,w,c
  3782  0018AA  5C43               	subwf	___lwdiv@dividend,w,c
  3783  0018AC  5046               	movf	___lwdiv@divisor+1,w,c
  3784  0018AE  5844               	subwfb	___lwdiv@dividend+1,w,c
  3785  0018B0  A0D8               	btfss	status,0,c
  3786  0018B2  D005               	goto	l4209
  3787  0018B4  5045               	movf	___lwdiv@divisor,w,c
  3788  0018B6  5E43               	subwf	___lwdiv@dividend,f,c
  3789  0018B8  5046               	movf	___lwdiv@divisor+1,w,c
  3790  0018BA  5A44               	subwfb	___lwdiv@dividend+1,f,c
  3791  0018BC  8048               	bsf	___lwdiv@quotient,0,c
  3792  0018BE                     l4209:
  3793  0018BE  90D8               	bcf	status,0,c
  3794  0018C0  3246               	rrcf	___lwdiv@divisor+1,f,c
  3795  0018C2  3245               	rrcf	___lwdiv@divisor,f,c
  3796  0018C4  2E47               	decfsz	___lwdiv@counter,f,c
  3797  0018C6  D7ED               	goto	l4201
  3798  0018C8                     l1624:
  3799  0018C8  C048  F043         	movff	___lwdiv@quotient,?___lwdiv
  3800  0018CC  C049  F044         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3801  0018D0  0012               	return		;funcret
  3802  0018D2                     __end_of___lwdiv:
  3803                           	opt stack 0
  3804                           tosu	equ	0xFFF
  3805                           tosh	equ	0xFFE
  3806                           tosl	equ	0xFFD
  3807                           pclath	equ	0xFFA
  3808                           tblptru	equ	0xFF8
  3809                           tblptrh	equ	0xFF7
  3810                           tblptrl	equ	0xFF6
  3811                           tablat	equ	0xFF5
  3812                           prodh	equ	0xFF4
  3813                           prodl	equ	0xFF3
  3814                           intcon	equ	0xFF2
  3815                           postinc0	equ	0xFEE
  3816                           wreg	equ	0xFE8
  3817                           postdec1	equ	0xFE5
  3818                           fsr1h	equ	0xFE2
  3819                           fsr1l	equ	0xFE1
  3820                           indf2	equ	0xFDF
  3821                           postinc2	equ	0xFDE
  3822                           postdec2	equ	0xFDD
  3823                           fsr2h	equ	0xFDA
  3824                           fsr2l	equ	0xFD9
  3825                           status	equ	0xFD8
  3826                           
  3827 ;; *************** function ___aldiv *****************
  3828 ;; Defined at:
  3829 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  dividend        4   15[COMRAM] long 
  3832 ;;  divisor         4   19[COMRAM] long 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  quotient        4    2[BANK0 ] long 
  3835 ;;  sign            1    1[BANK0 ] unsigned char 
  3836 ;;  counter         1    0[BANK0 ] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  4   15[COMRAM] long 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3846 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3847 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3849 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3850 ;;Total ram usage:       14 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    6
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_bin2bcd
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text24
  3861  001200                     __ptext24:
  3862                           	opt stack 0
  3863  001200                     ___aldiv:
  3864                           	opt stack 20
  3865                           
  3866                           ;incstack = 0
  3867  001200  0E00               	movlw	0
  3868  001202  0100               	movlb	0	; () banked
  3869  001204  6FCF               	movwf	___aldiv@sign& (0+255),b
  3870                           
  3871                           ; BSR set to: 0
  3872  001206  AE4A               	btfss	___aldiv@divisor+3,7,c
  3873  001208  D00B               	goto	l4155
  3874                           
  3875                           ; BSR set to: 0
  3876  00120A  1E4A               	comf	___aldiv@divisor+3,f,c
  3877  00120C  1E49               	comf	___aldiv@divisor+2,f,c
  3878  00120E  1E48               	comf	___aldiv@divisor+1,f,c
  3879  001210  6C47               	negf	___aldiv@divisor,c
  3880  001212  0E00               	movlw	0
  3881  001214  2248               	addwfc	___aldiv@divisor+1,f,c
  3882  001216  2249               	addwfc	___aldiv@divisor+2,f,c
  3883  001218  224A               	addwfc	___aldiv@divisor+3,f,c
  3884                           
  3885                           ; BSR set to: 0
  3886  00121A  0E01               	movlw	1
  3887  00121C  0100               	movlb	0	; () banked
  3888  00121E  6FCF               	movwf	___aldiv@sign& (0+255),b
  3889  001220                     l4155:
  3890                           
  3891                           ; BSR set to: 0
  3892  001220  AE46               	btfss	___aldiv@dividend+3,7,c
  3893  001222  D00B               	goto	l4161
  3894                           
  3895                           ; BSR set to: 0
  3896  001224  1E46               	comf	___aldiv@dividend+3,f,c
  3897  001226  1E45               	comf	___aldiv@dividend+2,f,c
  3898  001228  1E44               	comf	___aldiv@dividend+1,f,c
  3899  00122A  6C43               	negf	___aldiv@dividend,c
  3900  00122C  0E00               	movlw	0
  3901  00122E  2244               	addwfc	___aldiv@dividend+1,f,c
  3902  001230  2245               	addwfc	___aldiv@dividend+2,f,c
  3903  001232  2246               	addwfc	___aldiv@dividend+3,f,c
  3904                           
  3905                           ; BSR set to: 0
  3906  001234  0E01               	movlw	1
  3907  001236  0100               	movlb	0	; () banked
  3908  001238  1BCF               	xorwf	___aldiv@sign& (0+255),f,b
  3909  00123A                     l4161:
  3910                           
  3911                           ; BSR set to: 0
  3912  00123A  0E00               	movlw	0
  3913  00123C  0100               	movlb	0	; () banked
  3914  00123E  6FD0               	movwf	___aldiv@quotient& (0+255),b
  3915  001240  0E00               	movlw	0
  3916  001242  6FD1               	movwf	(___aldiv@quotient+1)& (0+255),b
  3917  001244  0E00               	movlw	0
  3918  001246  6FD2               	movwf	(___aldiv@quotient+2)& (0+255),b
  3919  001248  0E00               	movlw	0
  3920  00124A  6FD3               	movwf	(___aldiv@quotient+3)& (0+255),b
  3921                           
  3922                           ; BSR set to: 0
  3923  00124C  5047               	movf	___aldiv@divisor,w,c
  3924  00124E  1048               	iorwf	___aldiv@divisor+1,w,c
  3925  001250  1049               	iorwf	___aldiv@divisor+2,w,c
  3926  001252  104A               	iorwf	___aldiv@divisor+3,w,c
  3927  001254  B4D8               	btfsc	status,2,c
  3928  001256  D02F               	goto	l4183
  3929                           
  3930                           ; BSR set to: 0
  3931  001258  0E01               	movlw	1
  3932  00125A  0100               	movlb	0	; () banked
  3933  00125C  6FCE               	movwf	___aldiv@counter& (0+255),b
  3934  00125E  D007               	goto	l4169
  3935  001260                     l4167:
  3936                           
  3937                           ; BSR set to: 0
  3938  001260  90D8               	bcf	status,0,c
  3939  001262  3647               	rlcf	___aldiv@divisor,f,c
  3940  001264  3648               	rlcf	___aldiv@divisor+1,f,c
  3941  001266  3649               	rlcf	___aldiv@divisor+2,f,c
  3942  001268  364A               	rlcf	___aldiv@divisor+3,f,c
  3943  00126A  0100               	movlb	0	; () banked
  3944  00126C  2BCE               	incf	___aldiv@counter& (0+255),f,b
  3945  00126E                     l4169:
  3946                           
  3947                           ; BSR set to: 0
  3948  00126E  AE4A               	btfss	___aldiv@divisor+3,7,c
  3949  001270  D7F7               	goto	l4167
  3950  001272                     l4171:
  3951                           
  3952                           ; BSR set to: 0
  3953  001272  0100               	movlb	0	; () banked
  3954  001274  90D8               	bcf	status,0,c
  3955  001276  37D0               	rlcf	___aldiv@quotient& (0+255),f,b
  3956  001278  37D1               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  3957  00127A  37D2               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  3958  00127C  37D3               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  3959                           
  3960                           ; BSR set to: 0
  3961  00127E  5047               	movf	___aldiv@divisor,w,c
  3962  001280  5C43               	subwf	___aldiv@dividend,w,c
  3963  001282  5048               	movf	___aldiv@divisor+1,w,c
  3964  001284  5844               	subwfb	___aldiv@dividend+1,w,c
  3965  001286  5049               	movf	___aldiv@divisor+2,w,c
  3966  001288  5845               	subwfb	___aldiv@dividend+2,w,c
  3967  00128A  504A               	movf	___aldiv@divisor+3,w,c
  3968  00128C  5846               	subwfb	___aldiv@dividend+3,w,c
  3969  00128E  A0D8               	btfss	status,0,c
  3970  001290  D00A               	goto	l4179
  3971                           
  3972                           ; BSR set to: 0
  3973  001292  5047               	movf	___aldiv@divisor,w,c
  3974  001294  5E43               	subwf	___aldiv@dividend,f,c
  3975  001296  5048               	movf	___aldiv@divisor+1,w,c
  3976  001298  5A44               	subwfb	___aldiv@dividend+1,f,c
  3977  00129A  5049               	movf	___aldiv@divisor+2,w,c
  3978  00129C  5A45               	subwfb	___aldiv@dividend+2,f,c
  3979  00129E  504A               	movf	___aldiv@divisor+3,w,c
  3980  0012A0  5A46               	subwfb	___aldiv@dividend+3,f,c
  3981                           
  3982                           ; BSR set to: 0
  3983  0012A2  0100               	movlb	0	; () banked
  3984  0012A4  81D0               	bsf	___aldiv@quotient& (0+255),0,b
  3985  0012A6                     l4179:
  3986                           
  3987                           ; BSR set to: 0
  3988  0012A6  90D8               	bcf	status,0,c
  3989  0012A8  324A               	rrcf	___aldiv@divisor+3,f,c
  3990  0012AA  3249               	rrcf	___aldiv@divisor+2,f,c
  3991  0012AC  3248               	rrcf	___aldiv@divisor+1,f,c
  3992  0012AE  3247               	rrcf	___aldiv@divisor,f,c
  3993                           
  3994                           ; BSR set to: 0
  3995  0012B0  0100               	movlb	0	; () banked
  3996  0012B2  2FCE               	decfsz	___aldiv@counter& (0+255),f,b
  3997  0012B4  D7DE               	goto	l4171
  3998  0012B6                     l4183:
  3999                           
  4000                           ; BSR set to: 0
  4001  0012B6  0100               	movlb	0	; () banked
  4002  0012B8  51CF               	movf	___aldiv@sign& (0+255),w,b
  4003  0012BA  0100               	movlb	0	; () banked
  4004  0012BC  B4D8               	btfsc	status,2,c
  4005  0012BE  D009               	goto	l4187
  4006                           
  4007                           ; BSR set to: 0
  4008  0012C0  0100               	movlb	0	; () banked
  4009  0012C2  1FD3               	comf	(___aldiv@quotient+3)& (0+255),f,b
  4010  0012C4  1FD2               	comf	(___aldiv@quotient+2)& (0+255),f,b
  4011  0012C6  1FD1               	comf	(___aldiv@quotient+1)& (0+255),f,b
  4012  0012C8  6DD0               	negf	___aldiv@quotient& (0+255),b
  4013  0012CA  0E00               	movlw	0
  4014  0012CC  23D1               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  4015  0012CE  23D2               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  4016  0012D0  23D3               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  4017  0012D2                     l4187:
  4018                           
  4019                           ; BSR set to: 0
  4020  0012D2  C0D0  F043         	movff	___aldiv@quotient,?___aldiv
  4021  0012D6  C0D1  F044         	movff	___aldiv@quotient+1,?___aldiv+1
  4022  0012DA  C0D2  F045         	movff	___aldiv@quotient+2,?___aldiv+2
  4023  0012DE  C0D3  F046         	movff	___aldiv@quotient+3,?___aldiv+3
  4024  0012E2  0012               	return	
  4025  0012E4                     __end_of___aldiv:
  4026                           	opt stack 0
  4027                           tosu	equ	0xFFF
  4028                           tosh	equ	0xFFE
  4029                           tosl	equ	0xFFD
  4030                           pclath	equ	0xFFA
  4031                           tblptru	equ	0xFF8
  4032                           tblptrh	equ	0xFF7
  4033                           tblptrl	equ	0xFF6
  4034                           tablat	equ	0xFF5
  4035                           prodh	equ	0xFF4
  4036                           prodl	equ	0xFF3
  4037                           intcon	equ	0xFF2
  4038                           postinc0	equ	0xFEE
  4039                           wreg	equ	0xFE8
  4040                           postdec1	equ	0xFE5
  4041                           fsr1h	equ	0xFE2
  4042                           fsr1l	equ	0xFE1
  4043                           indf2	equ	0xFDF
  4044                           postinc2	equ	0xFDE
  4045                           postdec2	equ	0xFDD
  4046                           fsr2h	equ	0xFDA
  4047                           fsr2l	equ	0xFD9
  4048                           status	equ	0xFD8
  4049                           
  4050 ;; *************** function _bcd2ascii *****************
  4051 ;; Defined at:
  4052 ;;		line 51 in file "app/app_convert.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2, status,0
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4070 ;;Total ram usage:        0 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    6
  4073 ;; This function calls:
  4074 ;;		Nothing
  4075 ;; This function is called by:
  4076 ;;		_app_HD44780_DisplayUpdate
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text25
  4081  001A66                     __ptext25:
  4082                           	opt stack 0
  4083  001A66                     _bcd2ascii:
  4084                           	opt stack 21
  4085                           
  4086                           ;app_convert.c: 53: rub_BCDUni += 0x30;
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;incstack = 0
  4090  001A66  0E30               	movlw	48
  4091  001A68  0100               	movlb	0	; () banked
  4092  001A6A  2796               	addwf	_rub_BCDUni& (0+255),f,b
  4093  001A6C  0E00               	movlw	0
  4094  001A6E  2397               	addwfc	(_rub_BCDUni+1)& (0+255),f,b
  4095                           
  4096                           ;app_convert.c: 54: rub_BCDDec += 0x30;
  4097  001A70  0E30               	movlw	48
  4098  001A72  2609               	addwf	_rub_BCDDec,f,c
  4099  001A74  0E00               	movlw	0
  4100  001A76  220A               	addwfc	_rub_BCDDec+1,f,c
  4101                           
  4102                           ;app_convert.c: 55: rub_BCDCen += 0x30;
  4103  001A78  0E30               	movlw	48
  4104  001A7A  2607               	addwf	_rub_BCDCen,f,c
  4105  001A7C  0E00               	movlw	0
  4106  001A7E  2208               	addwfc	_rub_BCDCen+1,f,c
  4107                           
  4108                           ;app_convert.c: 56: rub_BCDUmil += 0x30;
  4109  001A80  0E30               	movlw	48
  4110  001A82  0100               	movlb	0	; () banked
  4111  001A84  2794               	addwf	_rub_BCDUmil& (0+255),f,b
  4112  001A86  0E00               	movlw	0
  4113  001A88  2395               	addwfc	(_rub_BCDUmil+1)& (0+255),f,b
  4114                           
  4115                           ;app_convert.c: 57: rub_BCDDmil += 0x30;
  4116  001A8A  0E30               	movlw	48
  4117  001A8C  0100               	movlb	0	; () banked
  4118  001A8E  2792               	addwf	_rub_BCDDmil& (0+255),f,b
  4119  001A90  0E00               	movlw	0
  4120  001A92  2393               	addwfc	(_rub_BCDDmil+1)& (0+255),f,b
  4121                           
  4122                           ;app_convert.c: 58: rub_BCDCmil += 0x30;
  4123  001A94  0E30               	movlw	48
  4124  001A96  0100               	movlb	0	; () banked
  4125  001A98  2790               	addwf	_rub_BCDCmil& (0+255),f,b
  4126  001A9A  0E00               	movlw	0
  4127  001A9C  2391               	addwfc	(_rub_BCDCmil+1)& (0+255),f,b
  4128                           
  4129                           ; BSR set to: 0
  4130  001A9E  0012               	return		;funcret
  4131  001AA0                     __end_of_bcd2ascii:
  4132                           	opt stack 0
  4133                           tosu	equ	0xFFF
  4134                           tosh	equ	0xFFE
  4135                           tosl	equ	0xFFD
  4136                           pclath	equ	0xFFA
  4137                           tblptru	equ	0xFF8
  4138                           tblptrh	equ	0xFF7
  4139                           tblptrl	equ	0xFF6
  4140                           tablat	equ	0xFF5
  4141                           prodh	equ	0xFF4
  4142                           prodl	equ	0xFF3
  4143                           intcon	equ	0xFF2
  4144                           postinc0	equ	0xFEE
  4145                           wreg	equ	0xFE8
  4146                           postdec1	equ	0xFE5
  4147                           fsr1h	equ	0xFE2
  4148                           fsr1l	equ	0xFE1
  4149                           indf2	equ	0xFDF
  4150                           postinc2	equ	0xFDE
  4151                           postdec2	equ	0xFDD
  4152                           fsr2h	equ	0xFDA
  4153                           fsr2l	equ	0xFD9
  4154                           status	equ	0xFD8
  4155                           
  4156 ;; *************** function _SYSTEM_Initialize *****************
  4157 ;; Defined at:
  4158 ;;		line 107 in file "mcc_generated_files/mcc.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;		None
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;		None
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg, status,2, status,0, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4176 ;;Total ram usage:        0 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    8
  4179 ;; This function calls:
  4180 ;;		_EUSART1_Initialize
  4181 ;;		_EUSART2_Initialize
  4182 ;;		_INTERRUPT_Initialize
  4183 ;;		_OSCILLATOR_Initialize
  4184 ;;		_PIN_MANAGER_Initialize
  4185 ;;		_PWM3_Initialize
  4186 ;;		_TMR1_Initialize
  4187 ;;		_TMR2_Initialize
  4188 ;;		_TMR4_Initialize
  4189 ;; This function is called by:
  4190 ;;		_main
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text26
  4195  001BC2                     __ptext26:
  4196                           	opt stack 0
  4197  001BC2                     _SYSTEM_Initialize:
  4198                           	opt stack 22
  4199                           
  4200                           ;mcc.c: 110: INTERRUPT_Initialize();
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;incstack = 0
  4204  001BC2  EC6B  F00E         	call	_INTERRUPT_Initialize	;wreg free
  4205                           
  4206                           ;mcc.c: 111: PIN_MANAGER_Initialize();
  4207  001BC6  ECE1  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  4208                           
  4209                           ;mcc.c: 112: OSCILLATOR_Initialize();
  4210  001BCA  EC3A  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  4211                           
  4212                           ;mcc.c: 113: TMR4_Initialize();
  4213  001BCE  EC2A  F00E         	call	_TMR4_Initialize	;wreg free
  4214                           
  4215                           ;mcc.c: 114: PWM3_Initialize();
  4216  001BD2  EC55  F00E         	call	_PWM3_Initialize	;wreg free
  4217                           
  4218                           ;mcc.c: 115: TMR2_Initialize();
  4219  001BD6  EC88  F00D         	call	_TMR2_Initialize	;wreg free
  4220                           
  4221                           ;mcc.c: 116: TMR1_Initialize();
  4222  001BDA  EC69  F00C         	call	_TMR1_Initialize	;wreg free
  4223                           
  4224                           ;mcc.c: 117: EUSART1_Initialize();
  4225  001BDE  EC6C  F00D         	call	_EUSART1_Initialize	;wreg free
  4226                           
  4227                           ;mcc.c: 118: EUSART2_Initialize();
  4228  001BE2  ECB1  F00C         	call	_EUSART2_Initialize	;wreg free
  4229  001BE6  0012               	return		;funcret
  4230  001BE8                     __end_of_SYSTEM_Initialize:
  4231                           	opt stack 0
  4232                           tosu	equ	0xFFF
  4233                           tosh	equ	0xFFE
  4234                           tosl	equ	0xFFD
  4235                           pclath	equ	0xFFA
  4236                           tblptru	equ	0xFF8
  4237                           tblptrh	equ	0xFF7
  4238                           tblptrl	equ	0xFF6
  4239                           tablat	equ	0xFF5
  4240                           prodh	equ	0xFF4
  4241                           prodl	equ	0xFF3
  4242                           intcon	equ	0xFF2
  4243                           postinc0	equ	0xFEE
  4244                           wreg	equ	0xFE8
  4245                           postdec1	equ	0xFE5
  4246                           fsr1h	equ	0xFE2
  4247                           fsr1l	equ	0xFE1
  4248                           indf2	equ	0xFDF
  4249                           postinc2	equ	0xFDE
  4250                           postdec2	equ	0xFDD
  4251                           fsr2h	equ	0xFDA
  4252                           fsr2l	equ	0xFD9
  4253                           status	equ	0xFD8
  4254                           
  4255 ;; *************** function _TMR4_Initialize *****************
  4256 ;; Defined at:
  4257 ;;		line 63 in file "mcc_generated_files/tmr4.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;		None
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;		None
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  1    wreg      void 
  4264 ;; Registers used:
  4265 ;;		wreg, status,2, cstack
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4275 ;;Total ram usage:        0 bytes
  4276 ;; Hardware stack levels used:    1
  4277 ;; Hardware stack levels required when called:    7
  4278 ;; This function calls:
  4279 ;;		_TMR4_Start
  4280 ;; This function is called by:
  4281 ;;		_SYSTEM_Initialize
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text27
  4286  001C54                     __ptext27:
  4287                           	opt stack 0
  4288  001C54                     _TMR4_Initialize:
  4289                           	opt stack 22
  4290                           
  4291                           ;tmr4.c: 68: T4CON = 0x00;
  4292                           
  4293                           ;incstack = 0
  4294  001C54  0E00               	movlw	0
  4295  001C56  6EB7               	movwf	4023,c	;volatile
  4296                           
  4297                           ;tmr4.c: 71: T4CLKCON = 0x01;
  4298  001C58  0E01               	movlw	1
  4299  001C5A  6EB9               	movwf	4025,c	;volatile
  4300                           
  4301                           ;tmr4.c: 74: T4HLT = 0x00;
  4302  001C5C  0E00               	movlw	0
  4303  001C5E  6EB8               	movwf	4024,c	;volatile
  4304                           
  4305                           ;tmr4.c: 77: T4RST = 0x06;
  4306  001C60  0E06               	movlw	6
  4307  001C62  6EBA               	movwf	4026,c	;volatile
  4308                           
  4309                           ;tmr4.c: 80: T4PR = 0xFF;
  4310  001C64  68B6               	setf	4022,c	;volatile
  4311                           
  4312                           ;tmr4.c: 83: T4TMR = 0x00;
  4313  001C66  0E00               	movlw	0
  4314  001C68  6EB5               	movwf	4021,c	;volatile
  4315                           
  4316                           ;tmr4.c: 86: PIR4bits.TMR4IF = 0;
  4317  001C6A  010E               	movlb	14	; () banked
  4318  001C6C  97CE               	bcf	206,3,b	;volatile
  4319                           
  4320                           ; BSR set to: 14
  4321                           ;tmr4.c: 89: TMR4_Start();
  4322  001C6E  ECB2  F00E         	call	_TMR4_Start	;wreg free
  4323  001C72  0012               	return		;funcret
  4324  001C74                     __end_of_TMR4_Initialize:
  4325                           	opt stack 0
  4326                           tosu	equ	0xFFF
  4327                           tosh	equ	0xFFE
  4328                           tosl	equ	0xFFD
  4329                           pclath	equ	0xFFA
  4330                           tblptru	equ	0xFF8
  4331                           tblptrh	equ	0xFF7
  4332                           tblptrl	equ	0xFF6
  4333                           tablat	equ	0xFF5
  4334                           prodh	equ	0xFF4
  4335                           prodl	equ	0xFF3
  4336                           intcon	equ	0xFF2
  4337                           postinc0	equ	0xFEE
  4338                           wreg	equ	0xFE8
  4339                           postdec1	equ	0xFE5
  4340                           fsr1h	equ	0xFE2
  4341                           fsr1l	equ	0xFE1
  4342                           indf2	equ	0xFDF
  4343                           postinc2	equ	0xFDE
  4344                           postdec2	equ	0xFDD
  4345                           fsr2h	equ	0xFDA
  4346                           fsr2l	equ	0xFD9
  4347                           status	equ	0xFD8
  4348                           
  4349 ;; *************** function _TMR4_Start *****************
  4350 ;; Defined at:
  4351 ;;		line 104 in file "mcc_generated_files/tmr4.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;		None
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;		None
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		None
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4369 ;;Total ram usage:        0 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:    6
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		_TMR4_Initialize
  4376 ;;		_TMR4_StartTimer
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text28
  4381  001D64                     __ptext28:
  4382                           	opt stack 0
  4383  001D64                     _TMR4_Start:
  4384                           	opt stack 22
  4385                           
  4386                           ;tmr4.c: 107: T4CONbits.TMR4ON = 1;
  4387                           
  4388                           ;incstack = 0
  4389  001D64  8EB7               	bsf	4023,7,c	;volatile
  4390  001D66  0012               	return		;funcret
  4391  001D68                     __end_of_TMR4_Start:
  4392                           	opt stack 0
  4393                           tosu	equ	0xFFF
  4394                           tosh	equ	0xFFE
  4395                           tosl	equ	0xFFD
  4396                           pclath	equ	0xFFA
  4397                           tblptru	equ	0xFF8
  4398                           tblptrh	equ	0xFF7
  4399                           tblptrl	equ	0xFF6
  4400                           tablat	equ	0xFF5
  4401                           prodh	equ	0xFF4
  4402                           prodl	equ	0xFF3
  4403                           intcon	equ	0xFF2
  4404                           postinc0	equ	0xFEE
  4405                           wreg	equ	0xFE8
  4406                           postdec1	equ	0xFE5
  4407                           fsr1h	equ	0xFE2
  4408                           fsr1l	equ	0xFE1
  4409                           indf2	equ	0xFDF
  4410                           postinc2	equ	0xFDE
  4411                           postdec2	equ	0xFDD
  4412                           fsr2h	equ	0xFDA
  4413                           fsr2l	equ	0xFD9
  4414                           status	equ	0xFD8
  4415                           
  4416 ;; *************** function _TMR2_Initialize *****************
  4417 ;; Defined at:
  4418 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;		None
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;		None
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1    wreg      void 
  4425 ;; Registers used:
  4426 ;;		wreg, status,2, status,0, cstack
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4436 ;;Total ram usage:        0 bytes
  4437 ;; Hardware stack levels used:    1
  4438 ;; Hardware stack levels required when called:    7
  4439 ;; This function calls:
  4440 ;;		_TMR2_SetInterruptHandler
  4441 ;;		_TMR2_Start
  4442 ;; This function is called by:
  4443 ;;		_SYSTEM_Initialize
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text29
  4448  001B10                     __ptext29:
  4449                           	opt stack 0
  4450  001B10                     _TMR2_Initialize:
  4451                           	opt stack 22
  4452                           
  4453                           ;tmr2.c: 69: T2CON = 0x79;
  4454                           
  4455                           ;incstack = 0
  4456  001B10  0E79               	movlw	121
  4457  001B12  6EBD               	movwf	4029,c	;volatile
  4458                           
  4459                           ;tmr2.c: 72: T2CLKCON = 0x02;
  4460  001B14  0E02               	movlw	2
  4461  001B16  6EBF               	movwf	4031,c	;volatile
  4462                           
  4463                           ;tmr2.c: 75: T2HLT = 0x00;
  4464  001B18  0E00               	movlw	0
  4465  001B1A  6EBE               	movwf	4030,c	;volatile
  4466                           
  4467                           ;tmr2.c: 78: T2RST = 0x00;
  4468  001B1C  0E00               	movlw	0
  4469  001B1E  6EC0               	movwf	4032,c	;volatile
  4470                           
  4471                           ;tmr2.c: 81: T2PR = 0x31;
  4472  001B20  0E31               	movlw	49
  4473  001B22  6EBC               	movwf	4028,c	;volatile
  4474                           
  4475                           ;tmr2.c: 84: T2TMR = 0x00;
  4476  001B24  0E00               	movlw	0
  4477  001B26  6EBB               	movwf	4027,c	;volatile
  4478                           
  4479                           ;tmr2.c: 87: PIR4bits.TMR2IF = 0;
  4480  001B28  010E               	movlb	14	; () banked
  4481  001B2A  93CE               	bcf	206,1,b	;volatile
  4482                           
  4483                           ; BSR set to: 14
  4484                           ;tmr2.c: 90: PIE4bits.TMR2IE = 1;
  4485  001B2C  010E               	movlb	14	; () banked
  4486  001B2E  83C6               	bsf	198,1,b	;volatile
  4487                           
  4488                           ; BSR set to: 14
  4489                           ;tmr2.c: 93: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  4490  001B30  0E52               	movlw	low _TMR2_DefaultInterruptHandler
  4491  001B32  6E43               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  4492  001B34  0E1D               	movlw	high _TMR2_DefaultInterruptHandler
  4493  001B36  6E44               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  4494  001B38  EC94  F00E         	call	_TMR2_SetInterruptHandler	;wreg free
  4495                           
  4496                           ;tmr2.c: 96: TMR2_Start();
  4497  001B3C  ECB4  F00E         	call	_TMR2_Start	;wreg free
  4498  001B40  0012               	return		;funcret
  4499  001B42                     __end_of_TMR2_Initialize:
  4500                           	opt stack 0
  4501                           tosu	equ	0xFFF
  4502                           tosh	equ	0xFFE
  4503                           tosl	equ	0xFFD
  4504                           pclath	equ	0xFFA
  4505                           tblptru	equ	0xFF8
  4506                           tblptrh	equ	0xFF7
  4507                           tblptrl	equ	0xFF6
  4508                           tablat	equ	0xFF5
  4509                           prodh	equ	0xFF4
  4510                           prodl	equ	0xFF3
  4511                           intcon	equ	0xFF2
  4512                           postinc0	equ	0xFEE
  4513                           wreg	equ	0xFE8
  4514                           postdec1	equ	0xFE5
  4515                           fsr1h	equ	0xFE2
  4516                           fsr1l	equ	0xFE1
  4517                           indf2	equ	0xFDF
  4518                           postinc2	equ	0xFDE
  4519                           postdec2	equ	0xFDD
  4520                           fsr2h	equ	0xFDA
  4521                           fsr2l	equ	0xFD9
  4522                           status	equ	0xFD8
  4523                           
  4524 ;; *************** function _TMR2_Start *****************
  4525 ;; Defined at:
  4526 ;;		line 111 in file "mcc_generated_files/tmr2.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		None
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4544 ;;Total ram usage:        0 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:    6
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_TMR2_Initialize
  4551 ;;		_TMR2_StartTimer
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text30
  4556  001D68                     __ptext30:
  4557                           	opt stack 0
  4558  001D68                     _TMR2_Start:
  4559                           	opt stack 22
  4560                           
  4561                           ;tmr2.c: 114: T2CONbits.TMR2ON = 1;
  4562                           
  4563                           ;incstack = 0
  4564  001D68  8EBD               	bsf	4029,7,c	;volatile
  4565  001D6A  0012               	return		;funcret
  4566  001D6C                     __end_of_TMR2_Start:
  4567                           	opt stack 0
  4568                           tosu	equ	0xFFF
  4569                           tosh	equ	0xFFE
  4570                           tosl	equ	0xFFD
  4571                           pclath	equ	0xFFA
  4572                           tblptru	equ	0xFF8
  4573                           tblptrh	equ	0xFF7
  4574                           tblptrl	equ	0xFF6
  4575                           tablat	equ	0xFF5
  4576                           prodh	equ	0xFF4
  4577                           prodl	equ	0xFF3
  4578                           intcon	equ	0xFF2
  4579                           postinc0	equ	0xFEE
  4580                           wreg	equ	0xFE8
  4581                           postdec1	equ	0xFE5
  4582                           fsr1h	equ	0xFE2
  4583                           fsr1l	equ	0xFE1
  4584                           indf2	equ	0xFDF
  4585                           postinc2	equ	0xFDE
  4586                           postdec2	equ	0xFDD
  4587                           fsr2h	equ	0xFDA
  4588                           fsr2l	equ	0xFD9
  4589                           status	equ	0xFD8
  4590                           
  4591 ;; *************** function _TMR2_SetInterruptHandler *****************
  4592 ;; Defined at:
  4593 ;;		line 189 in file "mcc_generated_files/tmr2.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  InterruptHan    2   15[COMRAM] PTR void 
  4596 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2, status,0
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4612 ;;Total ram usage:        2 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:    6
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_TMR2_Initialize
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text31
  4623  001D28                     __ptext31:
  4624                           	opt stack 0
  4625  001D28                     _TMR2_SetInterruptHandler:
  4626                           	opt stack 22
  4627                           
  4628                           ;tmr2.c: 190: TMR2_InterruptHandler = InterruptHandler;
  4629                           
  4630                           ;incstack = 0
  4631  001D28  C043  F0DF         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  4632  001D2C  C044  F0E0         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  4633  001D30  0012               	return		;funcret
  4634  001D32                     __end_of_TMR2_SetInterruptHandler:
  4635                           	opt stack 0
  4636                           tosu	equ	0xFFF
  4637                           tosh	equ	0xFFE
  4638                           tosl	equ	0xFFD
  4639                           pclath	equ	0xFFA
  4640                           tblptru	equ	0xFF8
  4641                           tblptrh	equ	0xFF7
  4642                           tblptrl	equ	0xFF6
  4643                           tablat	equ	0xFF5
  4644                           prodh	equ	0xFF4
  4645                           prodl	equ	0xFF3
  4646                           intcon	equ	0xFF2
  4647                           postinc0	equ	0xFEE
  4648                           wreg	equ	0xFE8
  4649                           postdec1	equ	0xFE5
  4650                           fsr1h	equ	0xFE2
  4651                           fsr1l	equ	0xFE1
  4652                           indf2	equ	0xFDF
  4653                           postinc2	equ	0xFDE
  4654                           postdec2	equ	0xFDD
  4655                           fsr2h	equ	0xFDA
  4656                           fsr2l	equ	0xFD9
  4657                           status	equ	0xFD8
  4658                           
  4659 ;; *************** function _TMR1_Initialize *****************
  4660 ;; Defined at:
  4661 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;		None
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;		None
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4679 ;;Total ram usage:        2 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    7
  4682 ;; This function calls:
  4683 ;;		_TMR1_SetInterruptHandler
  4684 ;;		_TMR1_StartTimer
  4685 ;; This function is called by:
  4686 ;;		_SYSTEM_Initialize
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text32
  4691  0018D2                     __ptext32:
  4692                           	opt stack 0
  4693  0018D2                     _TMR1_Initialize:
  4694                           	opt stack 22
  4695                           
  4696                           ;tmr1.c: 69: T1CON = 0x00;
  4697                           
  4698                           ;incstack = 0
  4699  0018D2  0E00               	movlw	0
  4700  0018D4  6ECF               	movwf	4047,c	;volatile
  4701                           
  4702                           ;tmr1.c: 72: T1GCON = 0x00;
  4703  0018D6  0E00               	movlw	0
  4704  0018D8  6ED0               	movwf	4048,c	;volatile
  4705                           
  4706                           ;tmr1.c: 75: T1GATE = 0x00;
  4707  0018DA  0E00               	movlw	0
  4708  0018DC  6ED1               	movwf	4049,c	;volatile
  4709                           
  4710                           ;tmr1.c: 78: T1CLK = 0x01;
  4711  0018DE  0E01               	movlw	1
  4712  0018E0  6ED2               	movwf	4050,c	;volatile
  4713                           
  4714                           ;tmr1.c: 81: TMR1H = 0xE0;
  4715  0018E2  0EE0               	movlw	224
  4716  0018E4  6ECE               	movwf	4046,c	;volatile
  4717                           
  4718                           ;tmr1.c: 84: TMR1L = 0xC0;
  4719  0018E6  0EC0               	movlw	192
  4720  0018E8  6ECD               	movwf	4045,c	;volatile
  4721                           
  4722                           ;tmr1.c: 87: timer1ReloadVal=(TMR1H << 8) | TMR1L;
  4723  0018EA  50CD               	movf	4045,w,c	;volatile
  4724  0018EC  CFCE F045          	movff	4046,??_TMR1_Initialize	;volatile
  4725  0018F0  6A46               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  4726  0018F2  C045  F046         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  4727  0018F6  6A45               	clrf	??_TMR1_Initialize,c
  4728  0018F8  1045               	iorwf	??_TMR1_Initialize,w,c
  4729  0018FA  6E4E               	movwf	_timer1ReloadVal,c	;volatile
  4730  0018FC  5046               	movf	??_TMR1_Initialize+1,w,c
  4731  0018FE  6E4F               	movwf	_timer1ReloadVal+1,c	;volatile
  4732                           
  4733                           ;tmr1.c: 90: PIR4bits.TMR1IF = 0;
  4734  001900  010E               	movlb	14	; () banked
  4735  001902  91CE               	bcf	206,0,b	;volatile
  4736                           
  4737                           ; BSR set to: 14
  4738                           ;tmr1.c: 93: PIE4bits.TMR1IE = 1;
  4739  001904  010E               	movlb	14	; () banked
  4740  001906  81C6               	bsf	198,0,b	;volatile
  4741                           
  4742                           ; BSR set to: 14
  4743                           ;tmr1.c: 96: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  4744  001908  0E58               	movlw	low _TMR1_DefaultInterruptHandler
  4745  00190A  6E43               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  4746  00190C  0E1D               	movlw	high _TMR1_DefaultInterruptHandler
  4747  00190E  6E44               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  4748  001910  EC99  F00E         	call	_TMR1_SetInterruptHandler	;wreg free
  4749                           
  4750                           ;tmr1.c: 99: TMR1_StartTimer();
  4751  001914  ECB6  F00E         	call	_TMR1_StartTimer	;wreg free
  4752  001918  0012               	return		;funcret
  4753  00191A                     __end_of_TMR1_Initialize:
  4754                           	opt stack 0
  4755                           tosu	equ	0xFFF
  4756                           tosh	equ	0xFFE
  4757                           tosl	equ	0xFFD
  4758                           pclath	equ	0xFFA
  4759                           tblptru	equ	0xFF8
  4760                           tblptrh	equ	0xFF7
  4761                           tblptrl	equ	0xFF6
  4762                           tablat	equ	0xFF5
  4763                           prodh	equ	0xFF4
  4764                           prodl	equ	0xFF3
  4765                           intcon	equ	0xFF2
  4766                           postinc0	equ	0xFEE
  4767                           wreg	equ	0xFE8
  4768                           postdec1	equ	0xFE5
  4769                           fsr1h	equ	0xFE2
  4770                           fsr1l	equ	0xFE1
  4771                           indf2	equ	0xFDF
  4772                           postinc2	equ	0xFDE
  4773                           postdec2	equ	0xFDD
  4774                           fsr2h	equ	0xFDA
  4775                           fsr2l	equ	0xFD9
  4776                           status	equ	0xFD8
  4777                           
  4778 ;; *************** function _TMR1_StartTimer *****************
  4779 ;; Defined at:
  4780 ;;		line 102 in file "mcc_generated_files/tmr1.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		None
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4798 ;;Total ram usage:        0 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:    6
  4801 ;; This function calls:
  4802 ;;		Nothing
  4803 ;; This function is called by:
  4804 ;;		_TMR1_Initialize
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text33
  4809  001D6C                     __ptext33:
  4810                           	opt stack 0
  4811  001D6C                     _TMR1_StartTimer:
  4812                           	opt stack 22
  4813                           
  4814                           ;tmr1.c: 105: T1CONbits.TMR1ON = 1;
  4815                           
  4816                           ;incstack = 0
  4817  001D6C  80CF               	bsf	4047,0,c	;volatile
  4818  001D6E  0012               	return		;funcret
  4819  001D70                     __end_of_TMR1_StartTimer:
  4820                           	opt stack 0
  4821                           tosu	equ	0xFFF
  4822                           tosh	equ	0xFFE
  4823                           tosl	equ	0xFFD
  4824                           pclath	equ	0xFFA
  4825                           tblptru	equ	0xFF8
  4826                           tblptrh	equ	0xFF7
  4827                           tblptrl	equ	0xFF6
  4828                           tablat	equ	0xFF5
  4829                           prodh	equ	0xFF4
  4830                           prodl	equ	0xFF3
  4831                           intcon	equ	0xFF2
  4832                           postinc0	equ	0xFEE
  4833                           wreg	equ	0xFE8
  4834                           postdec1	equ	0xFE5
  4835                           fsr1h	equ	0xFE2
  4836                           fsr1l	equ	0xFE1
  4837                           indf2	equ	0xFDF
  4838                           postinc2	equ	0xFDE
  4839                           postdec2	equ	0xFDD
  4840                           fsr2h	equ	0xFDA
  4841                           fsr2l	equ	0xFD9
  4842                           status	equ	0xFD8
  4843                           
  4844 ;; *************** function _TMR1_SetInterruptHandler *****************
  4845 ;; Defined at:
  4846 ;;		line 185 in file "mcc_generated_files/tmr1.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;  InterruptHan    2   15[COMRAM] PTR void 
  4849 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;		None
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      void 
  4854 ;; Registers used:
  4855 ;;		wreg, status,2, status,0
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4865 ;;Total ram usage:        2 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; Hardware stack levels required when called:    6
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_TMR1_Initialize
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text34
  4876  001D32                     __ptext34:
  4877                           	opt stack 0
  4878  001D32                     _TMR1_SetInterruptHandler:
  4879                           	opt stack 22
  4880                           
  4881                           ;tmr1.c: 186: TMR1_InterruptHandler = InterruptHandler;
  4882                           
  4883                           ;incstack = 0
  4884  001D32  C043  F0DD         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4885  001D36  C044  F0DE         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4886  001D3A  0012               	return		;funcret
  4887  001D3C                     __end_of_TMR1_SetInterruptHandler:
  4888                           	opt stack 0
  4889                           tosu	equ	0xFFF
  4890                           tosh	equ	0xFFE
  4891                           tosl	equ	0xFFD
  4892                           pclath	equ	0xFFA
  4893                           tblptru	equ	0xFF8
  4894                           tblptrh	equ	0xFF7
  4895                           tblptrl	equ	0xFF6
  4896                           tablat	equ	0xFF5
  4897                           prodh	equ	0xFF4
  4898                           prodl	equ	0xFF3
  4899                           intcon	equ	0xFF2
  4900                           postinc0	equ	0xFEE
  4901                           wreg	equ	0xFE8
  4902                           postdec1	equ	0xFE5
  4903                           fsr1h	equ	0xFE2
  4904                           fsr1l	equ	0xFE1
  4905                           indf2	equ	0xFDF
  4906                           postinc2	equ	0xFDE
  4907                           postdec2	equ	0xFDD
  4908                           fsr2h	equ	0xFDA
  4909                           fsr2l	equ	0xFD9
  4910                           status	equ	0xFD8
  4911                           
  4912 ;; *************** function _PWM3_Initialize *****************
  4913 ;; Defined at:
  4914 ;;		line 57 in file "mcc_generated_files/pwm3.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4932 ;;Total ram usage:        0 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    6
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_SYSTEM_Initialize
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text35
  4943  001CAA                     __ptext35:
  4944                           	opt stack 0
  4945  001CAA                     _PWM3_Initialize:
  4946                           	opt stack 23
  4947                           
  4948                           ;pwm3.c: 61: PWM3CON = 0x80;
  4949                           
  4950                           ;incstack = 0
  4951  001CAA  0E80               	movlw	128
  4952  001CAC  6EA5               	movwf	4005,c	;volatile
  4953                           
  4954                           ;pwm3.c: 64: PWM3DCH = 0x19;
  4955  001CAE  0E19               	movlw	25
  4956  001CB0  6EA4               	movwf	4004,c	;volatile
  4957                           
  4958                           ;pwm3.c: 67: PWM3DCL = 0x40;
  4959  001CB2  0E40               	movlw	64
  4960  001CB4  6EA3               	movwf	4003,c	;volatile
  4961                           
  4962                           ;pwm3.c: 71: CCPTMRSbits.P3TSEL = 0x2;
  4963  001CB6  50AE               	movf	4014,w,c	;volatile
  4964  001CB8  0BCF               	andlw	-49
  4965  001CBA  0920               	iorlw	32
  4966  001CBC  6EAE               	movwf	4014,c	;volatile
  4967  001CBE  0012               	return		;funcret
  4968  001CC0                     __end_of_PWM3_Initialize:
  4969                           	opt stack 0
  4970                           tosu	equ	0xFFF
  4971                           tosh	equ	0xFFE
  4972                           tosl	equ	0xFFD
  4973                           pclath	equ	0xFFA
  4974                           tblptru	equ	0xFF8
  4975                           tblptrh	equ	0xFF7
  4976                           tblptrl	equ	0xFF6
  4977                           tablat	equ	0xFF5
  4978                           prodh	equ	0xFF4
  4979                           prodl	equ	0xFF3
  4980                           intcon	equ	0xFF2
  4981                           postinc0	equ	0xFEE
  4982                           wreg	equ	0xFE8
  4983                           postdec1	equ	0xFE5
  4984                           fsr1h	equ	0xFE2
  4985                           fsr1l	equ	0xFE1
  4986                           indf2	equ	0xFDF
  4987                           postinc2	equ	0xFDE
  4988                           postdec2	equ	0xFDD
  4989                           fsr2h	equ	0xFDA
  4990                           fsr2l	equ	0xFD9
  4991                           status	equ	0xFD8
  4992                           
  4993 ;; *************** function _PIN_MANAGER_Initialize *****************
  4994 ;; Defined at:
  4995 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  state           1   15[COMRAM] unsigned char 
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5013 ;;Total ram usage:        1 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    6
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_SYSTEM_Initialize
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text36
  5024  0013C2                     __ptext36:
  5025                           	opt stack 0
  5026  0013C2                     _PIN_MANAGER_Initialize:
  5027                           	opt stack 23
  5028                           
  5029                           ;pin_manager.c: 56: LATE = 0x00;
  5030                           
  5031                           ;incstack = 0
  5032  0013C2  0E00               	movlw	0
  5033  0013C4  6E87               	movwf	3975,c	;volatile
  5034                           
  5035                           ;pin_manager.c: 57: LATD = 0x00;
  5036  0013C6  0E00               	movlw	0
  5037  0013C8  6E86               	movwf	3974,c	;volatile
  5038                           
  5039                           ;pin_manager.c: 58: LATA = 0x00;
  5040  0013CA  0E00               	movlw	0
  5041  0013CC  6E83               	movwf	3971,c	;volatile
  5042                           
  5043                           ;pin_manager.c: 59: LATB = 0x02;
  5044  0013CE  0E02               	movlw	2
  5045  0013D0  6E84               	movwf	3972,c	;volatile
  5046                           
  5047                           ;pin_manager.c: 60: LATC = 0x00;
  5048  0013D2  0E00               	movlw	0
  5049  0013D4  6E85               	movwf	3973,c	;volatile
  5050                           
  5051                           ;pin_manager.c: 65: TRISE = 0x07;
  5052  0013D6  0E07               	movlw	7
  5053  0013D8  6E8C               	movwf	3980,c	;volatile
  5054                           
  5055                           ;pin_manager.c: 66: TRISA = 0xFE;
  5056  0013DA  0EFE               	movlw	254
  5057  0013DC  6E88               	movwf	3976,c	;volatile
  5058                           
  5059                           ;pin_manager.c: 67: TRISB = 0xFE;
  5060  0013DE  0EFE               	movlw	254
  5061  0013E0  6E89               	movwf	3977,c	;volatile
  5062                           
  5063                           ;pin_manager.c: 68: TRISC = 0xFF;
  5064  0013E2  688A               	setf	3978,c	;volatile
  5065                           
  5066                           ;pin_manager.c: 69: TRISD = 0x01;
  5067  0013E4  0E01               	movlw	1
  5068  0013E6  6E8B               	movwf	3979,c	;volatile
  5069                           
  5070                           ;pin_manager.c: 74: ANSELC = 0x77;
  5071  0013E8  0E77               	movlw	119
  5072  0013EA  010F               	movlb	15	; () banked
  5073  0013EC  6F21               	movwf	33,b	;volatile
  5074                           
  5075                           ;pin_manager.c: 75: ANSELB = 0x80;
  5076  0013EE  0E80               	movlw	128
  5077  0013F0  010F               	movlb	15	; () banked
  5078  0013F2  6F19               	movwf	25,b	;volatile
  5079                           
  5080                           ;pin_manager.c: 76: ANSELD = 0x00;
  5081  0013F4  0E00               	movlw	0
  5082  0013F6  010F               	movlb	15	; () banked
  5083  0013F8  6F26               	movwf	38,b	;volatile
  5084                           
  5085                           ;pin_manager.c: 77: ANSELE = 0x07;
  5086  0013FA  0E07               	movlw	7
  5087  0013FC  010F               	movlb	15	; () banked
  5088  0013FE  6F2E               	movwf	46,b	;volatile
  5089                           
  5090                           ;pin_manager.c: 78: ANSELA = 0xFE;
  5091  001400  0EFE               	movlw	254
  5092  001402  010F               	movlb	15	; () banked
  5093  001404  6F11               	movwf	17,b	;volatile
  5094                           
  5095                           ; BSR set to: 15
  5096                           ;pin_manager.c: 83: WPUD = 0xFF;
  5097  001406  010F               	movlb	15	; () banked
  5098  001408  6925               	setf	37,b	;volatile
  5099                           
  5100                           ;pin_manager.c: 84: WPUE = 0x0F;
  5101  00140A  0E0F               	movlw	15
  5102  00140C  010F               	movlb	15	; () banked
  5103  00140E  6F2D               	movwf	45,b	;volatile
  5104                           
  5105                           ;pin_manager.c: 85: WPUB = 0x00;
  5106  001410  0E00               	movlw	0
  5107  001412  010F               	movlb	15	; () banked
  5108  001414  6F18               	movwf	24,b	;volatile
  5109                           
  5110                           ;pin_manager.c: 86: WPUA = 0xFE;
  5111  001416  0EFE               	movlw	254
  5112  001418  010F               	movlb	15	; () banked
  5113  00141A  6F10               	movwf	16,b	;volatile
  5114                           
  5115                           ;pin_manager.c: 87: WPUC = 0x77;
  5116  00141C  0E77               	movlw	119
  5117  00141E  010F               	movlb	15	; () banked
  5118  001420  6F20               	movwf	32,b	;volatile
  5119                           
  5120                           ;pin_manager.c: 92: ODCONE = 0x00;
  5121  001422  0E00               	movlw	0
  5122  001424  010F               	movlb	15	; () banked
  5123  001426  6F2C               	movwf	44,b	;volatile
  5124                           
  5125                           ;pin_manager.c: 93: ODCONA = 0x00;
  5126  001428  0E00               	movlw	0
  5127  00142A  010F               	movlb	15	; () banked
  5128  00142C  6F0F               	movwf	15,b	;volatile
  5129                           
  5130                           ;pin_manager.c: 94: ODCONB = 0x00;
  5131  00142E  0E00               	movlw	0
  5132  001430  010F               	movlb	15	; () banked
  5133  001432  6F17               	movwf	23,b	;volatile
  5134                           
  5135                           ;pin_manager.c: 95: ODCONC = 0x00;
  5136  001434  0E00               	movlw	0
  5137  001436  010F               	movlb	15	; () banked
  5138  001438  6F1F               	movwf	31,b	;volatile
  5139                           
  5140                           ;pin_manager.c: 96: ODCOND = 0x00;
  5141  00143A  0E00               	movlw	0
  5142  00143C  010F               	movlb	15	; () banked
  5143  00143E  6F24               	movwf	36,b	;volatile
  5144                           
  5145                           ;pin_manager.c: 103: bool state = GIE;
  5146  001440  0E00               	movlw	0
  5147  001442  BEF2               	btfsc	intcon,7,c	;volatile
  5148  001444  0E01               	movlw	1
  5149  001446  6E43               	movwf	PIN_MANAGER_Initialize@state,c
  5150                           
  5151                           ; BSR set to: 15
  5152                           ;pin_manager.c: 104: GIE = 0;
  5153  001448  9EF2               	bcf	intcon,7,c	;volatile
  5154                           
  5155                           ;pin_manager.c: 105: PPSLOCK = 0x55;
  5156  00144A  0E55               	movlw	85
  5157  00144C  010E               	movlb	14	; () banked
  5158  00144E  6FA0               	movwf	160,b	;volatile
  5159                           
  5160                           ;pin_manager.c: 106: PPSLOCK = 0xAA;
  5161  001450  0EAA               	movlw	170
  5162  001452  010E               	movlb	14	; () banked
  5163  001454  6FA0               	movwf	160,b	;volatile
  5164                           
  5165                           ; BSR set to: 14
  5166                           ;pin_manager.c: 107: PPSLOCKbits.PPSLOCKED = 0x00;
  5167  001456  010E               	movlb	14	; () banked
  5168  001458  91A0               	bcf	160,0,b	;volatile
  5169                           
  5170                           ;pin_manager.c: 109: RA0PPS = 0x07;
  5171  00145A  0E07               	movlw	7
  5172  00145C  010E               	movlb	14	; () banked
  5173  00145E  6FE7               	movwf	231,b	;volatile
  5174                           
  5175                           ; BSR set to: 14
  5176                           ;pin_manager.c: 110: T2INPPSbits.T2INPPS = 0x13;
  5177  001460  010E               	movlb	14	; () banked
  5178  001462  81AB               	bsf	171,0,b	;volatile
  5179  001464  83AB               	bsf	171,1,b	;volatile
  5180  001466  95AB               	bcf	171,2,b	;volatile
  5181  001468  97AB               	bcf	171,3,b	;volatile
  5182  00146A  89AB               	bsf	171,4,b	;volatile
  5183                           
  5184                           ;pin_manager.c: 111: RB0PPS = 0x09;
  5185  00146C  0E09               	movlw	9
  5186  00146E  010E               	movlb	14	; () banked
  5187  001470  6FEF               	movwf	239,b	;volatile
  5188                           
  5189                           ; BSR set to: 14
  5190                           ;pin_manager.c: 112: RX2PPSbits.RXPPS = 0x18;
  5191  001472  010E               	movlb	14	; () banked
  5192  001474  918D               	bcf	141,0,b	;volatile
  5193  001476  938D               	bcf	141,1,b	;volatile
  5194  001478  958D               	bcf	141,2,b	;volatile
  5195  00147A  878D               	bsf	141,3,b	;volatile
  5196  00147C  898D               	bsf	141,4,b	;volatile
  5197                           
  5198                           ;pin_manager.c: 114: PPSLOCK = 0x55;
  5199  00147E  0E55               	movlw	85
  5200  001480  010E               	movlb	14	; () banked
  5201  001482  6FA0               	movwf	160,b	;volatile
  5202                           
  5203                           ;pin_manager.c: 115: PPSLOCK = 0xAA;
  5204  001484  0EAA               	movlw	170
  5205  001486  010E               	movlb	14	; () banked
  5206  001488  6FA0               	movwf	160,b	;volatile
  5207                           
  5208                           ; BSR set to: 14
  5209                           ;pin_manager.c: 116: PPSLOCKbits.PPSLOCKED = 0x01;
  5210  00148A  010E               	movlb	14	; () banked
  5211  00148C  81A0               	bsf	160,0,b	;volatile
  5212                           
  5213                           ; BSR set to: 14
  5214                           ;pin_manager.c: 118: GIE = state;
  5215  00148E  A043               	btfss	PIN_MANAGER_Initialize@state,0,c
  5216  001490  D002               	goto	u680
  5217  001492  8EF2               	bsf	intcon,7,c	;volatile
  5218  001494  0012               	return	
  5219  001496                     u680:
  5220  001496  9EF2               	bcf	intcon,7,c	;volatile
  5221  001498  0012               	return		;funcret
  5222  00149A                     __end_of_PIN_MANAGER_Initialize:
  5223                           	opt stack 0
  5224                           tosu	equ	0xFFF
  5225                           tosh	equ	0xFFE
  5226                           tosl	equ	0xFFD
  5227                           pclath	equ	0xFFA
  5228                           tblptru	equ	0xFF8
  5229                           tblptrh	equ	0xFF7
  5230                           tblptrl	equ	0xFF6
  5231                           tablat	equ	0xFF5
  5232                           prodh	equ	0xFF4
  5233                           prodl	equ	0xFF3
  5234                           intcon	equ	0xFF2
  5235                           postinc0	equ	0xFEE
  5236                           wreg	equ	0xFE8
  5237                           postdec1	equ	0xFE5
  5238                           fsr1h	equ	0xFE2
  5239                           fsr1l	equ	0xFE1
  5240                           indf2	equ	0xFDF
  5241                           postinc2	equ	0xFDE
  5242                           postdec2	equ	0xFDD
  5243                           fsr2h	equ	0xFDA
  5244                           fsr2l	equ	0xFD9
  5245                           status	equ	0xFD8
  5246                           
  5247 ;; *************** function _OSCILLATOR_Initialize *****************
  5248 ;; Defined at:
  5249 ;;		line 121 in file "mcc_generated_files/mcc.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, status,2
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5267 ;;Total ram usage:        0 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    6
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_SYSTEM_Initialize
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text37
  5278  001C74                     __ptext37:
  5279                           	opt stack 0
  5280  001C74                     _OSCILLATOR_Initialize:
  5281                           	opt stack 23
  5282                           
  5283                           ;mcc.c: 124: OSCCON1 = 0x60;
  5284                           
  5285                           ;incstack = 0
  5286  001C74  0E60               	movlw	96
  5287  001C76  010E               	movlb	14	; () banked
  5288  001C78  6FD8               	movwf	216,b	;volatile
  5289                           
  5290                           ;mcc.c: 126: OSCCON3 = 0x40;
  5291  001C7A  0E40               	movlw	64
  5292  001C7C  010E               	movlb	14	; () banked
  5293  001C7E  6FDA               	movwf	218,b	;volatile
  5294                           
  5295                           ;mcc.c: 128: OSCEN = 0x00;
  5296  001C80  0E00               	movlw	0
  5297  001C82  010E               	movlb	14	; () banked
  5298  001C84  6FDC               	movwf	220,b	;volatile
  5299                           
  5300                           ;mcc.c: 130: OSCFRQ = 0x08;
  5301  001C86  0E08               	movlw	8
  5302  001C88  010E               	movlb	14	; () banked
  5303  001C8A  6FDE               	movwf	222,b	;volatile
  5304                           
  5305                           ;mcc.c: 132: OSCTUNE = 0x00;
  5306  001C8C  0E00               	movlw	0
  5307  001C8E  010E               	movlb	14	; () banked
  5308  001C90  6FDD               	movwf	221,b	;volatile
  5309                           
  5310                           ; BSR set to: 14
  5311  001C92  0012               	return		;funcret
  5312  001C94                     __end_of_OSCILLATOR_Initialize:
  5313                           	opt stack 0
  5314                           tosu	equ	0xFFF
  5315                           tosh	equ	0xFFE
  5316                           tosl	equ	0xFFD
  5317                           pclath	equ	0xFFA
  5318                           tblptru	equ	0xFF8
  5319                           tblptrh	equ	0xFF7
  5320                           tblptrl	equ	0xFF6
  5321                           tablat	equ	0xFF5
  5322                           prodh	equ	0xFF4
  5323                           prodl	equ	0xFF3
  5324                           intcon	equ	0xFF2
  5325                           postinc0	equ	0xFEE
  5326                           wreg	equ	0xFE8
  5327                           postdec1	equ	0xFE5
  5328                           fsr1h	equ	0xFE2
  5329                           fsr1l	equ	0xFE1
  5330                           indf2	equ	0xFDF
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _INTERRUPT_Initialize *****************
  5338 ;; Defined at:
  5339 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		None
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;Total ram usage:        0 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    6
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_SYSTEM_Initialize
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text38
  5368  001CD6                     __ptext38:
  5369                           	opt stack 0
  5370  001CD6                     _INTERRUPT_Initialize:
  5371                           	opt stack 23
  5372                           
  5373                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 1;
  5374                           
  5375                           ; BSR set to: 14
  5376                           ;incstack = 0
  5377  001CD6  8AF2               	bsf	intcon,5,c	;volatile
  5378                           
  5379                           ;interrupt_manager.c: 59: IPR3bits.RC2IP = 1;
  5380  001CD8  010E               	movlb	14	; () banked
  5381  001CDA  8FBD               	bsf	189,7,b	;volatile
  5382                           
  5383                           ;interrupt_manager.c: 62: IPR3bits.TX1IP = 1;
  5384  001CDC  010E               	movlb	14	; () banked
  5385  001CDE  89BD               	bsf	189,4,b	;volatile
  5386                           
  5387                           ;interrupt_manager.c: 65: IPR4bits.TMR2IP = 1;
  5388  001CE0  010E               	movlb	14	; () banked
  5389  001CE2  83BE               	bsf	190,1,b	;volatile
  5390                           
  5391                           ;interrupt_manager.c: 68: IPR4bits.TMR1IP = 1;
  5392  001CE4  010E               	movlb	14	; () banked
  5393  001CE6  81BE               	bsf	190,0,b	;volatile
  5394                           
  5395                           ; BSR set to: 14
  5396  001CE8  0012               	return		;funcret
  5397  001CEA                     __end_of_INTERRUPT_Initialize:
  5398                           	opt stack 0
  5399                           tosu	equ	0xFFF
  5400                           tosh	equ	0xFFE
  5401                           tosl	equ	0xFFD
  5402                           pclath	equ	0xFFA
  5403                           tblptru	equ	0xFF8
  5404                           tblptrh	equ	0xFF7
  5405                           tblptrl	equ	0xFF6
  5406                           tablat	equ	0xFF5
  5407                           prodh	equ	0xFF4
  5408                           prodl	equ	0xFF3
  5409                           intcon	equ	0xFF2
  5410                           postinc0	equ	0xFEE
  5411                           wreg	equ	0xFE8
  5412                           postdec1	equ	0xFE5
  5413                           fsr1h	equ	0xFE2
  5414                           fsr1l	equ	0xFE1
  5415                           indf2	equ	0xFDF
  5416                           postinc2	equ	0xFDE
  5417                           postdec2	equ	0xFDD
  5418                           fsr2h	equ	0xFDA
  5419                           fsr2l	equ	0xFD9
  5420                           status	equ	0xFD8
  5421                           
  5422 ;; *************** function _EUSART2_Initialize *****************
  5423 ;; Defined at:
  5424 ;;		line 75 in file "mcc_generated_files/eusart2.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;		None
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;		None
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  1    wreg      void 
  5431 ;; Registers used:
  5432 ;;		wreg, status,2
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5442 ;;Total ram usage:        0 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    6
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_SYSTEM_Initialize
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text39
  5453  001962                     __ptext39:
  5454                           	opt stack 0
  5455  001962                     _EUSART2_Initialize:
  5456                           	opt stack 23
  5457                           
  5458                           ;eusart2.c: 78: PIE3bits.RC2IE = 0;
  5459                           
  5460                           ; BSR set to: 14
  5461                           ;incstack = 0
  5462  001962  010E               	movlb	14	; () banked
  5463  001964  9FC5               	bcf	197,7,b	;volatile
  5464                           
  5465                           ;eusart2.c: 79: PIE3bits.TX2IE = 0;
  5466  001966  010E               	movlb	14	; () banked
  5467  001968  9DC5               	bcf	197,6,b	;volatile
  5468                           
  5469                           ; BSR set to: 14
  5470                           ;eusart2.c: 84: BAUD2CON = 0x08;
  5471  00196A  0E08               	movlw	8
  5472  00196C  010E               	movlb	14	; () banked
  5473  00196E  6F9F               	movwf	159,b	;volatile
  5474                           
  5475                           ;eusart2.c: 87: RC2STA = 0x90;
  5476  001970  0E90               	movlw	144
  5477  001972  010E               	movlb	14	; () banked
  5478  001974  6F9D               	movwf	157,b	;volatile
  5479                           
  5480                           ;eusart2.c: 90: TX2STA = 0x04;
  5481  001976  0E04               	movlw	4
  5482  001978  010E               	movlb	14	; () banked
  5483  00197A  6F9E               	movwf	158,b	;volatile
  5484                           
  5485                           ;eusart2.c: 93: SP2BRGL = 0xA0;
  5486  00197C  0EA0               	movlw	160
  5487  00197E  010E               	movlb	14	; () banked
  5488  001980  6F9B               	movwf	155,b	;volatile
  5489                           
  5490                           ;eusart2.c: 96: SP2BRGH = 0x01;
  5491  001982  0E01               	movlw	1
  5492  001984  010E               	movlb	14	; () banked
  5493  001986  6F9C               	movwf	156,b	;volatile
  5494                           
  5495                           ;eusart2.c: 100: eusart2TxHead = 0;
  5496  001988  0E00               	movlw	0
  5497  00198A  6E1C               	movwf	_eusart2TxHead,c
  5498                           
  5499                           ;eusart2.c: 101: eusart2TxTail = 0;
  5500  00198C  0E00               	movlw	0
  5501  00198E  6E1D               	movwf	_eusart2TxTail,c
  5502                           
  5503                           ;eusart2.c: 102: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
  5504  001990  0E08               	movlw	8
  5505  001992  0100               	movlb	0	; () banked
  5506  001994  6FE2               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  5507                           
  5508                           ;eusart2.c: 104: eusart2RxHead = 0;
  5509  001996  0E00               	movlw	0
  5510  001998  6E1A               	movwf	_eusart2RxHead,c
  5511                           
  5512                           ;eusart2.c: 105: eusart2RxTail = 0;
  5513  00199A  0E00               	movlw	0
  5514  00199C  6E1B               	movwf	_eusart2RxTail,c
  5515                           
  5516                           ;eusart2.c: 106: eusart2RxCount = 0;
  5517  00199E  0E00               	movlw	0
  5518  0019A0  6E19               	movwf	_eusart2RxCount,c	;volatile
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;eusart2.c: 109: PIE3bits.RC2IE = 1;
  5522  0019A2  010E               	movlb	14	; () banked
  5523  0019A4  8FC5               	bsf	197,7,b	;volatile
  5524                           
  5525                           ; BSR set to: 14
  5526  0019A6  0012               	return		;funcret
  5527  0019A8                     __end_of_EUSART2_Initialize:
  5528                           	opt stack 0
  5529                           tosu	equ	0xFFF
  5530                           tosh	equ	0xFFE
  5531                           tosl	equ	0xFFD
  5532                           pclath	equ	0xFFA
  5533                           tblptru	equ	0xFF8
  5534                           tblptrh	equ	0xFF7
  5535                           tblptrl	equ	0xFF6
  5536                           tablat	equ	0xFF5
  5537                           prodh	equ	0xFF4
  5538                           prodl	equ	0xFF3
  5539                           intcon	equ	0xFF2
  5540                           postinc0	equ	0xFEE
  5541                           wreg	equ	0xFE8
  5542                           postdec1	equ	0xFE5
  5543                           fsr1h	equ	0xFE2
  5544                           fsr1l	equ	0xFE1
  5545                           indf2	equ	0xFDF
  5546                           postinc2	equ	0xFDE
  5547                           postdec2	equ	0xFDD
  5548                           fsr2h	equ	0xFDA
  5549                           fsr2l	equ	0xFD9
  5550                           status	equ	0xFD8
  5551                           
  5552 ;; *************** function _EUSART1_Initialize *****************
  5553 ;; Defined at:
  5554 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;		None
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;		None
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  1    wreg      void 
  5561 ;; Registers used:
  5562 ;;		wreg, status,2
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5572 ;;Total ram usage:        0 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:    6
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_SYSTEM_Initialize
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text40
  5583  001AD8                     __ptext40:
  5584                           	opt stack 0
  5585  001AD8                     _EUSART1_Initialize:
  5586                           	opt stack 23
  5587                           
  5588                           ;eusart1.c: 79: PIE3bits.RC1IE = 0;
  5589                           
  5590                           ; BSR set to: 14
  5591                           ;incstack = 0
  5592  001AD8  010E               	movlb	14	; () banked
  5593  001ADA  9BC5               	bcf	197,5,b	;volatile
  5594                           
  5595                           ;eusart1.c: 80: PIE3bits.TX1IE = 0;
  5596  001ADC  010E               	movlb	14	; () banked
  5597  001ADE  99C5               	bcf	197,4,b	;volatile
  5598                           
  5599                           ; BSR set to: 14
  5600                           ;eusart1.c: 85: BAUD1CON = 0x08;
  5601  001AE0  0E08               	movlw	8
  5602  001AE2  6E9F               	movwf	3999,c	;volatile
  5603                           
  5604                           ;eusart1.c: 88: RC1STA = 0x80;
  5605  001AE4  0E80               	movlw	128
  5606  001AE6  6E9D               	movwf	3997,c	;volatile
  5607                           
  5608                           ;eusart1.c: 91: TX1STA = 0x65;
  5609  001AE8  0E65               	movlw	101
  5610  001AEA  6E9E               	movwf	3998,c	;volatile
  5611                           
  5612                           ;eusart1.c: 94: SP1BRGL = 0x3F;
  5613  001AEC  0E3F               	movlw	63
  5614  001AEE  6E9B               	movwf	3995,c	;volatile
  5615                           
  5616                           ;eusart1.c: 97: SP1BRGH = 0x00;
  5617  001AF0  0E00               	movlw	0
  5618  001AF2  6E9C               	movwf	3996,c	;volatile
  5619                           
  5620                           ;eusart1.c: 101: eusart1TxHead = 0;
  5621  001AF4  0E00               	movlw	0
  5622  001AF6  6E17               	movwf	_eusart1TxHead,c
  5623                           
  5624                           ;eusart1.c: 102: eusart1TxTail = 0;
  5625  001AF8  0E00               	movlw	0
  5626  001AFA  6E18               	movwf	_eusart1TxTail,c
  5627                           
  5628                           ;eusart1.c: 103: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  5629  001AFC  0E08               	movlw	8
  5630  001AFE  0100               	movlb	0	; () banked
  5631  001B00  6FE1               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  5632                           
  5633                           ;eusart1.c: 105: eusart1RxHead = 0;
  5634  001B02  0E00               	movlw	0
  5635  001B04  6E15               	movwf	_eusart1RxHead,c
  5636                           
  5637                           ;eusart1.c: 106: eusart1RxTail = 0;
  5638  001B06  0E00               	movlw	0
  5639  001B08  6E16               	movwf	_eusart1RxTail,c
  5640                           
  5641                           ;eusart1.c: 107: eusart1RxCount = 0;
  5642  001B0A  0E00               	movlw	0
  5643  001B0C  6E14               	movwf	_eusart1RxCount,c	;volatile
  5644                           
  5645                           ; BSR set to: 0
  5646  001B0E  0012               	return		;funcret
  5647  001B10                     __end_of_EUSART1_Initialize:
  5648                           	opt stack 0
  5649                           tosu	equ	0xFFF
  5650                           tosh	equ	0xFFE
  5651                           tosl	equ	0xFFD
  5652                           pclath	equ	0xFFA
  5653                           tblptru	equ	0xFF8
  5654                           tblptrh	equ	0xFF7
  5655                           tblptrl	equ	0xFF6
  5656                           tablat	equ	0xFF5
  5657                           prodh	equ	0xFF4
  5658                           prodl	equ	0xFF3
  5659                           intcon	equ	0xFF2
  5660                           postinc0	equ	0xFEE
  5661                           wreg	equ	0xFE8
  5662                           postdec1	equ	0xFE5
  5663                           fsr1h	equ	0xFE2
  5664                           fsr1l	equ	0xFE1
  5665                           indf2	equ	0xFDF
  5666                           postinc2	equ	0xFDE
  5667                           postdec2	equ	0xFDD
  5668                           fsr2h	equ	0xFDA
  5669                           fsr2l	equ	0xFD9
  5670                           status	equ	0xFD8
  5671                           
  5672 ;; *************** function _InitApp *****************
  5673 ;; Defined at:
  5674 ;;		line 4 in file "app/app_init.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;		None
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;		None
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      void 
  5681 ;; Registers used:
  5682 ;;		cstack
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5692 ;;Total ram usage:        0 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; Hardware stack levels required when called:    7
  5695 ;; This function calls:
  5696 ;;		_app_HD44780_Init
  5697 ;; This function is called by:
  5698 ;;		_main
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text41
  5703  001D4C                     __ptext41:
  5704                           	opt stack 0
  5705  001D4C                     _InitApp:
  5706                           	opt stack 23
  5707                           
  5708                           ;app_init.c: 7: app_HD44780_Init();
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;incstack = 0
  5712  001D4C  EC60  F00E         	call	_app_HD44780_Init	;wreg free
  5713  001D50  0012               	return	
  5714  001D52                     __end_of_InitApp:
  5715                           	opt stack 0
  5716                           tosu	equ	0xFFF
  5717                           tosh	equ	0xFFE
  5718                           tosl	equ	0xFFD
  5719                           pclath	equ	0xFFA
  5720                           tblptru	equ	0xFF8
  5721                           tblptrh	equ	0xFF7
  5722                           tblptrl	equ	0xFF6
  5723                           tablat	equ	0xFF5
  5724                           prodh	equ	0xFF4
  5725                           prodl	equ	0xFF3
  5726                           intcon	equ	0xFF2
  5727                           postinc0	equ	0xFEE
  5728                           wreg	equ	0xFE8
  5729                           postdec1	equ	0xFE5
  5730                           fsr1h	equ	0xFE2
  5731                           fsr1l	equ	0xFE1
  5732                           indf2	equ	0xFDF
  5733                           postinc2	equ	0xFDE
  5734                           postdec2	equ	0xFDD
  5735                           fsr2h	equ	0xFDA
  5736                           fsr2l	equ	0xFD9
  5737                           status	equ	0xFD8
  5738                           
  5739 ;; *************** function _app_HD44780_Init *****************
  5740 ;; Defined at:
  5741 ;;		line 119 in file "app/app_HD44780.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;		None
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;		None
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  1    wreg      void 
  5748 ;; Registers used:
  5749 ;;		None
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5759 ;;Total ram usage:        0 bytes
  5760 ;; Hardware stack levels used:    1
  5761 ;; Hardware stack levels required when called:    6
  5762 ;; This function calls:
  5763 ;;		Nothing
  5764 ;; This function is called by:
  5765 ;;		_app_HD44780_Mngr
  5766 ;;		_InitApp
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text42
  5771  001CC0                     __ptext42:
  5772                           	opt stack 0
  5773  001CC0                     _app_HD44780_Init:
  5774                           	opt stack 21
  5775                           
  5776                           ;app_HD44780.c: 122: LATD1 = ((T_BOOLEAN)0u);
  5777                           
  5778                           ;incstack = 0
  5779  001CC0  9286               	bcf	3974,1,c	;volatile
  5780                           
  5781                           ;app_HD44780.c: 123: LATD2 = 0u;
  5782  001CC2  9486               	bcf	3974,2,c	;volatile
  5783                           
  5784                           ;app_HD44780.c: 124: LATD3 = 0u;
  5785  001CC4  9686               	bcf	3974,3,c	;volatile
  5786                           
  5787                           ;app_HD44780.c: 125: LATD4 = 0u;
  5788  001CC6  9886               	bcf	3974,4,c	;volatile
  5789                           
  5790                           ;app_HD44780.c: 126: LATD5 = 1u;
  5791  001CC8  8A86               	bsf	3974,5,c	;volatile
  5792                           
  5793                           ;app_HD44780.c: 127: LATD6 = 0u;
  5794  001CCA  9C86               	bcf	3974,6,c	;volatile
  5795                           
  5796                           ;app_HD44780.c: 128: LATD7 = 0u;
  5797  001CCC  9E86               	bcf	3974,7,c	;volatile
  5798                           
  5799                           ;app_HD44780.c: 129: LATD1 = ((T_BOOLEAN)1u);
  5800  001CCE  8286               	bsf	3974,1,c	;volatile
  5801                           
  5802                           ;app_HD44780.c: 130: LATD1 = ((T_BOOLEAN)0u);
  5803  001CD0  9286               	bcf	3974,1,c	;volatile
  5804                           
  5805                           ;app_HD44780.c: 131: ruw_HDBuffer.HD_READY = ((T_BOOLEAN)0u);
  5806  001CD2  960D               	bcf	_ruw_HDBuffer,3,c
  5807  001CD4  0012               	return		;funcret
  5808  001CD6                     __end_of_app_HD44780_Init:
  5809                           	opt stack 0
  5810                           tosu	equ	0xFFF
  5811                           tosh	equ	0xFFE
  5812                           tosl	equ	0xFFD
  5813                           pclath	equ	0xFFA
  5814                           tblptru	equ	0xFF8
  5815                           tblptrh	equ	0xFF7
  5816                           tblptrl	equ	0xFF6
  5817                           tablat	equ	0xFF5
  5818                           prodh	equ	0xFF4
  5819                           prodl	equ	0xFF3
  5820                           intcon	equ	0xFF2
  5821                           postinc0	equ	0xFEE
  5822                           wreg	equ	0xFE8
  5823                           postdec1	equ	0xFE5
  5824                           fsr1h	equ	0xFE2
  5825                           fsr1l	equ	0xFE1
  5826                           indf2	equ	0xFDF
  5827                           postinc2	equ	0xFDE
  5828                           postdec2	equ	0xFDD
  5829                           fsr2h	equ	0xFDA
  5830                           fsr2l	equ	0xFD9
  5831                           status	equ	0xFD8
  5832                           
  5833 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  5834 ;; Defined at:
  5835 ;;		line 73 in file "mcc_generated_files/interrupt_manager.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;		None
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5851 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5852 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5853 ;;Total ram usage:       14 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    5
  5856 ;; This function calls:
  5857 ;;		_EUSART1_Transmit_ISR
  5858 ;;		_EUSART2_Receive_ISR
  5859 ;;		_TMR1_ISR
  5860 ;;		_TMR2_ISR
  5861 ;; This function is called by:
  5862 ;;		Interrupt level 2
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           	psect	intcode
  5867  000008                     __pintcode:
  5868                           	opt stack 0
  5869  000008                     _INTERRUPT_InterruptManagerHigh:
  5870                           	opt stack 19
  5871                           
  5872                           ;incstack = 0
  5873  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5874  00000A  CFFA F035          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  5875  00000E  CFFB F036          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  5876  000012  CFE9 F037          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
  5877  000016  CFEA F038          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
  5878  00001A  CFE1 F039          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
  5879  00001E  CFE2 F03A          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
  5880  000022  CFD9 F03B          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
  5881  000026  CFDA F03C          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
  5882  00002A  CFF3 F03D          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
  5883  00002E  CFF4 F03E          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
  5884  000032  CFF6 F03F          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
  5885  000036  CFF7 F040          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
  5886  00003A  CFF8 F041          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
  5887  00003E  CFF5 F042          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
  5888                           
  5889                           ;interrupt_manager.c: 76: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
  5890  000042  010E               	movlb	14	; () banked
  5891  000044  AFC5               	btfss	197,7,b	;volatile
  5892  000046  D004               	goto	i2l3967
  5893                           
  5894                           ; BSR set to: 14
  5895  000048  010E               	movlb	14	; () banked
  5896  00004A  BFCD               	btfsc	205,7,b	;volatile
  5897                           
  5898                           ; BSR set to: 14
  5899                           ;interrupt_manager.c: 77: {
  5900                           ;interrupt_manager.c: 78: EUSART2_Receive_ISR();
  5901  00004C  ECA1  F00D         	call	_EUSART2_Receive_ISR	;wreg free
  5902  000050                     i2l3967:
  5903                           
  5904                           ;interrupt_manager.c: 79: }
  5905                           ;interrupt_manager.c: 80: if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
  5906  000050  010E               	movlb	14	; () banked
  5907  000052  A9C5               	btfss	197,4,b	;volatile
  5908  000054  D004               	goto	i2l3973
  5909                           
  5910                           ; BSR set to: 14
  5911  000056  010E               	movlb	14	; () banked
  5912  000058  B9CD               	btfsc	205,4,b	;volatile
  5913                           
  5914                           ; BSR set to: 14
  5915                           ;interrupt_manager.c: 81: {
  5916                           ;interrupt_manager.c: 82: EUSART1_Transmit_ISR();
  5917  00005A  ECAF  F00E         	call	_EUSART1_Transmit_ISR	;wreg free
  5918  00005E                     i2l3973:
  5919                           
  5920                           ;interrupt_manager.c: 83: }
  5921                           ;interrupt_manager.c: 84: if(PIE4bits.TMR2IE == 1 && PIR4bits.TMR2IF == 1)
  5922  00005E  010E               	movlb	14	; () banked
  5923  000060  A3C6               	btfss	198,1,b	;volatile
  5924  000062  D004               	goto	i2l3979
  5925                           
  5926                           ; BSR set to: 14
  5927  000064  010E               	movlb	14	; () banked
  5928  000066  B3CE               	btfsc	206,1,b	;volatile
  5929                           
  5930                           ; BSR set to: 14
  5931                           ;interrupt_manager.c: 85: {
  5932                           ;interrupt_manager.c: 86: TMR2_ISR();
  5933  000068  EC9E  F00E         	call	_TMR2_ISR	;wreg free
  5934  00006C                     i2l3979:
  5935                           
  5936                           ;interrupt_manager.c: 87: }
  5937                           ;interrupt_manager.c: 88: if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
  5938  00006C  010E               	movlb	14	; () banked
  5939  00006E  A1C6               	btfss	198,0,b	;volatile
  5940  000070  D004               	goto	i2l763
  5941                           
  5942                           ; BSR set to: 14
  5943  000072  010E               	movlb	14	; () banked
  5944  000074  B1CE               	btfsc	206,0,b	;volatile
  5945                           
  5946                           ; BSR set to: 14
  5947                           ;interrupt_manager.c: 89: {
  5948                           ;interrupt_manager.c: 90: TMR1_ISR();
  5949  000076  EC7E  F00E         	call	_TMR1_ISR	;wreg free
  5950  00007A                     i2l763:
  5951  00007A  C042  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
  5952  00007E  C041  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
  5953  000082  C040  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
  5954  000086  C03F  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
  5955  00008A  C03E  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
  5956  00008E  C03D  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
  5957  000092  C03C  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
  5958  000096  C03B  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
  5959  00009A  C03A  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
  5960  00009E  C039  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
  5961  0000A2  C038  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
  5962  0000A6  C037  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
  5963  0000AA  C036  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  5964  0000AE  C035  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  5965  0000B2  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5966  0000B4  0011               	retfie		f
  5967  0000B6                     __end_of_INTERRUPT_InterruptManagerHigh:
  5968                           	opt stack 0
  5969                           tosu	equ	0xFFF
  5970                           tosh	equ	0xFFE
  5971                           tosl	equ	0xFFD
  5972                           pclatu	equ	0xFFB
  5973                           pclath	equ	0xFFA
  5974                           tblptru	equ	0xFF8
  5975                           tblptrh	equ	0xFF7
  5976                           tblptrl	equ	0xFF6
  5977                           tablat	equ	0xFF5
  5978                           prodh	equ	0xFF4
  5979                           prodl	equ	0xFF3
  5980                           intcon	equ	0xFF2
  5981                           postinc0	equ	0xFEE
  5982                           fsr0h	equ	0xFEA
  5983                           fsr0l	equ	0xFE9
  5984                           wreg	equ	0xFE8
  5985                           postdec1	equ	0xFE5
  5986                           fsr1h	equ	0xFE2
  5987                           fsr1l	equ	0xFE1
  5988                           indf2	equ	0xFDF
  5989                           postinc2	equ	0xFDE
  5990                           postdec2	equ	0xFDD
  5991                           fsr2h	equ	0xFDA
  5992                           fsr2l	equ	0xFD9
  5993                           status	equ	0xFD8
  5994                           
  5995 ;; *************** function _TMR2_ISR *****************
  5996 ;; Defined at:
  5997 ;;		line 168 in file "mcc_generated_files/tmr2.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;		None
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;		None
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  1    wreg      void 
  6004 ;; Registers used:
  6005 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6015 ;;Total ram usage:        0 bytes
  6016 ;; Hardware stack levels used:    1
  6017 ;; Hardware stack levels required when called:    4
  6018 ;; This function calls:
  6019 ;;		_TMR2_CallBack
  6020 ;; This function is called by:
  6021 ;;		_INTERRUPT_InterruptManagerHigh
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text44
  6026  001D3C                     __ptext44:
  6027                           	opt stack 0
  6028  001D3C                     _TMR2_ISR:
  6029                           	opt stack 19
  6030                           
  6031                           ;tmr2.c: 172: PIR4bits.TMR2IF = 0;
  6032                           
  6033                           ;incstack = 0
  6034  001D3C  010E               	movlb	14	; () banked
  6035  001D3E  93CE               	bcf	206,1,b	;volatile
  6036                           
  6037                           ; BSR set to: 14
  6038                           ;tmr2.c: 176: TMR2_CallBack();
  6039  001D40  EC06  F00E         	call	_TMR2_CallBack	;wreg free
  6040  001D44  0012               	return		;funcret
  6041  001D46                     __end_of_TMR2_ISR:
  6042                           	opt stack 0
  6043                           tosu	equ	0xFFF
  6044                           tosh	equ	0xFFE
  6045                           tosl	equ	0xFFD
  6046                           pclatu	equ	0xFFB
  6047                           pclath	equ	0xFFA
  6048                           tblptru	equ	0xFF8
  6049                           tblptrh	equ	0xFF7
  6050                           tblptrl	equ	0xFF6
  6051                           tablat	equ	0xFF5
  6052                           prodh	equ	0xFF4
  6053                           prodl	equ	0xFF3
  6054                           intcon	equ	0xFF2
  6055                           postinc0	equ	0xFEE
  6056                           fsr0h	equ	0xFEA
  6057                           fsr0l	equ	0xFE9
  6058                           wreg	equ	0xFE8
  6059                           postdec1	equ	0xFE5
  6060                           fsr1h	equ	0xFE2
  6061                           fsr1l	equ	0xFE1
  6062                           indf2	equ	0xFDF
  6063                           postinc2	equ	0xFDE
  6064                           postdec2	equ	0xFDD
  6065                           fsr2h	equ	0xFDA
  6066                           fsr2l	equ	0xFD9
  6067                           status	equ	0xFD8
  6068                           
  6069 ;; *************** function _TMR2_CallBack *****************
  6070 ;; Defined at:
  6071 ;;		line 179 in file "mcc_generated_files/tmr2.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;		None
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;		None
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6089 ;;Total ram usage:        0 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    3
  6092 ;; This function calls:
  6093 ;;		Absolute function
  6094 ;;		_TMR2_DefaultInterruptHandler
  6095 ;; This function is called by:
  6096 ;;		_TMR2_ISR
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text45
  6101  001C0C                     __ptext45:
  6102                           	opt stack 0
  6103  001C0C                     _TMR2_CallBack:
  6104                           	opt stack 19
  6105                           
  6106                           ;tmr2.c: 183: if(TMR2_InterruptHandler)
  6107                           
  6108                           ;incstack = 0
  6109  001C0C  0100               	movlb	0	; () banked
  6110  001C0E  51DF               	movf	_TMR2_InterruptHandler& (0+255),w,b
  6111  001C10  0100               	movlb	0	; () banked
  6112  001C12  11E0               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  6113  001C14  B4D8               	btfsc	status,2,c
  6114  001C16  0012               	return	
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;tmr2.c: 184: {
  6118                           ;tmr2.c: 185: TMR2_InterruptHandler();
  6119  001C18  D801               	call	i2u246_48
  6120  001C1A  0012               	return	
  6121  001C1C                     i2u246_48:
  6122  001C1C  0005               	push	
  6123  001C1E  6EFA               	movwf	pclath,c
  6124  001C20  0100               	movlb	0	; () banked
  6125  001C22  51DF               	movf	_TMR2_InterruptHandler& (0+255),w,b
  6126  001C24  6EFD               	movwf	tosl,c
  6127  001C26  51E0               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  6128  001C28  6EFE               	movwf	tosh,c
  6129  001C2A  6AFF               	clrf	tosu,c
  6130  001C2C  50FA               	movf	pclath,w,c
  6131  001C2E  0012               	return		;indir
  6132  001C30                     __end_of_TMR2_CallBack:
  6133                           	opt stack 0
  6134                           tosu	equ	0xFFF
  6135                           tosh	equ	0xFFE
  6136                           tosl	equ	0xFFD
  6137                           pclatu	equ	0xFFB
  6138                           pclath	equ	0xFFA
  6139                           tblptru	equ	0xFF8
  6140                           tblptrh	equ	0xFF7
  6141                           tblptrl	equ	0xFF6
  6142                           tablat	equ	0xFF5
  6143                           prodh	equ	0xFF4
  6144                           prodl	equ	0xFF3
  6145                           intcon	equ	0xFF2
  6146                           postinc0	equ	0xFEE
  6147                           fsr0h	equ	0xFEA
  6148                           fsr0l	equ	0xFE9
  6149                           wreg	equ	0xFE8
  6150                           postdec1	equ	0xFE5
  6151                           fsr1h	equ	0xFE2
  6152                           fsr1l	equ	0xFE1
  6153                           indf2	equ	0xFDF
  6154                           postinc2	equ	0xFDE
  6155                           postdec2	equ	0xFDD
  6156                           fsr2h	equ	0xFDA
  6157                           fsr2l	equ	0xFD9
  6158                           status	equ	0xFD8
  6159                           
  6160 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  6161 ;; Defined at:
  6162 ;;		line 193 in file "mcc_generated_files/tmr2.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;		None
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;		None
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		wreg, status,2, status,0, cstack
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6180 ;;Total ram usage:        0 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    2
  6183 ;; This function calls:
  6184 ;;		_app_TMR1_DMX_TX_ISR
  6185 ;; This function is called by:
  6186 ;;		_TMR2_Initialize
  6187 ;;		_TMR2_CallBack
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           	psect	text46
  6192  001D52                     __ptext46:
  6193                           	opt stack 0
  6194  001D52                     _TMR2_DefaultInterruptHandler:
  6195                           	opt stack 19
  6196                           
  6197                           ;tmr2.c: 196: app_TMR1_DMX_TX_ISR();
  6198                           
  6199                           ;incstack = 0
  6200  001D52  EC8D  F00C         	call	_app_TMR1_DMX_TX_ISR	;wreg free
  6201  001D56  0012               	return		;funcret
  6202  001D58                     __end_of_TMR2_DefaultInterruptHandler:
  6203                           	opt stack 0
  6204                           tosu	equ	0xFFF
  6205                           tosh	equ	0xFFE
  6206                           tosl	equ	0xFFD
  6207                           pclatu	equ	0xFFB
  6208                           pclath	equ	0xFFA
  6209                           tblptru	equ	0xFF8
  6210                           tblptrh	equ	0xFF7
  6211                           tblptrl	equ	0xFF6
  6212                           tablat	equ	0xFF5
  6213                           prodh	equ	0xFF4
  6214                           prodl	equ	0xFF3
  6215                           intcon	equ	0xFF2
  6216                           postinc0	equ	0xFEE
  6217                           fsr0h	equ	0xFEA
  6218                           fsr0l	equ	0xFE9
  6219                           wreg	equ	0xFE8
  6220                           postdec1	equ	0xFE5
  6221                           fsr1h	equ	0xFE2
  6222                           fsr1l	equ	0xFE1
  6223                           indf2	equ	0xFDF
  6224                           postinc2	equ	0xFDE
  6225                           postdec2	equ	0xFDD
  6226                           fsr2h	equ	0xFDA
  6227                           fsr2l	equ	0xFD9
  6228                           status	equ	0xFD8
  6229                           
  6230 ;; *************** function _app_TMR1_DMX_TX_ISR *****************
  6231 ;; Defined at:
  6232 ;;		line 66 in file "app/app_DMX_TX.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;		None
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;		None
  6237 ;; Return value:  Size  Location     Type
  6238 ;;                  1    wreg      void 
  6239 ;; Registers used:
  6240 ;;		wreg, status,2, status,0, cstack
  6241 ;; Tracked objects:
  6242 ;;		On entry : 0/0
  6243 ;;		On exit  : 0/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6250 ;;Total ram usage:        0 bytes
  6251 ;; Hardware stack levels used:    1
  6252 ;; Hardware stack levels required when called:    1
  6253 ;; This function calls:
  6254 ;;		_app_DMX_TX_DisableTXPort
  6255 ;;		_app_DMX_TX_EnableTXPort
  6256 ;; This function is called by:
  6257 ;;		_TMR2_DefaultInterruptHandler
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text47
  6262  00191A                     __ptext47:
  6263                           	opt stack 0
  6264  00191A                     _app_TMR1_DMX_TX_ISR:
  6265                           	opt stack 19
  6266                           
  6267                           ;app_DMX_TX.c: 68: switch(rub_BreakState)
  6268                           
  6269                           ;incstack = 0
  6270  00191A  D018               	goto	i2l3345
  6271  00191C                     i2l3327:
  6272                           
  6273                           ;app_DMX_TX.c: 71: {
  6274                           ;app_DMX_TX.c: 72: T2TMR = (0x00u);
  6275  00191C  0E00               	movlw	0
  6276  00191E  6EBB               	movwf	4027,c	;volatile
  6277                           
  6278                           ;app_DMX_TX.c: 73: app_DMX_TX_DisableTXPort();
  6279  001920  EC14  F00D         	call	_app_DMX_TX_DisableTXPort	;wreg free
  6280                           
  6281                           ;app_DMX_TX.c: 74: rub_BreakState = BREAK_STATE;
  6282  001924  0E01               	movlw	1
  6283  001926  6E25               	movwf	_rub_BreakState,c
  6284                           
  6285                           ;app_DMX_TX.c: 75: }break;
  6286  001928  0012               	return	
  6287  00192A                     i2l3333:
  6288                           
  6289                           ;app_DMX_TX.c: 77: {
  6290                           ;app_DMX_TX.c: 79: T2TMR = (0xFAu);
  6291  00192A  0EFA               	movlw	250
  6292  00192C  6EBB               	movwf	4027,c	;volatile
  6293                           
  6294                           ;app_DMX_TX.c: 80: app_DMX_TX_EnableTXPort();
  6295  00192E  ECF5  F00C         	call	_app_DMX_TX_EnableTXPort	;wreg free
  6296                           
  6297                           ;app_DMX_TX.c: 81: rub_BreakState = AFTER_BREAK_STATE;
  6298  001932  0E02               	movlw	2
  6299  001934  6E25               	movwf	_rub_BreakState,c
  6300                           
  6301                           ;app_DMX_TX.c: 82: }break;
  6302  001936  0012               	return	
  6303  001938                     i2l296:
  6304                           
  6305                           ;app_DMX_TX.c: 84: {
  6306                           ;app_DMX_TX.c: 86: TMR2IE = ((T_BOOLEAN)0u);
  6307  001938  010E               	movlb	14	; () banked
  6308  00193A  93C6               	bcf	198,1,b	;volatile
  6309                           
  6310                           ;app_DMX_TX.c: 87: TX1IE = ((T_BOOLEAN)1u);
  6311  00193C  010E               	movlb	14	; () banked
  6312  00193E  89C5               	bsf	197,4,b	;volatile
  6313                           
  6314                           ; BSR set to: 14
  6315                           ;app_DMX_TX.c: 88: rub_BreakState = BEFORE_BREAK_SATE;
  6316  001940  0E00               	movlw	0
  6317  001942  6E25               	movwf	_rub_BreakState,c
  6318                           
  6319                           ;app_DMX_TX.c: 89: }break;
  6320  001944  0012               	return	
  6321  001946                     i2l3341:
  6322                           
  6323                           ;app_DMX_TX.c: 91: {
  6324                           ;app_DMX_TX.c: 92: rub_BreakState = BEFORE_BREAK_SATE;
  6325  001946  0E00               	movlw	0
  6326  001948  6E25               	movwf	_rub_BreakState,c
  6327                           
  6328                           ;app_DMX_TX.c: 94: }
  6329                           
  6330                           ;app_DMX_TX.c: 93: }break;
  6331  00194A  0012               	return	
  6332  00194C                     i2l3345:
  6333  00194C  5025               	movf	_rub_BreakState,w,c
  6334                           
  6335                           ; Switch size 1, requested type "space"
  6336                           ; Number of cases is 3, Range of values is 0 to 2
  6337                           ; switch strategies available:
  6338                           ; Name         Instructions Cycles
  6339                           ; simple_byte           10     6 (average)
  6340                           ;	Chosen strategy is simple_byte
  6341  00194E  0A00               	xorlw	0	; case 0
  6342  001950  B4D8               	btfsc	status,2,c
  6343  001952  D7E4               	goto	i2l3327
  6344  001954  0A01               	xorlw	1	; case 1
  6345  001956  B4D8               	btfsc	status,2,c
  6346  001958  D7E8               	goto	i2l3333
  6347  00195A  0A03               	xorlw	3	; case 2
  6348  00195C  B4D8               	btfsc	status,2,c
  6349  00195E  D7EC               	goto	i2l296
  6350  001960  D7F2               	goto	i2l3341
  6351  001962                     __end_of_app_TMR1_DMX_TX_ISR:
  6352                           	opt stack 0
  6353                           tosu	equ	0xFFF
  6354                           tosh	equ	0xFFE
  6355                           tosl	equ	0xFFD
  6356                           pclatu	equ	0xFFB
  6357                           pclath	equ	0xFFA
  6358                           tblptru	equ	0xFF8
  6359                           tblptrh	equ	0xFF7
  6360                           tblptrl	equ	0xFF6
  6361                           tablat	equ	0xFF5
  6362                           prodh	equ	0xFF4
  6363                           prodl	equ	0xFF3
  6364                           intcon	equ	0xFF2
  6365                           postinc0	equ	0xFEE
  6366                           fsr0h	equ	0xFEA
  6367                           fsr0l	equ	0xFE9
  6368                           wreg	equ	0xFE8
  6369                           postdec1	equ	0xFE5
  6370                           fsr1h	equ	0xFE2
  6371                           fsr1l	equ	0xFE1
  6372                           indf2	equ	0xFDF
  6373                           postinc2	equ	0xFDE
  6374                           postdec2	equ	0xFDD
  6375                           fsr2h	equ	0xFDA
  6376                           fsr2l	equ	0xFD9
  6377                           status	equ	0xFD8
  6378                           
  6379 ;; *************** function _app_DMX_TX_EnableTXPort *****************
  6380 ;; Defined at:
  6381 ;;		line 133 in file "app/app_DMX_TX.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;		None
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  state           1    0[COMRAM] unsigned char 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  1    wreg      void 
  6388 ;; Registers used:
  6389 ;;		wreg, status,2
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6399 ;;Total ram usage:        1 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; This function calls:
  6402 ;;		Nothing
  6403 ;; This function is called by:
  6404 ;;		_app_TMR1_DMX_TX_ISR
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408                           	psect	text48
  6409  0019EA                     __ptext48:
  6410                           	opt stack 0
  6411  0019EA                     _app_DMX_TX_EnableTXPort:
  6412                           	opt stack 19
  6413                           
  6414                           ;app_DMX_TX.c: 135: T_UBYTE state = GIE;
  6415                           
  6416                           ;incstack = 0
  6417  0019EA  0E00               	movlw	0
  6418  0019EC  BEF2               	btfsc	intcon,7,c	;volatile
  6419  0019EE  0E01               	movlw	1
  6420  0019F0  6E34               	movwf	app_DMX_TX_EnableTXPort@state,c
  6421                           
  6422                           ;app_DMX_TX.c: 136: GIE = 0;
  6423  0019F2  9EF2               	bcf	intcon,7,c	;volatile
  6424                           
  6425                           ;app_DMX_TX.c: 137: PPSLOCK = 0x55;
  6426  0019F4  0E55               	movlw	85
  6427  0019F6  010E               	movlb	14	; () banked
  6428  0019F8  6FA0               	movwf	160,b	;volatile
  6429                           
  6430                           ;app_DMX_TX.c: 138: PPSLOCK = 0xAA;
  6431  0019FA  0EAA               	movlw	170
  6432  0019FC  010E               	movlb	14	; () banked
  6433  0019FE  6FA0               	movwf	160,b	;volatile
  6434                           
  6435                           ; BSR set to: 14
  6436                           ;app_DMX_TX.c: 139: PPSLOCKbits.PPSLOCKED = 0x00;
  6437  001A00  010E               	movlb	14	; () banked
  6438  001A02  91A0               	bcf	160,0,b	;volatile
  6439                           
  6440                           ;app_DMX_TX.c: 141: RB0PPS = 0x09;
  6441  001A04  0E09               	movlw	9
  6442  001A06  010E               	movlb	14	; () banked
  6443  001A08  6FEF               	movwf	239,b	;volatile
  6444                           
  6445                           ;app_DMX_TX.c: 143: PPSLOCK = 0x55;
  6446  001A0A  0E55               	movlw	85
  6447  001A0C  010E               	movlb	14	; () banked
  6448  001A0E  6FA0               	movwf	160,b	;volatile
  6449                           
  6450                           ;app_DMX_TX.c: 144: PPSLOCK = 0xAA;
  6451  001A10  0EAA               	movlw	170
  6452  001A12  010E               	movlb	14	; () banked
  6453  001A14  6FA0               	movwf	160,b	;volatile
  6454                           
  6455                           ; BSR set to: 14
  6456                           ;app_DMX_TX.c: 145: PPSLOCKbits.PPSLOCKED = 0x01;
  6457  001A16  010E               	movlb	14	; () banked
  6458  001A18  81A0               	bsf	160,0,b	;volatile
  6459                           
  6460                           ; BSR set to: 14
  6461                           ;app_DMX_TX.c: 147: GIE = state;
  6462  001A1A  A034               	btfss	app_DMX_TX_EnableTXPort@state,0,c
  6463  001A1C  D002               	goto	i2u184_40
  6464  001A1E  8EF2               	bsf	intcon,7,c	;volatile
  6465  001A20  D001               	goto	i2l3213
  6466  001A22                     i2u184_40:
  6467  001A22  9EF2               	bcf	intcon,7,c	;volatile
  6468  001A24                     i2l3213:
  6469                           
  6470                           ;app_DMX_TX.c: 148: LATB0 = ((T_BOOLEAN)0u);
  6471  001A24  9084               	bcf	3972,0,c	;volatile
  6472  001A26  0012               	return	
  6473  001A28                     __end_of_app_DMX_TX_EnableTXPort:
  6474                           	opt stack 0
  6475                           tosu	equ	0xFFF
  6476                           tosh	equ	0xFFE
  6477                           tosl	equ	0xFFD
  6478                           pclatu	equ	0xFFB
  6479                           pclath	equ	0xFFA
  6480                           tblptru	equ	0xFF8
  6481                           tblptrh	equ	0xFF7
  6482                           tblptrl	equ	0xFF6
  6483                           tablat	equ	0xFF5
  6484                           prodh	equ	0xFF4
  6485                           prodl	equ	0xFF3
  6486                           intcon	equ	0xFF2
  6487                           postinc0	equ	0xFEE
  6488                           fsr0h	equ	0xFEA
  6489                           fsr0l	equ	0xFE9
  6490                           wreg	equ	0xFE8
  6491                           postdec1	equ	0xFE5
  6492                           fsr1h	equ	0xFE2
  6493                           fsr1l	equ	0xFE1
  6494                           indf2	equ	0xFDF
  6495                           postinc2	equ	0xFDE
  6496                           postdec2	equ	0xFDD
  6497                           fsr2h	equ	0xFDA
  6498                           fsr2l	equ	0xFD9
  6499                           status	equ	0xFD8
  6500                           
  6501 ;; *************** function _app_DMX_TX_DisableTXPort *****************
  6502 ;; Defined at:
  6503 ;;		line 114 in file "app/app_DMX_TX.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;		None
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  state           1    0[COMRAM] unsigned char 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1    wreg      void 
  6510 ;; Registers used:
  6511 ;;		wreg, status,2
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6521 ;;Total ram usage:        1 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_app_TMR1_DMX_TX_ISR
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text49
  6531  001A28                     __ptext49:
  6532                           	opt stack 0
  6533  001A28                     _app_DMX_TX_DisableTXPort:
  6534                           	opt stack 19
  6535                           
  6536                           ;app_DMX_TX.c: 116: T_UBYTE state = GIE;
  6537                           
  6538                           ;incstack = 0
  6539  001A28  0E00               	movlw	0
  6540  001A2A  BEF2               	btfsc	intcon,7,c	;volatile
  6541  001A2C  0E01               	movlw	1
  6542  001A2E  6E34               	movwf	app_DMX_TX_DisableTXPort@state,c
  6543                           
  6544                           ;app_DMX_TX.c: 117: GIE = 0;
  6545  001A30  9EF2               	bcf	intcon,7,c	;volatile
  6546                           
  6547                           ;app_DMX_TX.c: 118: PPSLOCK = 0x55;
  6548  001A32  0E55               	movlw	85
  6549  001A34  010E               	movlb	14	; () banked
  6550  001A36  6FA0               	movwf	160,b	;volatile
  6551                           
  6552                           ;app_DMX_TX.c: 119: PPSLOCK = 0xAA;
  6553  001A38  0EAA               	movlw	170
  6554  001A3A  010E               	movlb	14	; () banked
  6555  001A3C  6FA0               	movwf	160,b	;volatile
  6556                           
  6557                           ; BSR set to: 14
  6558                           ;app_DMX_TX.c: 120: PPSLOCKbits.PPSLOCKED = 0x00;
  6559  001A3E  010E               	movlb	14	; () banked
  6560  001A40  91A0               	bcf	160,0,b	;volatile
  6561                           
  6562                           ;app_DMX_TX.c: 122: RB0PPS = 0x0;
  6563  001A42  0E00               	movlw	0
  6564  001A44  010E               	movlb	14	; () banked
  6565  001A46  6FEF               	movwf	239,b	;volatile
  6566                           
  6567                           ;app_DMX_TX.c: 124: PPSLOCK = 0x55;
  6568  001A48  0E55               	movlw	85
  6569  001A4A  010E               	movlb	14	; () banked
  6570  001A4C  6FA0               	movwf	160,b	;volatile
  6571                           
  6572                           ;app_DMX_TX.c: 125: PPSLOCK = 0xAA;
  6573  001A4E  0EAA               	movlw	170
  6574  001A50  010E               	movlb	14	; () banked
  6575  001A52  6FA0               	movwf	160,b	;volatile
  6576                           
  6577                           ; BSR set to: 14
  6578                           ;app_DMX_TX.c: 126: PPSLOCKbits.PPSLOCKED = 0x01;
  6579  001A54  010E               	movlb	14	; () banked
  6580  001A56  81A0               	bsf	160,0,b	;volatile
  6581                           
  6582                           ; BSR set to: 14
  6583                           ;app_DMX_TX.c: 128: GIE = state;
  6584  001A58  A034               	btfss	app_DMX_TX_DisableTXPort@state,0,c
  6585  001A5A  D002               	goto	i2u182_40
  6586  001A5C  8EF2               	bsf	intcon,7,c	;volatile
  6587  001A5E  D001               	goto	i2l3199
  6588  001A60                     i2u182_40:
  6589  001A60  9EF2               	bcf	intcon,7,c	;volatile
  6590  001A62                     i2l3199:
  6591                           
  6592                           ;app_DMX_TX.c: 129: LATB0 = ((T_BOOLEAN)0u);
  6593  001A62  9084               	bcf	3972,0,c	;volatile
  6594  001A64  0012               	return	
  6595  001A66                     __end_of_app_DMX_TX_DisableTXPort:
  6596                           	opt stack 0
  6597                           tosu	equ	0xFFF
  6598                           tosh	equ	0xFFE
  6599                           tosl	equ	0xFFD
  6600                           pclatu	equ	0xFFB
  6601                           pclath	equ	0xFFA
  6602                           tblptru	equ	0xFF8
  6603                           tblptrh	equ	0xFF7
  6604                           tblptrl	equ	0xFF6
  6605                           tablat	equ	0xFF5
  6606                           prodh	equ	0xFF4
  6607                           prodl	equ	0xFF3
  6608                           intcon	equ	0xFF2
  6609                           postinc0	equ	0xFEE
  6610                           fsr0h	equ	0xFEA
  6611                           fsr0l	equ	0xFE9
  6612                           wreg	equ	0xFE8
  6613                           postdec1	equ	0xFE5
  6614                           fsr1h	equ	0xFE2
  6615                           fsr1l	equ	0xFE1
  6616                           indf2	equ	0xFDF
  6617                           postinc2	equ	0xFDE
  6618                           postdec2	equ	0xFDD
  6619                           fsr2h	equ	0xFDA
  6620                           fsr2l	equ	0xFD9
  6621                           status	equ	0xFD8
  6622                           
  6623 ;; *************** function _TMR1_ISR *****************
  6624 ;; Defined at:
  6625 ;;		line 162 in file "mcc_generated_files/tmr1.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6643 ;;Total ram usage:        0 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:    2
  6646 ;; This function calls:
  6647 ;;		_TMR1_CallBack
  6648 ;; This function is called by:
  6649 ;;		_INTERRUPT_InterruptManagerHigh
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text50
  6654  001CFC                     __ptext50:
  6655                           	opt stack 0
  6656  001CFC                     _TMR1_ISR:
  6657                           	opt stack 21
  6658                           
  6659                           ;tmr1.c: 166: PIR4bits.TMR1IF = 0;
  6660                           
  6661                           ;incstack = 0
  6662  001CFC  010E               	movlb	14	; () banked
  6663  001CFE  91CE               	bcf	206,0,b	;volatile
  6664                           
  6665                           ; BSR set to: 14
  6666                           ;tmr1.c: 168: TMR1H = (timer1ReloadVal >> 8);
  6667  001D00  504F               	movf	_timer1ReloadVal+1,w,c	;volatile
  6668  001D02  6ECE               	movwf	4046,c	;volatile
  6669                           
  6670                           ; BSR set to: 14
  6671                           ;tmr1.c: 169: TMR1L = timer1ReloadVal;
  6672  001D04  C04E  FFCD         	movff	_timer1ReloadVal,4045	;volatile
  6673                           
  6674                           ; BSR set to: 14
  6675                           ;tmr1.c: 173: TMR1_CallBack();
  6676  001D08  EC18  F00E         	call	_TMR1_CallBack	;wreg free
  6677  001D0C  0012               	return		;funcret
  6678  001D0E                     __end_of_TMR1_ISR:
  6679                           	opt stack 0
  6680                           tosu	equ	0xFFF
  6681                           tosh	equ	0xFFE
  6682                           tosl	equ	0xFFD
  6683                           pclatu	equ	0xFFB
  6684                           pclath	equ	0xFFA
  6685                           tblptru	equ	0xFF8
  6686                           tblptrh	equ	0xFF7
  6687                           tblptrl	equ	0xFF6
  6688                           tablat	equ	0xFF5
  6689                           prodh	equ	0xFF4
  6690                           prodl	equ	0xFF3
  6691                           intcon	equ	0xFF2
  6692                           postinc0	equ	0xFEE
  6693                           fsr0h	equ	0xFEA
  6694                           fsr0l	equ	0xFE9
  6695                           wreg	equ	0xFE8
  6696                           postdec1	equ	0xFE5
  6697                           fsr1h	equ	0xFE2
  6698                           fsr1l	equ	0xFE1
  6699                           indf2	equ	0xFDF
  6700                           postinc2	equ	0xFDE
  6701                           postdec2	equ	0xFDD
  6702                           fsr2h	equ	0xFDA
  6703                           fsr2l	equ	0xFD9
  6704                           status	equ	0xFD8
  6705                           
  6706 ;; *************** function _TMR1_CallBack *****************
  6707 ;; Defined at:
  6708 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;		None
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;		None
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  1    wreg      void 
  6715 ;; Registers used:
  6716 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6726 ;;Total ram usage:        0 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:    1
  6729 ;; This function calls:
  6730 ;;		Absolute function
  6731 ;;		_TMR1_DefaultInterruptHandler
  6732 ;; This function is called by:
  6733 ;;		_TMR1_ISR
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text51
  6738  001C30                     __ptext51:
  6739                           	opt stack 0
  6740  001C30                     _TMR1_CallBack:
  6741                           	opt stack 21
  6742                           
  6743                           ;tmr1.c: 179: if(TMR1_InterruptHandler)
  6744                           
  6745                           ;incstack = 0
  6746  001C30  0100               	movlb	0	; () banked
  6747  001C32  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
  6748  001C34  0100               	movlb	0	; () banked
  6749  001C36  11DE               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  6750  001C38  B4D8               	btfsc	status,2,c
  6751  001C3A  0012               	return	
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;tmr1.c: 180: {
  6755                           ;tmr1.c: 181: TMR1_InterruptHandler();
  6756  001C3C  D801               	call	i2u244_48
  6757  001C3E  0012               	return	
  6758  001C40                     i2u244_48:
  6759  001C40  0005               	push	
  6760  001C42  6EFA               	movwf	pclath,c
  6761  001C44  0100               	movlb	0	; () banked
  6762  001C46  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
  6763  001C48  6EFD               	movwf	tosl,c
  6764  001C4A  51DE               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  6765  001C4C  6EFE               	movwf	tosh,c
  6766  001C4E  6AFF               	clrf	tosu,c
  6767  001C50  50FA               	movf	pclath,w,c
  6768  001C52  0012               	return		;indir
  6769  001C54                     __end_of_TMR1_CallBack:
  6770                           	opt stack 0
  6771                           tosu	equ	0xFFF
  6772                           tosh	equ	0xFFE
  6773                           tosl	equ	0xFFD
  6774                           pclatu	equ	0xFFB
  6775                           pclath	equ	0xFFA
  6776                           tblptru	equ	0xFF8
  6777                           tblptrh	equ	0xFF7
  6778                           tblptrl	equ	0xFF6
  6779                           tablat	equ	0xFF5
  6780                           prodh	equ	0xFF4
  6781                           prodl	equ	0xFF3
  6782                           intcon	equ	0xFF2
  6783                           postinc0	equ	0xFEE
  6784                           fsr0h	equ	0xFEA
  6785                           fsr0l	equ	0xFE9
  6786                           wreg	equ	0xFE8
  6787                           postdec1	equ	0xFE5
  6788                           fsr1h	equ	0xFE2
  6789                           fsr1l	equ	0xFE1
  6790                           indf2	equ	0xFDF
  6791                           postinc2	equ	0xFDE
  6792                           postdec2	equ	0xFDD
  6793                           fsr2h	equ	0xFDA
  6794                           fsr2l	equ	0xFD9
  6795                           status	equ	0xFD8
  6796                           
  6797 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  6798 ;; Defined at:
  6799 ;;		line 189 in file "mcc_generated_files/tmr1.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;		None
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;		None
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  1    wreg      void 
  6806 ;; Registers used:
  6807 ;;		wreg, status,2
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6817 ;;Total ram usage:        0 bytes
  6818 ;; Hardware stack levels used:    1
  6819 ;; This function calls:
  6820 ;;		Nothing
  6821 ;; This function is called by:
  6822 ;;		_TMR1_Initialize
  6823 ;;		_TMR1_CallBack
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           	psect	text52
  6828  001D58                     __ptext52:
  6829                           	opt stack 0
  6830  001D58                     _TMR1_DefaultInterruptHandler:
  6831                           	opt stack 21
  6832                           
  6833                           ;tmr1.c: 192: sch_alarm = 0x01;
  6834                           
  6835                           ;incstack = 0
  6836  001D58  0E01               	movlw	1
  6837  001D5A  6E33               	movwf	_sch_alarm,c
  6838  001D5C  0012               	return		;funcret
  6839  001D5E                     __end_of_TMR1_DefaultInterruptHandler:
  6840                           	opt stack 0
  6841                           tosu	equ	0xFFF
  6842                           tosh	equ	0xFFE
  6843                           tosl	equ	0xFFD
  6844                           pclatu	equ	0xFFB
  6845                           pclath	equ	0xFFA
  6846                           tblptru	equ	0xFF8
  6847                           tblptrh	equ	0xFF7
  6848                           tblptrl	equ	0xFF6
  6849                           tablat	equ	0xFF5
  6850                           prodh	equ	0xFF4
  6851                           prodl	equ	0xFF3
  6852                           intcon	equ	0xFF2
  6853                           postinc0	equ	0xFEE
  6854                           fsr0h	equ	0xFEA
  6855                           fsr0l	equ	0xFE9
  6856                           wreg	equ	0xFE8
  6857                           postdec1	equ	0xFE5
  6858                           fsr1h	equ	0xFE2
  6859                           fsr1l	equ	0xFE1
  6860                           indf2	equ	0xFDF
  6861                           postinc2	equ	0xFDE
  6862                           postdec2	equ	0xFDD
  6863                           fsr2h	equ	0xFDA
  6864                           fsr2l	equ	0xFD9
  6865                           status	equ	0xFD8
  6866                           
  6867 ;; *************** function _EUSART2_Receive_ISR *****************
  6868 ;; Defined at:
  6869 ;;		line 174 in file "mcc_generated_files/eusart2.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;		None
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;		None
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  1    wreg      void 
  6876 ;; Registers used:
  6877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6887 ;;Total ram usage:        0 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; This function calls:
  6890 ;;		Nothing
  6891 ;; This function is called by:
  6892 ;;		_INTERRUPT_InterruptManagerHigh
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           	psect	text53
  6897  001B42                     __ptext53:
  6898                           	opt stack 0
  6899  001B42                     _EUSART2_Receive_ISR:
  6900                           	opt stack 23
  6901                           
  6902                           ;eusart2.c: 177: if(1 == RC2STAbits.OERR)
  6903                           
  6904                           ;incstack = 0
  6905  001B42  010E               	movlb	14	; () banked
  6906  001B44  A39D               	btfss	157,1,b	;volatile
  6907  001B46  D004               	goto	i2l3681
  6908                           
  6909                           ; BSR set to: 14
  6910                           ;eusart2.c: 178: {
  6911                           ;eusart2.c: 181: RC2STAbits.CREN = 0;
  6912  001B48  010E               	movlb	14	; () banked
  6913  001B4A  999D               	bcf	157,4,b	;volatile
  6914                           
  6915                           ;eusart2.c: 182: RC2STAbits.CREN = 1;
  6916  001B4C  010E               	movlb	14	; () banked
  6917  001B4E  899D               	bsf	157,4,b	;volatile
  6918  001B50                     i2l3681:
  6919                           
  6920                           ; BSR set to: 14
  6921                           ;eusart2.c: 183: }
  6922                           ;eusart2.c: 186: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  6923  001B50  501A               	movf	_eusart2RxHead,w,c
  6924  001B52  0D01               	mullw	1
  6925  001B54  0E70               	movlw	low _eusart2RxBuffer
  6926  001B56  24F3               	addwf	prodl,w,c
  6927  001B58  6ED9               	movwf	fsr2l,c
  6928  001B5A  0E00               	movlw	high _eusart2RxBuffer
  6929  001B5C  20F4               	addwfc	prodh,w,c
  6930  001B5E  6EDA               	movwf	fsr2h,c
  6931  001B60  CE99 FFDF          	movff	3737,indf2	;volatile
  6932                           
  6933                           ; BSR set to: 14
  6934  001B64  2A1A               	incf	_eusart2RxHead,f,c
  6935                           
  6936                           ; BSR set to: 14
  6937                           ;eusart2.c: 187: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  6938  001B66  0E07               	movlw	7
  6939  001B68  641A               	cpfsgt	_eusart2RxHead,c
  6940  001B6A  D002               	goto	i2l3689
  6941                           
  6942                           ; BSR set to: 14
  6943                           ;eusart2.c: 188: {
  6944                           ;eusart2.c: 189: eusart2RxHead = 0;
  6945  001B6C  0E00               	movlw	0
  6946  001B6E  6E1A               	movwf	_eusart2RxHead,c
  6947  001B70                     i2l3689:
  6948                           
  6949                           ; BSR set to: 14
  6950                           ;eusart2.c: 190: }
  6951                           ;eusart2.c: 191: eusart2RxCount++;
  6952  001B70  2A19               	incf	_eusart2RxCount,f,c	;volatile
  6953                           
  6954                           ; BSR set to: 14
  6955  001B72  0012               	return		;funcret
  6956  001B74                     __end_of_EUSART2_Receive_ISR:
  6957                           	opt stack 0
  6958                           tosu	equ	0xFFF
  6959                           tosh	equ	0xFFE
  6960                           tosl	equ	0xFFD
  6961                           pclatu	equ	0xFFB
  6962                           pclath	equ	0xFFA
  6963                           tblptru	equ	0xFF8
  6964                           tblptrh	equ	0xFF7
  6965                           tblptrl	equ	0xFF6
  6966                           tablat	equ	0xFF5
  6967                           prodh	equ	0xFF4
  6968                           prodl	equ	0xFF3
  6969                           intcon	equ	0xFF2
  6970                           postinc0	equ	0xFEE
  6971                           fsr0h	equ	0xFEA
  6972                           fsr0l	equ	0xFE9
  6973                           wreg	equ	0xFE8
  6974                           postdec1	equ	0xFE5
  6975                           fsr1h	equ	0xFE2
  6976                           fsr1l	equ	0xFE1
  6977                           indf2	equ	0xFDF
  6978                           postinc2	equ	0xFDE
  6979                           postdec2	equ	0xFDD
  6980                           fsr2h	equ	0xFDA
  6981                           fsr2l	equ	0xFD9
  6982                           status	equ	0xFD8
  6983                           
  6984 ;; *************** function _EUSART1_Transmit_ISR *****************
  6985 ;; Defined at:
  6986 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;		None
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7004 ;;Total ram usage:        0 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:    1
  7007 ;; This function calls:
  7008 ;;		_app_DMX_ISR
  7009 ;; This function is called by:
  7010 ;;		_INTERRUPT_InterruptManagerHigh
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text54
  7015  001D5E                     __ptext54:
  7016                           	opt stack 0
  7017  001D5E                     _EUSART1_Transmit_ISR:
  7018                           	opt stack 22
  7019                           
  7020                           ;eusart1.c: 160: app_DMX_ISR();
  7021                           
  7022                           ; BSR set to: 14
  7023                           ;incstack = 0
  7024  001D5E  EC4D  F00A         	call	_app_DMX_ISR	;wreg free
  7025  001D62  0012               	return		;funcret
  7026  001D64                     __end_of_EUSART1_Transmit_ISR:
  7027                           	opt stack 0
  7028                           tosu	equ	0xFFF
  7029                           tosh	equ	0xFFE
  7030                           tosl	equ	0xFFD
  7031                           pclatu	equ	0xFFB
  7032                           pclath	equ	0xFFA
  7033                           tblptru	equ	0xFF8
  7034                           tblptrh	equ	0xFF7
  7035                           tblptrl	equ	0xFF6
  7036                           tablat	equ	0xFF5
  7037                           prodh	equ	0xFF4
  7038                           prodl	equ	0xFF3
  7039                           intcon	equ	0xFF2
  7040                           postinc0	equ	0xFEE
  7041                           fsr0h	equ	0xFEA
  7042                           fsr0l	equ	0xFE9
  7043                           wreg	equ	0xFE8
  7044                           postdec1	equ	0xFE5
  7045                           fsr1h	equ	0xFE2
  7046                           fsr1l	equ	0xFE1
  7047                           indf2	equ	0xFDF
  7048                           postinc2	equ	0xFDE
  7049                           postdec2	equ	0xFDD
  7050                           fsr2h	equ	0xFDA
  7051                           fsr2l	equ	0xFD9
  7052                           status	equ	0xFD8
  7053                           
  7054 ;; *************** function _app_DMX_ISR *****************
  7055 ;; Defined at:
  7056 ;;		line 16 in file "app/app_DMX_TX.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7074 ;;Total ram usage:        0 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; This function calls:
  7077 ;;		Nothing
  7078 ;; This function is called by:
  7079 ;;		_EUSART1_Transmit_ISR
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083                           	psect	text55
  7084  00149A                     __ptext55:
  7085                           	opt stack 0
  7086  00149A                     _app_DMX_ISR:
  7087                           	opt stack 22
  7088                           
  7089                           ;app_DMX_TX.c: 18: switch(rub_TxState)
  7090                           
  7091                           ;incstack = 0
  7092  00149A  D04D               	goto	i2l3563
  7093  00149C                     i2l3537:
  7094                           
  7095                           ;app_DMX_TX.c: 21: {
  7096                           ;app_DMX_TX.c: 22: TX1REG = 0x00;
  7097  00149C  0E00               	movlw	0
  7098  00149E  6E9A               	movwf	3994,c	;volatile
  7099                           
  7100                           ;app_DMX_TX.c: 23: rub_TxState = TX_DMX_DATA;
  7101  0014A0  0E01               	movlw	1
  7102  0014A2  6E31               	movwf	_rub_TxState,c
  7103                           
  7104                           ;app_DMX_TX.c: 24: ruw_TxDMXDataCounter = 0x00u;
  7105  0014A4  0E00               	movlw	0
  7106  0014A6  0100               	movlb	0	; () banked
  7107  0014A8  6F9F               	movwf	(_ruw_TxDMXDataCounter+1)& (0+255),b
  7108  0014AA  0E00               	movlw	0
  7109  0014AC  6F9E               	movwf	_ruw_TxDMXDataCounter& (0+255),b
  7110                           
  7111                           ;app_DMX_TX.c: 25: ruw_DMXColorCounter = 0x00u;
  7112  0014AE  0E00               	movlw	0
  7113  0014B0  0100               	movlb	0	; () banked
  7114  0014B2  6F9B               	movwf	(_ruw_DMXColorCounter+1)& (0+255),b
  7115  0014B4  0E00               	movlw	0
  7116  0014B6  6F9A               	movwf	_ruw_DMXColorCounter& (0+255),b
  7117                           
  7118                           ;app_DMX_TX.c: 26: }break;
  7119  0014B8  0012               	return	
  7120  0014BA                     i2l3539:
  7121                           
  7122                           ;app_DMX_TX.c: 28: {
  7123                           ;app_DMX_TX.c: 29: if(ruw_TxDMXDataCounter < 512u)
  7124  0014BA  0E02               	movlw	2
  7125  0014BC  0100               	movlb	0	; () banked
  7126  0014BE  5D9F               	subwf	(_ruw_TxDMXDataCounter+1)& (0+255),w,b
  7127  0014C0  B0D8               	btfsc	status,0,c
  7128  0014C2  D01E               	goto	i2l3551
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;app_DMX_TX.c: 30: {
  7132                           ;app_DMX_TX.c: 31: TX1REG = rub_DMX_DATA[ruw_DMXColorCounter];
  7133  0014C4  0EE3               	movlw	low _rub_DMX_DATA
  7134  0014C6  0100               	movlb	0	; () banked
  7135  0014C8  259A               	addwf	_ruw_DMXColorCounter& (0+255),w,b
  7136  0014CA  6ED9               	movwf	fsr2l,c
  7137  0014CC  0E00               	movlw	high _rub_DMX_DATA
  7138  0014CE  0100               	movlb	0	; () banked
  7139  0014D0  219B               	addwfc	(_ruw_DMXColorCounter+1)& (0+255),w,b
  7140  0014D2  6EDA               	movwf	fsr2h,c
  7141  0014D4  50DF               	movf	indf2,w,c
  7142  0014D6  6E9A               	movwf	3994,c	;volatile
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;app_DMX_TX.c: 32: ruw_TxDMXDataCounter++;
  7146  0014D8  0100               	movlb	0	; () banked
  7147  0014DA  4B9E               	infsnz	_ruw_TxDMXDataCounter& (0+255),f,b
  7148  0014DC  2B9F               	incf	(_ruw_TxDMXDataCounter+1)& (0+255),f,b
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;app_DMX_TX.c: 33: if(ruw_DMXColorCounter < (512u - 1))
  7152  0014DE  0100               	movlb	0	; () banked
  7153  0014E0  299A               	incf	_ruw_DMXColorCounter& (0+255),w,b
  7154  0014E2  0E01               	movlw	1
  7155  0014E4  0100               	movlb	0	; () banked
  7156  0014E6  599B               	subwfb	(_ruw_DMXColorCounter+1)& (0+255),w,b
  7157  0014E8  B0D8               	btfsc	status,0,c
  7158  0014EA  D004               	goto	i2l3549
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;app_DMX_TX.c: 34: {
  7162                           ;app_DMX_TX.c: 35: ruw_DMXColorCounter++;
  7163  0014EC  0100               	movlb	0	; () banked
  7164  0014EE  4B9A               	infsnz	_ruw_DMXColorCounter& (0+255),f,b
  7165  0014F0  2B9B               	incf	(_ruw_DMXColorCounter+1)& (0+255),f,b
  7166                           
  7167                           ;app_DMX_TX.c: 36: }
  7168  0014F2  0012               	return	
  7169  0014F4                     i2l3549:
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;app_DMX_TX.c: 37: else
  7173                           ;app_DMX_TX.c: 38: {
  7174                           ;app_DMX_TX.c: 39: ruw_DMXColorCounter = 0x00u;
  7175  0014F4  0E00               	movlw	0
  7176  0014F6  0100               	movlb	0	; () banked
  7177  0014F8  6F9B               	movwf	(_ruw_DMXColorCounter+1)& (0+255),b
  7178  0014FA  0E00               	movlw	0
  7179  0014FC  6F9A               	movwf	_ruw_DMXColorCounter& (0+255),b
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;app_DMX_TX.c: 40: }
  7183                           ;app_DMX_TX.c: 41: }
  7184  0014FE  0012               	return	
  7185  001500                     i2l3551:
  7186                           
  7187                           ; BSR set to: 0
  7188                           ;app_DMX_TX.c: 42: else
  7189                           ;app_DMX_TX.c: 43: {
  7190                           ;app_DMX_TX.c: 44: ruw_TxDMXDataCounter = 0x00u;
  7191  001500  0E00               	movlw	0
  7192  001502  0100               	movlb	0	; () banked
  7193  001504  6F9F               	movwf	(_ruw_TxDMXDataCounter+1)& (0+255),b
  7194  001506  0E00               	movlw	0
  7195  001508  6F9E               	movwf	_ruw_TxDMXDataCounter& (0+255),b
  7196                           
  7197                           ;app_DMX_TX.c: 45: ruw_DMXColorCounter = 0x00u;
  7198  00150A  0E00               	movlw	0
  7199  00150C  0100               	movlb	0	; () banked
  7200  00150E  6F9B               	movwf	(_ruw_DMXColorCounter+1)& (0+255),b
  7201  001510  0E00               	movlw	0
  7202  001512  6F9A               	movwf	_ruw_DMXColorCounter& (0+255),b
  7203                           
  7204                           ;app_DMX_TX.c: 46: rub_TxState = TX_BEFORE_BREAK;
  7205  001514  0E02               	movlw	2
  7206  001516  6E31               	movwf	_rub_TxState,c
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;app_DMX_TX.c: 47: }
  7210                           ;app_DMX_TX.c: 48: }break;
  7211  001518  0012               	return	
  7212  00151A                     i2l3553:
  7213                           
  7214                           ;app_DMX_TX.c: 50: {
  7215                           ;app_DMX_TX.c: 52: rub_TxState = TX_START_DATA;
  7216  00151A  0E00               	movlw	0
  7217  00151C  6E31               	movwf	_rub_TxState,c
  7218                           
  7219                           ;app_DMX_TX.c: 53: PIE3bits.TX1IE = ((T_BOOLEAN)0u);
  7220  00151E  010E               	movlb	14	; () banked
  7221  001520  99C5               	bcf	197,4,b	;volatile
  7222                           
  7223                           ;app_DMX_TX.c: 54: T2TMR = (0x00u);
  7224  001522  0E00               	movlw	0
  7225  001524  6EBB               	movwf	4027,c	;volatile
  7226                           
  7227                           ; BSR set to: 14
  7228                           ;app_DMX_TX.c: 55: PIR4bits.TMR2IF = ((T_BOOLEAN)0u);
  7229  001526  010E               	movlb	14	; () banked
  7230  001528  93CE               	bcf	206,1,b	;volatile
  7231                           
  7232                           ; BSR set to: 14
  7233                           ;app_DMX_TX.c: 56: PIE4bits.TMR2IE = ((T_BOOLEAN)1u);
  7234  00152A  010E               	movlb	14	; () banked
  7235  00152C  83C6               	bsf	198,1,b	;volatile
  7236                           
  7237                           ;app_DMX_TX.c: 57: }break;
  7238  00152E  0012               	return	
  7239  001530                     i2l3561:
  7240                           
  7241                           ;app_DMX_TX.c: 59: {
  7242                           ;app_DMX_TX.c: 60: rub_TxState = TX_START_DATA;
  7243  001530  0E00               	movlw	0
  7244  001532  6E31               	movwf	_rub_TxState,c
  7245                           
  7246                           ;app_DMX_TX.c: 61: }
  7247                           ;app_DMX_TX.c: 62: }
  7248  001534  0012               	return	
  7249  001536                     i2l3563:
  7250  001536  5031               	movf	_rub_TxState,w,c
  7251                           
  7252                           ; Switch size 1, requested type "space"
  7253                           ; Number of cases is 3, Range of values is 0 to 2
  7254                           ; switch strategies available:
  7255                           ; Name         Instructions Cycles
  7256                           ; simple_byte           10     6 (average)
  7257                           ;	Chosen strategy is simple_byte
  7258  001538  0A00               	xorlw	0	; case 0
  7259  00153A  B4D8               	btfsc	status,2,c
  7260  00153C  D7AF               	goto	i2l3537
  7261  00153E  0A01               	xorlw	1	; case 1
  7262  001540  B4D8               	btfsc	status,2,c
  7263  001542  D7BB               	goto	i2l3539
  7264  001544  0A03               	xorlw	3	; case 2
  7265  001546  B4D8               	btfsc	status,2,c
  7266  001548  D7E8               	goto	i2l3553
  7267  00154A  D7F2               	goto	i2l3561
  7268  00154C                     __end_of_app_DMX_ISR:
  7269                           	opt stack 0
  7270                           tosu	equ	0xFFF
  7271                           tosh	equ	0xFFE
  7272                           tosl	equ	0xFFD
  7273                           pclatu	equ	0xFFB
  7274                           pclath	equ	0xFFA
  7275                           tblptru	equ	0xFF8
  7276                           tblptrh	equ	0xFF7
  7277                           tblptrl	equ	0xFF6
  7278                           tablat	equ	0xFF5
  7279                           prodh	equ	0xFF4
  7280                           prodl	equ	0xFF3
  7281                           intcon	equ	0xFF2
  7282                           postinc0	equ	0xFEE
  7283                           fsr0h	equ	0xFEA
  7284                           fsr0l	equ	0xFE9
  7285                           wreg	equ	0xFE8
  7286                           postdec1	equ	0xFE5
  7287                           fsr1h	equ	0xFE2
  7288                           fsr1l	equ	0xFE1
  7289                           indf2	equ	0xFDF
  7290                           postinc2	equ	0xFDE
  7291                           postdec2	equ	0xFDD
  7292                           fsr2h	equ	0xFDA
  7293                           fsr2l	equ	0xFD9
  7294                           status	equ	0xFD8
  7295                           tosu	equ	0xFFF
  7296                           tosh	equ	0xFFE
  7297                           tosl	equ	0xFFD
  7298                           pclatu	equ	0xFFB
  7299                           pclath	equ	0xFFA
  7300                           tblptru	equ	0xFF8
  7301                           tblptrh	equ	0xFF7
  7302                           tblptrl	equ	0xFF6
  7303                           tablat	equ	0xFF5
  7304                           prodh	equ	0xFF4
  7305                           prodl	equ	0xFF3
  7306                           intcon	equ	0xFF2
  7307                           postinc0	equ	0xFEE
  7308                           fsr0h	equ	0xFEA
  7309                           fsr0l	equ	0xFE9
  7310                           wreg	equ	0xFE8
  7311                           postdec1	equ	0xFE5
  7312                           fsr1h	equ	0xFE2
  7313                           fsr1l	equ	0xFE1
  7314                           indf2	equ	0xFDF
  7315                           postinc2	equ	0xFDE
  7316                           postdec2	equ	0xFDD
  7317                           fsr2h	equ	0xFDA
  7318                           fsr2l	equ	0xFD9
  7319                           status	equ	0xFD8
  7320                           
  7321                           	psect	text56
  7322  000000                     __ptext56:
  7323                           	opt stack 0
  7324                           tosu	equ	0xFFF
  7325                           tosh	equ	0xFFE
  7326                           tosl	equ	0xFFD
  7327                           pclatu	equ	0xFFB
  7328                           pclath	equ	0xFFA
  7329                           tblptru	equ	0xFF8
  7330                           tblptrh	equ	0xFF7
  7331                           tblptrl	equ	0xFF6
  7332                           tablat	equ	0xFF5
  7333                           prodh	equ	0xFF4
  7334                           prodl	equ	0xFF3
  7335                           intcon	equ	0xFF2
  7336                           postinc0	equ	0xFEE
  7337                           fsr0h	equ	0xFEA
  7338                           fsr0l	equ	0xFE9
  7339                           wreg	equ	0xFE8
  7340                           postdec1	equ	0xFE5
  7341                           fsr1h	equ	0xFE2
  7342                           fsr1l	equ	0xFE1
  7343                           indf2	equ	0xFDF
  7344                           postinc2	equ	0xFDE
  7345                           postdec2	equ	0xFDD
  7346                           fsr2h	equ	0xFDA
  7347                           fsr2l	equ	0xFD9
  7348                           status	equ	0xFD8
  7349                           
  7350                           	psect	rparam
  7351  0000                     tosu	equ	0xFFF
  7352                           tosh	equ	0xFFE
  7353                           tosl	equ	0xFFD
  7354                           pclatu	equ	0xFFB
  7355                           pclath	equ	0xFFA
  7356                           tblptru	equ	0xFF8
  7357                           tblptrh	equ	0xFF7
  7358                           tblptrl	equ	0xFF6
  7359                           tablat	equ	0xFF5
  7360                           prodh	equ	0xFF4
  7361                           prodl	equ	0xFF3
  7362                           intcon	equ	0xFF2
  7363                           postinc0	equ	0xFEE
  7364                           fsr0h	equ	0xFEA
  7365                           fsr0l	equ	0xFE9
  7366                           wreg	equ	0xFE8
  7367                           postdec1	equ	0xFE5
  7368                           fsr1h	equ	0xFE2
  7369                           fsr1l	equ	0xFE1
  7370                           indf2	equ	0xFDF
  7371                           postinc2	equ	0xFDE
  7372                           postdec2	equ	0xFDD
  7373                           fsr2h	equ	0xFDA
  7374                           fsr2l	equ	0xFD9
  7375                           status	equ	0xFD8
  7376                           
  7377                           	psect	temp
  7378  000050                     btemp:
  7379                           	opt stack 0
  7380  000050                     	ds	1
  7381  0000                     int$flags	set	btemp
  7382                           tosu	equ	0xFFF
  7383                           tosh	equ	0xFFE
  7384                           tosl	equ	0xFFD
  7385                           pclatu	equ	0xFFB
  7386                           pclath	equ	0xFFA
  7387                           tblptru	equ	0xFF8
  7388                           tblptrh	equ	0xFF7
  7389                           tblptrl	equ	0xFF6
  7390                           tablat	equ	0xFF5
  7391                           prodh	equ	0xFF4
  7392                           prodl	equ	0xFF3
  7393                           intcon	equ	0xFF2
  7394                           postinc0	equ	0xFEE
  7395                           fsr0h	equ	0xFEA
  7396                           fsr0l	equ	0xFE9
  7397                           wreg	equ	0xFE8
  7398                           postdec1	equ	0xFE5
  7399                           fsr1h	equ	0xFE2
  7400                           fsr1l	equ	0xFE1
  7401                           indf2	equ	0xFDF
  7402                           postinc2	equ	0xFDE
  7403                           postdec2	equ	0xFDD
  7404                           fsr2h	equ	0xFDA
  7405                           fsr2l	equ	0xFD9
  7406                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    48
    Data        43
    BSS         633
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      79
    BANK0           160     15     131
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0

Pointer List with Targets:

    scheduler_loop$3052	const PTR FTN()void  size(2) Largest target is 1
		 -> periodic_task_1024tk(), periodic_task_32tk(), TASK_DUMMY(), periodic_task_8tk(), 
		 -> periodic_task_4tk(), periodic_task_2tk(), periodic_task_tk(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    app_conver_ascii2int@lptr_destiny_data	PTR unsigned short  size(2) Largest target is 2
		 -> ruw_value(BANK0[2]), ruw_channel(BANK0[2]), 

    app_conver_ascii2int@lptr_data	PTR unsigned char  size(2) Largest target is 1
		 -> app_CDM_DMX_Value_CHK_CON@lub_cmd_character(COMRAM[1]), 

    rptr_value_storage	PTR unsigned short  size(2) Largest target is 2
		 -> ruw_value(BANK0[2]), ruw_channel(BANK0[2]), 

    rptr_Cmd_Functions	PTR FTN(unsigned char ,)void [1] size(2) Largest target is 1
		 -> app_CDM_DMX_Value_CHK_CON(), 

    tasks_list	const PTR FTN()void [16] size(2) Largest target is 1
		 -> periodic_task_1024tk(), periodic_task_32tk(), TASK_DUMMY(), periodic_task_8tk(), 
		 -> periodic_task_4tk(), periodic_task_2tk(), periodic_task_tk(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _app_main_dxm_command_fct->_app_CDM_DMX_Value_CHK_CON
    _app_CDM_DMX_Value_CHK_CON->_app_conver_ascii2int
    _app_conver_ascii2int->___awmod
    _app_HD44780_Mngr->_app_HD44780_CallInitDelay
    _app_HD44780_Mngr->_app_HD44780_PrepareCMD
    _bin2bcd->___aldiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _app_TMR1_DMX_TX_ISR->_app_DMX_TX_DisableTXPort
    _app_TMR1_DMX_TX_ISR->_app_DMX_TX_EnableTXPort

Critical Paths under _main in BANK0

    _main->_scheduler_loop
    _periodic_task_tk->_app_main_dxm_command_fct
    _app_CDM_DMX_Value_CHK_CON->_app_conver_ascii2int
    _periodic_task_2tk->_app_HD44780_DisplayUpdate
    _app_HD44780_DisplayUpdate->_bin2bcd
    _bin2bcd->___aldiv

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6064
                            _InitApp
                  _SYSTEM_Initialize
                     _scheduler_loop
 ---------------------------------------------------------------------------------
 (1) _scheduler_loop                                       3     3      0    5877
                                             12 BANK0      3     3      0
                         _TASK_DUMMY *
               _periodic_task_1024tk *
                  _periodic_task_2tk *
                 _periodic_task_32tk *
                  _periodic_task_4tk *
                  _periodic_task_8tk *
                   _periodic_task_tk *
             _sched_util_task_finder
 ---------------------------------------------------------------------------------
 (2) _sched_util_task_finder                               7     5      2     179
                                             15 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _periodic_task_tk                                     0     0      0    1453
           _app_main_dxm_command_fct
 ---------------------------------------------------------------------------------
 (3) _app_main_dxm_command_fct                             3     3      0    1453
                                              9 BANK0      3     3      0
                       _EUSART2_Read
          _app_CDM_DMX_Value_CHK_CON *
               _app_Evaluate_Command
 ---------------------------------------------------------------------------------
 (4) _app_Evaluate_Command                                 3     3      0      93
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _app_CDM_DMX_Value_CHK_CON                            1     1      0    1258
                                             22 COMRAM     1     1      0
               _app_conver_ascii2int
 ---------------------------------------------------------------------------------
 (5) _app_conver_ascii2int                                10     5      5    1162
                                             21 COMRAM     1     1      0
                                              0 BANK0      9     4      5
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     587
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Read                                         1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _periodic_task_8tk                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _periodic_task_4tk                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _periodic_task_32tk                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _periodic_task_2tk                                    0     0      0    4245
          _app_HD44780_DisplayUpdate
                   _app_HD44780_Mngr
 ---------------------------------------------------------------------------------
 (3) _app_HD44780_Mngr                                     0     0      0     690
          _app_HD44780_CallInitDelay
                   _app_HD44780_Init
             _app_HD44780_PrepareCMD
                 _app_HD44780_SenCmd
 ---------------------------------------------------------------------------------
 (4) _app_HD44780_SenCmd                                   1     1      0      26
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _app_HD44780_PrepareCMD                               2     1      1     492
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _app_HD44780_CallInitDelay                            2     1      1     172
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _app_HD44780_DisplayUpdate                            1     1      0    3555
                                             10 BANK0      1     1      0
                          _bcd2ascii
                            _bin2bcd
 ---------------------------------------------------------------------------------
 (4) _bin2bcd                                              4     2      2    3555
                                              6 BANK0      4     2      2
                            ___aldiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1324
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     857
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     599
                                             15 COMRAM     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _bcd2ascii                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _periodic_task_1024tk                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TASK_DUMMY                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     187
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (3) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      86
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      86
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                   _app_HD44780_Init
 ---------------------------------------------------------------------------------
 (4) _app_HD44780_Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManagerHigh                      14    14      0      46
                                              1 COMRAM    14    14      0
               _EUSART1_Transmit_ISR
                _EUSART2_Receive_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0      46
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        0     0      0      46
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0      46
                _app_TMR1_DMX_TX_ISR
 ---------------------------------------------------------------------------------
 (11) _app_TMR1_DMX_TX_ISR                                 0     0      0      46
           _app_DMX_TX_DisableTXPort
            _app_DMX_TX_EnableTXPort
 ---------------------------------------------------------------------------------
 (12) _app_DMX_TX_EnableTXPort                             1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _app_DMX_TX_DisableTXPort                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART2_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0       0
                        _app_DMX_ISR
 ---------------------------------------------------------------------------------
 (9) _app_DMX_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
     _app_HD44780_Init
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_Start
     _TMR4_Initialize
       _TMR4_Start
   _scheduler_loop
     _TASK_DUMMY *
     _periodic_task_1024tk *
     _periodic_task_2tk *
       _app_HD44780_DisplayUpdate
         _bcd2ascii
         _bin2bcd
           ___aldiv
           ___lwdiv
           ___wmul
       _app_HD44780_Mngr
         _app_HD44780_CallInitDelay
         _app_HD44780_Init
         _app_HD44780_PrepareCMD
         _app_HD44780_SenCmd
     _periodic_task_32tk *
     _periodic_task_4tk *
     _periodic_task_8tk *
     _periodic_task_tk *
       _app_main_dxm_command_fct
         _EUSART2_Read
         _app_CDM_DMX_Value_CHK_CON *
           _app_conver_ascii2int
             ___awmod
         _app_Evaluate_Command *
     _sched_util_task_finder *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _EUSART1_Transmit_ISR
     _app_DMX_ISR
   _EUSART2_Receive_ISR
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
         _app_TMR1_DMX_TX_ISR
           _app_DMX_TX_DisableTXPort
           _app_DMX_TX_EnableTXPort

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0     200      35       13.8%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      83       5       81.9%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      4F       1       84.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D2       6        0.0%
DATA                 0      0     2D2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Nov 10 11:09:01 2016

                     ?_app_conver_ascii2int 00CE            __end_of_TMR2_SetInterruptHandler 1D32  
                  _eusart1TxBufferRemaining 00E1           __end_of_app_CDM_DMX_Value_CHK_CON 16E6  
                               __CFG_CP$OFF 000000                         ___wmul@multiplicand 0045  
                                       l360 159E                                         l388 1138  
                                       _GIE 007F97                                         _PR2 000FBC  
                                       _PR4 000FB6                                __CFG_CPD$OFF 000000  
                                       u680 1496                         _ruw_DMXColorCounter 009A  
                           _timer1ReloadVal 004E                                ___awmod@sign 0048  
                            _scheduler_loop 15DE                             _TMR2_Initialize 1B10  
                                       prod 000FF3                                         tosl 000FFD  
                                       wreg 000FE8                                __CFG_LVP$OFF 000000  
                              __CFG_ZCD$OFF 000000                                        l1101 15DE  
                                      l4101 177A                                        l1624 18C8  
                                      l4201 18A2                                        l4121 17C0  
                                      l4113 17A8                                        l4105 1788  
                                      l4107 1790                                        l4131 1358  
                                      l4109 1794                                        l4117 17B2  
                                      l3351 155A                                        l4127 12F4  
                                      l4135 1392                                        l4311 184C  
                                      l4161 123A                                        l4209 18BE  
                                      l3361 15CA                                        l4233 1AA4  
                                      l4129 1326                                        l4321 15DE  
                                      l4171 1272                                        l4155 1220  
                                      l3363 15CC                                        l4243 1ACA  
                                      l3611 19D8                                        l3365 15D0  
                                      l3461 1112                                        l3453 10D2  
                                      l4261 17E8                                        l3613 19DA  
                                      l4333 160C                                        l4167 1260  
                                      l4183 12B6                                        l3607 19B6  
                                      l4169 126E                                        l3457 10F2  
                                      l3473 113E                                        l4097 176E  
                                      l4257 17E2                                        l3617 19E6  
                                      l4187 12D2                                        l4179 12A6  
                                      l3467 112E                                        l3475 115A  
                                      l4275 1682                                        l4197 1896  
                                      l3485 118E                                        l4199 189E  
                                      l3497 11DA                                        l3489 11AC  
                                      l4387 1CEE  app_CDM_DMX_Value_CHK_CON@lub_cmd_character 004A  
        __size_of_app_HD44780_DisplayUpdate 0024                                        u2000 1572  
                                      u2020 157C                                        u2110 15B0  
                                      u2015 1574                                        u2040 1586  
                                      u2105 15A8                                        u2130 15BA  
                                      u2035 157E                                        u2060 1590  
                                      u2125 15B2                                        _LATA 000F83  
                                      u2150 15C4                                        _LATB 000F84  
                                      u2055 1588                                        _LATC 000F85  
                                      _LATD 000F86                                        u2145 15BC  
                                      _LATE 000F87                                        u2090 15A6  
                                      u2075 1592                                        u2165 15C6  
                                      u2185 1C9E                                        u2186 1CA0  
                                      _T2PR 000FBC                      ??_periodic_task_1024tk 0043  
                                      u2474 19CC                                        _T4PR 000FB6  
                                      u2475 19C6                                        u3428 164E  
                                      u1950 1558                                        u1970 1562  
                                      u3388 1868                                        u1985 1564  
                                      _TMR2 000FBB                                        _TMR4 000FB5  
                                      _WPUA 000F10                                        _WPUB 000F18  
                                      _WPUC 000F20                                        _WPUD 000F25  
                                      _WPUE 000F2D                       ??_EUSART2_Receive_ISR 0034  
                   _app_DMX_TX_EnableTXPort 19EA                               __CFG_FCMEN$ON 000000  
                                      _main 1CEA                               ?_EUSART2_Read 0034  
                                      fsr0h 000FEA                                        fsr1h 000FE2  
                                      fsr0l 000FE9                                        fsr2h 000FDA  
                                      fsr1l 000FE1                                        indf2 000FDF  
                                      fsr2l 000FD9                                 _ruw_channel 00A2  
                                      btemp 0050                         bin2bcd@luw_Bin_Data 00D4  
                                      pclat 000FFA                                _ruw_MaxCount 000F  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 00BC               __size_of_app_Evaluate_Command 0064  
                           _rub_CounterMode 0028                  ??_TMR1_SetInterruptHandler 0045  
                             __CFG_CSWEN$ON 000000                                ___param_bank 000010  
                           __end_of_InitApp 1D52                               __CFG_SCANE$ON 000000  
                               ?_TASK_DUMMY 0034              __size_of_OSCILLATOR_Initialize 0020  
             __end_of_OSCILLATOR_Initialize 1C94                             __end_of___aldiv 12E4  
                                     ?_main 0034                      __end_of_scheduler_loop 1662  
                             __CFG_WDTE$OFF 000000                             __end_of___awmod 17CA  
                           _TMR1_StartTimer 1D6C                                       _T1CLK 000FD2  
                                     _T1CON 000FCF                                       _T2CON 000FBD  
                                     _LATB0 007C20                             __end_of_bin2bcd 10CC  
                                     _LATD1 007C31                                       _LATD2 007C32  
                                     _LATD3 007C33                                       _LATD4 007C34  
                                     _LATD5 007C35                                       _LATD6 007C36  
                                     _LATD7 007C37                                       _T4CON 000FB7  
                                     _T2HLT 000FBE                                       _T4HLT 000FB8  
                            __CFG_DEBUG$OFF 000000                             __end_of___lwdiv 18D2  
                                     _T2TMR 000FBB                                       _T2RST 000FC0  
                                     _T4TMR 000FB5                                       _T4RST 000FBA  
                                     i2l296 1938                                       i2l763 007A  
                                     _OSCEN 000EDC                                       _TMR1H 000FCE  
                                     _TX1IE 00762C                                       _TMR1L 000FCD  
                 _lub_VurtualUartBitCounter 0023                                       _TRISA 000F88  
                                     _TRISB 000F89                                       _TRISC 000F8A  
                                     _TRISD 000F8B                                       _TRISE 000F8C  
                        _rptr_Cmd_Functions 00CA                               __CFG_WRT0$OFF 000000  
                           _TMR4_Initialize 1C54                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                               __CFG_WRT3$OFF 000000  
                      _EUSART1_Transmit_ISR 1D5E                              __CFG_EBTR0$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                            __CFG_EBTR3$OFF 000000                 __size_of_periodic_task_32tk 0002  
                          __end_of_TMR1_ISR 1D0E                            __end_of_TMR2_ISR 1D46  
                             __CFG_WRTB$OFF 000000                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                 ??_app_HD44780_CallInitDelay 0044  
                            __CFG_EBTRB$OFF 000000                                 ?_TMR2_Start 0034  
                               ?_TMR4_Start 0034                          __CFG_MCLRE$EXTMCLR 000000  
                   __end_of_PWM3_Initialize 1CC0                     __end_of_TMR1_Initialize 191A  
        sched_util_task_finder@lub_ExitFlag 0048                                       pclath 000FFA  
                                     tablat 000FF5                        __size_of_app_DMX_ISR 00B2  
                            ??_EUSART2_Read 0043           __end_of_app_HD44780_DisplayUpdate 1C0C  
                                     status 000FD8              app_HD44780_PrepareCMD@lub_type 0044  
                  __end_of_app_HD44780_Init 1CD6                    __end_of_app_HD44780_Mngr 1200  
                    ??_app_conver_ascii2int 00D3                             __initialization 16E6  
                __end_of_EUSART1_Initialize 1B10                                __end_of_main 1CFC  
                  _app_DMX_TX_DisableTXPort 1A28                     __end_of_TMR2_Initialize 1B42  
                  ??_app_HD44780_PrepareCMD 0044                    _TMR2_SetInterruptHandler 1D28  
                                    ??_main 004B                             ?_scheduler_loop 0034  
                             __activetblptr 000003                app_DMX_TX_EnableTXPort@state 0034  
                   _lub_VirtualUartRxBuffer 0080                       ?_EUSART1_Transmit_ISR 0034  
                 ??_app_DMX_TX_EnableTXPort 0034                  __end_of_EUSART2_Initialize 19A8  
                  _eusart2TxBufferRemaining 00E2                                      _ANSELA 000F11  
                                    _ANSELB 000F19                                      _ANSELC 000F21  
                                    _ANSELD 000F26                                      _ANSELE 000F2E  
                       __size_of_TASK_DUMMY 0002                                      _T1GATE 000FD1  
                                    _T1GCON 000FD0                                      _RA0PPS 000EE7  
                                    _RC1REG 000F99                                      _RB0PPS 000EEF  
                                    _RC2REG 000E99                                      _RC1STA 000F9D  
                                    _RC2STA 000E9D                                      _ODCONA 000F0F  
                                    _ODCONB 000F17                                      _ODCONC 000F1F  
                                    _ODCOND 000F24                                      _ODCONE 000F2C  
                            __CFG_WDTCCS$SC 000000                                      i2l3213 1A24  
                                    i2l3341 1946                                      i2l3333 192A  
                                    i2l3327 191C                                      i2l3345 194C  
                                    i2l3551 1500                                      i2l3199 1A62  
                                    i2l3561 1530                                      i2l3553 151A  
                                    i2l3537 149C                                      i2l3539 14BA  
                                    i2l3563 1536                                      i2l3549 14F4  
                                    i2l3681 1B50                                      i2l3689 1B70  
                                    i2l3973 005E                                      i2l3967 0050  
                                    i2l3979 006C                                      _TABLAT 000FF5  
                  _app_main_dxm_command_fct 182E                                      _OSCFRQ 000EDE  
                      _rub_CHMeasureCounter 0026                                      _NVMDAT 000F80  
                                    _TMR2IE 007631                                      _TX1REG 000F9A  
                                    _TX2REG 000E9A                                      _TX1STA 000F9E  
                                    _TX2STA 000E9E                           ?_periodic_task_tk 0034  
      app_conver_ascii2int@lub_char_counter 00D2                                   ??_InitApp 0043  
                            bin2bcd@luw_aux 00D6                          ??_periodic_task_tk 004B  
                            __CFG_PWRTE$OFF 000000                              __CFG_XINST$OFF 000000  
                 _app_HD44780_CallInitDelay 1D0E        __end_of_TMR1_DefaultInterruptHandler 1D5E  
     __size_of_TMR1_DefaultInterruptHandler 0006                _TMR1_DefaultInterruptHandler 1D58  
                   __end_of_TMR1_StartTimer 1D70                            _rub_ButtonStatus 0004  
                                 ??___aldiv 004B                                      ___wmul 1B9C  
                            __CFG_STVREN$ON 000000                                   ??___awmod 0047  
                                 ??_bin2bcd 004B                                   ??___lwdiv 0047  
                       __size_of_TMR2_Start 0004                         __size_of_TMR4_Start 0004  
                   __end_of_TMR4_Initialize 1C74                                      clear_0 172C  
                                    clear_1 173E                                      clear_2 174A  
                           ___awmod@divisor 0045                __size_of_app_TMR1_DMX_TX_ISR 0048  
                           ___awmod@counter 0047                           _scheduler_counter 00A0  
                              __pdataCOMRAM 004B                                __mediumconst 0000  
                 _lub_VirtualUartTempBuffer 0022                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                        __size_of_bcd2ascii 003A                            _rub_HD_NextState 002B  
  TMR2_SetInterruptHandler@InterruptHandler 0043    TMR1_SetInterruptHandler@InterruptHandler 0043  
                           _eusart1RxBuffer 0060               __size_of_INTERRUPT_Initialize 0014  
                     __end_of_TMR1_CallBack 1C54                             _eusart2RxBuffer 0070  
                           _eusart1TxBuffer 0068                            ?_TMR1_Initialize 0034  
                          ?_PWM3_Initialize 0034            ??_INTERRUPT_InterruptManagerHigh 0035  
           ?_INTERRUPT_InterruptManagerHigh 0034                           _SYSTEM_Initialize 1BC2  
                           _eusart2TxBuffer 0078                                  __accesstop 0060  
                   __end_of__initialization 1750                       __end_of_TMR2_CallBack 1C30  
                           _rub_SlotCounter 002E                          ?_SYSTEM_Initialize 0034  
                             ___rparam_used 000001                              __pcstackCOMRAM 0034  
           __end_of_app_DMX_TX_EnableTXPort 1A28                                __pidataBANK0 1B74  
                       ??_SYSTEM_Initialize 0047                                   ?_TMR1_ISR 0034  
                                 ?_TMR2_ISR 0034               ?_TMR1_DefaultInterruptHandler 0034  
                          ?_TMR2_Initialize 0034             __size_of_app_HD44780_PrepareCMD 0016  
         sched_util_task_finder@sch_counter 0043                        __end_of_EUSART2_Read 1AD8  
                     _lub_VirtualUartRxHead 0020                      ??_EUSART1_Transmit_ISR 0034  
                __end_of_app_HD44780_SenCmd 15DE                       _lub_VirtualUartRxTail 0021  
                           _rub_TriggerFlag 0030                   _rub_ButtonDebounceCounter 0001  
                 __end_of_SYSTEM_Initialize 1BE8                               _eusart1RxHead 0015  
                             _eusart2RxHead 001A                               _eusart1TxHead 0017  
                             _eusart1RxTail 0016                               _eusart2TxHead 001C  
                                __pbssBANK0 0060                               _eusart2RxTail 001B  
                             _eusart1TxTail 0018                               _eusart2TxTail 001D  
   app_HD44780_CallInitDelay@lub_next_state 0043                                  __pnvCOMRAM 004E  
                     _TMR4_InterruptHandler 008E                       EUSART2_Read@readValue 0043  
                         __end_of_bcd2ascii 1AA0                                ??_TASK_DUMMY 0043  
                                   ?___wmul 0043                            ?_TMR1_StartTimer 0034  
                                ??_TMR1_ISR 0034                             __CFG_PPS1WAY$ON 000000  
                                ??_TMR2_ISR 0035                    ??_sched_util_task_finder 0045  
                ?_app_CDM_DMX_Value_CHK_CON 0034                            ?_TMR4_Initialize 0034  
              __end_of_app_Evaluate_Command 182E                           _periodic_task_2tk 1D1E  
                         _periodic_task_4tk 1D7C                           _periodic_task_8tk 1D7A  
                                   _SP1BRGH 000F9C                                     _SP1BRGL 000F9B  
                                   _SP2BRGH 000E9C                                     _SP2BRGL 000E9B  
                                   _OSCCON1 000ED8                                     _OSCCON3 000EDA  
               __end_of_EUSART2_Receive_ISR 1B74                                     _TBLPTRH 000FF7  
                                   _TBLPTRL 000FF6                                     _TBLPTRU 000FF8  
                                   _NVMADRH 000F7F                                     _NVMADRL 000F7E  
                        ?_periodic_task_2tk 0034                                     _OSCTUNE 000EDD  
                                   _PWM3DCH 000FA4                          ?_periodic_task_4tk 0034  
                                   _PWM3DCL 000FA3                                     _NVMCON2 000F82  
                        ?_periodic_task_8tk 0034                                     _PWM3CON 000FA5  
                                   _PPSLOCK 000EA0                                ??_TMR2_Start 0043  
                              ??_TMR4_Start 0043                          __end_of_TASK_DUMMY 1D7A  
                    _app_HD44780_PrepareCMD 1C94                         _rsub_EmulationFlags 0024  
                       ??_periodic_task_2tk 004B                         ??_periodic_task_4tk 0043  
                       ??_periodic_task_8tk 0043               __size_of_periodic_task_1024tk 0002  
                ??_app_DMX_TX_DisableTXPort 0034                                     _InitApp 1D4C  
                                   __Hparam 0000                                     __Lparam 0000  
                ??_TMR2_SetInterruptHandler 0045                           ?_app_HD44780_Init 0034  
                         ?_app_HD44780_Mngr 0034                  __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                                   ___aldiv 1200                            ??_scheduler_loop 00DA  
                                   ___awmod 175A                          ??_app_HD44780_Init 0043  
                        ??_app_HD44780_Mngr 0045                             __size_of___wmul 0026  
                                   _bin2bcd 0F32                                     ___lwdiv 1880  
                              __psmallconst 0F00                          __end_of_TMR2_Start 1D6C  
                                   __pcinit 16E6                          __end_of_TMR4_Start 1D68  
                                   __ramtop 0F00                   __end_of_periodic_task_2tk 1D28  
                 __end_of_periodic_task_4tk 1D7E                                     __ptext0 1CEA  
                                   __ptext1 15DE                                     __ptext2 19A8  
                                   __ptext3 1D74                                     __ptext4 1D76  
                                   __ptext5 1D78                                     __ptext6 1D7A  
                                   __ptext7 1D7C                                     __ptext8 1D1E  
                                   __ptext9 1D46                   __end_of_periodic_task_8tk 1D7C  
        __size_of_app_HD44780_CallInitDelay 0010              ??_TMR1_DefaultInterruptHandler 0034  
                                 _T1CONbits 000FCF                  __end_of_periodic_task_32tk 1D78  
                     _OSCILLATOR_Initialize 1C74                                   _T2CONbits 000FBD  
                ??_app_main_dxm_command_fct 00D7                            ___awmod@dividend 0043  
         __size_of_TMR1_SetInterruptHandler 000A                            ___aldiv@dividend 0043  
                                 _T4CONbits 000FB7                          _EUSART1_Initialize 1AD8  
                  ??_PIN_MANAGER_Initialize 0043                   ?_TMR1_SetInterruptHandler 0043  
                                 _T2HLTbits 000FBE                                   _T4HLTbits 000FB8  
                             ??_app_DMX_ISR 0034                  __size_of_SYSTEM_Initialize 0026  
                          _ruw_TriggerTimer 009C                              _rub_DataBuffer 0029  
                      end_of_initialization 1750                                   _T2RSTbits 000FC0  
                       ?_EUSART1_Initialize 0034                                  _rub_BCDDec 0009  
                                _rub_BCDCen 0007                                   _T4RSTbits 000FBA  
                       _app_TMR1_DMX_TX_ISR 191A                                  _rub_BCDUni 0096  
                ?_app_HD44780_DisplayUpdate 0034                          _EUSART2_Initialize 1962  
     app_conver_ascii2int@lptr_destiny_data 00D0                            ___aldiv@quotient 00D0  
                                _tasks_list 0F01                                     postdec1 000FE5  
                                   postdec2 000FDD               __size_of_app_conver_ascii2int 00DE  
                                   postinc0 000FEE                                     postinc2 000FDE  
                     __size_of_EUSART2_Read 0038             __size_of_sched_util_task_finder 0042  
                      ??_EUSART1_Initialize 0043                       __CFG_WDTCPS$WDTCPS_31 000000  
                       ?_EUSART2_Initialize 0034                              _rub_BreakState 0025  
                      ?_app_TMR1_DMX_TX_ISR 0034                   __size_of_periodic_task_tk 0006  
                                 _PORTAbits 000F8D                                   _PORTBbits 000F8E  
                                 _PORTCbits 000F8F           __end_of_app_HD44780_CallInitDelay 1D1E  
                          __CFG_FEXTOSC$OFF 000000                        ??_EUSART2_Initialize 0043  
                       __end_of_app_DMX_ISR 154C                                _EUSART2_Read 1AA0  
                      _app_Evaluate_Command 17CA                __end_of_INTERRUPT_Initialize 1CEA  
      __end_of_TMR2_DefaultInterruptHandler 1D58       __size_of_TMR2_DefaultInterruptHandler 0006  
              _TMR2_DefaultInterruptHandler 1D52                       ??_app_TMR1_DMX_TX_ISR 0035  
                            __end_of___wmul 1BC2                               __pidataCOMRAM 1D70  
                         __size_of_TMR1_ISR 0012                           __size_of_TMR2_ISR 000A  
                              _Execute_task 0013                  __size_of_periodic_task_2tk 000A  
                __size_of_periodic_task_4tk 0002                  __size_of_periodic_task_8tk 0002  
                    ?_OSCILLATOR_Initialize 0034               app_HD44780_PrepareCMD@lub_cmd 0043  
                  ?_app_DMX_TX_EnableTXPort 0034                          _rptr_value_storage 00CC  
                       start_initialization 16E6             __size_of_PIN_MANAGER_Initialize 00D8  
                    _sched_util_task_finder 19A8                      _lub_VirtualUartRxCount 001F  
                        _app_HD44780_SenCmd 154C                   _ruw_DMXBuilderDataCounter 000B  
          __end_of_app_DMX_TX_DisableTXPort 1A66                             _rub_HDInitState 004D  
                     ?_app_Evaluate_Command 0034                            __CFG_LPBOREN$OFF 000000  
                       ?_app_HD44780_SenCmd 0034                    __size_of_PWM3_Initialize 0016  
                  __size_of_TMR1_Initialize 0048                                    ??___wmul 0047  
                               _CCPTMRSbits 000FAE                                 __pdataBANK0 00A6  
               ??_app_CDM_DMX_Value_CHK_CON 004A                                   _bcd2ascii 1A66  
             ?_TMR2_DefaultInterruptHandler 0034                      __size_of_TMR1_CallBack 0024  
                              _euw_MaxCount 00C6                              _eusart1RxCount 0014  
          __end_of_app_main_dxm_command_fct 1880                              _eusart2RxCount 0019  
                          _ruw_DataMeasured 0088                      __size_of_TMR2_CallBack 0024  
                               __pbssBIGRAM 00E3                                 __pbssCOMRAM 0001  
                      ??_app_HD44780_SenCmd 0043               __size_of_EUSART1_Transmit_ISR 0006  
                             __pcstackBANK0 00CE                    __size_of_TMR2_Initialize 0032  
                   ?_app_HD44780_PrepareCMD 0043                                 _app_DMX_ISR 149A  
                                  ?_InitApp 0034                                   __pnvBANK0 00DD  
                          ___lwdiv@dividend 0043                      _PIN_MANAGER_Initialize 13C2  
                                 __pintcode 0008            __end_of_TMR1_SetInterruptHandler 1D3C  
                                  ?___aldiv 0043                                    ?___awmod 0043  
                               _lf_DigitMux 001E                                    ?_bin2bcd 00D4  
                                  ?___lwdiv 0043                                  ?_bcd2ascii 0034  
                          _periodic_task_tk 1D46                __end_of_periodic_task_1024tk 1D76  
                                  _BAUD1CON 000F9F                                    _BAUD2CON 000E9F  
                               __smallconst 0F00                app_conver_ascii2int@lub_temp 0049  
                  __size_of_TMR1_StartTimer 0004                   __size_of_app_HD44780_Init 0016  
                 __size_of_app_HD44780_Mngr 0134              __end_of_app_HD44780_PrepareCMD 1CAA  
                         _rub_CDM_FCT_Index 004B                                   _euw_OnCFG 00C8  
                  __size_of_TMR4_Initialize 0020                            ___lwdiv@quotient 0048  
                                  _T2CLKCON 000FBF                                    _T4CLKCON 000FB9  
          app_Evaluate_Command@lptr_Command 0045                                 _T2INPPSbits 000EAB  
                      _INTERRUPT_Initialize 1CD6                   _app_CDM_DMX_Value_CHK_CON 1662  
                                 _sch_alarm 0033                               _TMR1_CallBack 1C30  
                           ___aldiv@divisor 0047                          _periodic_task_32tk 1D76  
                  _rub_CountDebounceCounter 0027                __size_of_EUSART2_Receive_ISR 0032  
                           ___aldiv@counter 00CE                              ___wmul@product 0047  
                    ??_app_Evaluate_Command 0043                               _TMR2_CallBack 1C0C  
                                  _IPR3bits 000EBD                 ??_app_HD44780_DisplayUpdate 00D8  
                                  _IPR4bits 000EBE                                    _PIE3bits 000EC5  
                                  _PIE4bits 000EC6                         __CFG_BORV$VBOR_2P45 000000  
                                  i2u244_48 1C40                                    i2u182_40 1A60  
                                  i2u246_48 1C1C                                    i2u184_40 1A22  
                       ?_periodic_task_32tk 0034                                    _PIR3bits 000ECD  
                                  _PIR4bits 000ECE                                    _PIR7bits 000ED1  
                                  _TMR1_ISR 1CFC                                    _TMR2_ISR 1D3C  
                         ??_TMR1_Initialize 0045                           ??_PWM3_Initialize 0043  
         __size_of_app_DMX_TX_DisableTXPort 003E                           ___wmul@multiplier 0043  
                 ?_app_DMX_TX_DisableTXPort 0034                                   _ruw_OnCFG 0011  
                                 _ruw_Count 0098              ??_TMR2_DefaultInterruptHandler 0035  
         __size_of_TMR2_SetInterruptHandler 000A                        ??_periodic_task_32tk 0043  
                 ?_TMR2_SetInterruptHandler 0043                __end_of_app_conver_ascii2int 13C2  
                                 _ruw_value 00A4                                   copy_data0 16FA  
                     ?_INTERRUPT_Initialize 0034                              ?_TMR1_CallBack 0034  
                      _ruw_TxDMXDataCounter 009E                           ??_TMR2_Initialize 0045  
                            ?_TMR2_CallBack 0034                             _rub_7segSymbols 0F21  
         __size_of_app_main_dxm_command_fct 0052                   ?_app_main_dxm_command_fct 0034  
                          __size_of_InitApp 0006                                    __Hrparam 0000  
                                  __Lrparam 0000                          __CFG_BOREN$SBORDIS 000000  
                   ??_OSCILLATOR_Initialize 0043                            __size_of___aldiv 00E4  
                          __size_of___awmod 0070                            __size_of_bin2bcd 019A  
               __size_of_EUSART1_Initialize 0038                                 ??_bcd2ascii 0043  
                          __size_of___lwdiv 0052                               _rub_TextTimer 002F  
                  _TMR1_SetInterruptHandler 1D32                                _rub_DMX_DATA 00E3  
                 _app_HD44780_DisplayUpdate 1BE8                       _TMR1_InterruptHandler 00DD  
                   ?_sched_util_task_finder 0043                     __size_of_scheduler_loop 0084  
                           ___lwdiv@divisor 0045                  ?_app_HD44780_CallInitDelay 0043  
                           ___lwdiv@counter 0047         sched_util_task_finder@lub_TaskIndex 0049  
                                  __ptext10 182E                                    __ptext11 17CA  
                                  __ptext20 1BE8                                    __ptext12 1662  
                                  __ptext21 0F32                                    __ptext13 12E4  
                                _T1GCONbits 000FD0                                    __ptext30 1D68  
                                  __ptext22 1B9C                                    __ptext14 175A  
                                  __ptext31 1D28                                    __ptext23 1880  
                                  __ptext15 1AA0                                    __ptext40 1AD8  
                                  __ptext32 18D2                                    __ptext24 1200  
                                  __ptext16 10CC                                    __ptext41 1D4C  
                                  __ptext33 1D6C                                    __ptext25 1A66  
                                  __ptext17 154C                                    __ptext50 1CFC  
                                  __ptext42 1CC0                                    __ptext34 1D32  
                                  __ptext26 1BC2                                    __ptext18 1C94  
                                  __ptext51 1C30                                    __ptext35 1CAA  
                                  __ptext27 1C54                                    __ptext19 1D0E  
                                  __ptext52 1D58                                    __ptext44 1D3C  
                                  __ptext36 13C2                                    __ptext28 1D64  
                                  __ptext53 1B42                                    __ptext45 1C0C  
                                  __ptext37 1C74                                    __ptext29 1B10  
                                  __ptext54 1D5E                                    __ptext46 1D52  
                                  __ptext38 1CD6                                    __ptext55 149A  
                                  __ptext47 191A                                    __ptext39 1962  
                                  __ptext56 0000                                    __ptext48 19EA  
                                  __ptext49 1A28               app_DMX_TX_DisableTXPort@state 0034  
                         ??_TMR1_StartTimer 0043                 __size_of_EUSART2_Initialize 0046  
                         ??_TMR4_Initialize 0043            __size_of_app_DMX_TX_EnableTXPort 003E  
                             __size_of_main 0012                        _periodic_task_1024tk 1D74  
                      __CFG_WDTCWS$WDTCWS_7 000000                                _rub_DigCount 002A  
               __end_of_app_TMR1_DMX_TX_ISR 1962                app_HD44780_SenCmd@lub_return 0043  
                                _RC1STAbits 000F9D                                    _rub_Line 002C  
                                _RC2STAbits 000E9D                                    int$flags 0050  
               PIN_MANAGER_Initialize@state 0043                        _raub_DataBufferLine1 00A6  
                      _raub_DataBufferLine2 00B6              __end_of_sched_util_task_finder 19EA  
                                _INTCONbits 000FF2                            _app_HD44780_Init 1CC0  
                          _app_HD44780_Mngr 10CC                                 _NVMCON1bits 000F81  
                               _rub_BCDCmil 0090                                 _rub_BCDDmil 0092  
                         _rub_set_Value_cnt 0032                                 _rub_BCDUmil 0094  
                    ??_INTERRUPT_Initialize 0043                             ??_TMR1_CallBack 0034  
                              ?_app_DMX_ISR 0034                     __end_of_rub_7segSymbols 0F31  
                               _rub_HDDelay 004C                                    intlevel2 0000  
                        __end_of_tasks_list 0F21          app_HD44780_CallInitDelay@lub_delay 0044  
                           ??_TMR2_CallBack 0035                    __end_of_periodic_task_tk 1D4C  
                               _rub_SEQFLAG 002D                       ?_periodic_task_1024tk 0034  
                   ?_PIN_MANAGER_Initialize 0034                           __CFG_CLKOUTEN$OFF 000000  
                               _PPSLOCKbits 000EA0                __end_of_EUSART1_Transmit_ISR 1D64  
        __size_of_app_CDM_DMX_Value_CHK_CON 0084                        _app_conver_ascii2int 12E4  
                                _TASK_DUMMY 1D78                         _EUSART2_Receive_ISR 1B42  
    __end_of_INTERRUPT_InterruptManagerHigh 00B6     __size_of_INTERRUPT_InterruptManagerHigh 00AE  
            _INTERRUPT_InterruptManagerHigh 0008                                 _rub_TxState 0031  
                                _RX2PPSbits 000E8D                                ___aldiv@sign 00CF  
               __size_of_app_HD44780_SenCmd 0092                                  _TMR2_Start 1D68  
                                _TMR4_Start 1D64              __end_of_PIN_MANAGER_Initialize 149A  
                      ?_EUSART2_Receive_ISR 0034  app_main_dxm_command_fct@lub_read_character 00D9  
             app_conver_ascii2int@lptr_data 00CE                       _TMR2_InterruptHandler 00DF  
                           _TMR1_Initialize 18D2                             _PWM3_Initialize 1CAA  
                              _ruw_HDBuffer 000D  
