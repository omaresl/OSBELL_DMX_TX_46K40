Version 3.2 HI-TECH Software Intermediate Code
[; ;OS_SEBELL_sched_cfg.h: 12: typedef unsigned short T_SCH_CNT;
[; ;OS_SEBELL_sched_util.h: 18: unsigned char sched_util_task_finder(T_SCH_CNT sch_counter);
"12 OS_SEBELL/OS_SEBELL_sched_util.c
[v _sched_util_task_finder `(uc ~T0 @X0 1 ef1`us ]
"13
{
[; ;OS_SEBELL_sched_util.c: 12: unsigned char sched_util_task_finder(T_SCH_CNT sch_counter)
[; ;OS_SEBELL_sched_util.c: 13: {
[e :U _sched_util_task_finder ]
"12
[v _sch_counter `us ~T0 @X0 1 r1 ]
"13
[f ]
"15
[v _lub_ExitFlag `uc ~T0 @X0 1 a ]
[; ;OS_SEBELL_sched_util.c: 15: unsigned char lub_ExitFlag = 0x01;
[e = _lub_ExitFlag -> -> 1 `i `uc ]
"17
[v _lub_TaskIndex `uc ~T0 @X0 1 a ]
[; ;OS_SEBELL_sched_util.c: 17: unsigned char lub_TaskIndex = 0x00;
[e = _lub_TaskIndex -> -> 0 `i `uc ]
[; ;OS_SEBELL_sched_util.c: 19: for(lub_TaskIndex = 0; (lub_TaskIndex < ((sizeof(T_SCH_CNT)*8) - 1)) && (lub_ExitFlag == 0x01); lub_TaskIndex++)
"19
{
[e = _lub_TaskIndex -> -> 0 `i `uc ]
[e $U 5  ]
"20
[e :U 2 ]
[; ;OS_SEBELL_sched_util.c: 20: {
{
[; ;OS_SEBELL_sched_util.c: 22: if(((sch_counter >> lub_TaskIndex) & 0x01) == 0x01)
"22
[e $ ! == & >> -> _sch_counter `ui _lub_TaskIndex -> -> 1 `i `ui -> -> 1 `i `ui 6  ]
[; ;OS_SEBELL_sched_util.c: 23: {
"23
{
[; ;OS_SEBELL_sched_util.c: 25: lub_ExitFlag = 0x00;
"25
[e = _lub_ExitFlag -> -> 0 `i `uc ]
"26
}
[e :U 6 ]
"27
}
"19
[e ++ _lub_TaskIndex -> -> 1 `i `uc ]
[e :U 5 ]
[e $ && < -> _lub_TaskIndex `ui - * -> # `us `ui -> -> 8 `i `ui -> -> 1 `i `ui == -> _lub_ExitFlag `i -> 1 `i 2  ]
[e :U 3 ]
"27
}
[; ;OS_SEBELL_sched_util.c: 26: }
[; ;OS_SEBELL_sched_util.c: 27: }
[; ;OS_SEBELL_sched_util.c: 29: return(lub_TaskIndex - 1);
"29
[e ) -> - -> _lub_TaskIndex `i -> 1 `i `uc ]
[e $UE 1  ]
[; ;OS_SEBELL_sched_util.c: 30: }
"30
[e :UE 1 ]
}
